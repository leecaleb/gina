{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Image from\"react-native-web/dist/exports/Image\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Alert from\"react-native-web/dist/exports/Alert\";import{Card,CardItem,Button}from'native-base';import{formatDate,fetchData,beautifyTime}from\"../util\";import Reloading from\"../reloading\";import{connect}from'react-redux';import{bindActionCreators}from'redux';import{getMedRequestSuccess}from\"../../redux/parent/actions/index\";import ENV from\"../../variables\";var MedicationRequestCard=function(_React$Component){_inherits(MedicationRequestCard,_React$Component);var _super=_createSuper(MedicationRequestCard);function MedicationRequestCard(props){var _this;_classCallCheck(this,MedicationRequestCard);_this=_super.call(this,props);_this.state={isLoading:true,med_requests:[]};return _this;}_createClass(MedicationRequestCard,[{key:\"componentDidMount\",value:function componentDidMount(){var date=this.props.date;this.fetchData(this.props.child_id,new Date(date.getTime()));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.date!==prevProps.date){this.setState({isLoading:true});this.fetchData(this.props.child_id,new Date(this.props.date.getTime()));}else if(this.props.child_id!==prevProps.child_id){this.setState({isLoading:true});this.fetchData(this.props.child_id,new Date());}}},{key:\"afterFive\",value:function afterFive(){var date=this.props.date;return date.getHours()>=17;}},{key:\"fetchData\",value:function fetchData(student_id,date){var _this2=this;var query;return _regeneratorRuntime.async(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:query=\"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\"+ENV+\"/medicationrequest/student/\"+student_id+\"?date=\"+formatDate(date);_context.next=3;return _regeneratorRuntime.awrap(fetch(query,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(resJson){var data=resJson.data;var med_requests=_this2.get_todays_requests(data,date);_this2.setState({med_requests:med_requests});_this2.setState({isLoading:false});}).catch(function(err){alert('Sorry 取得今日托藥單時電腦出狀況了！請與工程師聯繫: error occurred when fetching medication request');}));case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}},{key:\"get_todays_requests\",value:function get_todays_requests(object_array,date){var med_requests=[];for(var i=0;i<object_array.length;i++){var timestamp=new Date(object_array[i].title);if(timestamp.toDateString()===date.toDateString()){med_requests=object_array[i].data;for(var j=0;j<med_requests.length;j++){med_requests[j].timestamp=new Date(med_requests[j].timestamp);}break;}}return med_requests;}},{key:\"render\",value:function render(){var _this3=this;var med_requests=this.state.med_requests;var isLoading=this.state.isLoading;return React.createElement(Card,{style:{width:'93%'}},React.createElement(View,{style:{flex:1,flexDirection:'row'}},React.createElement(View,{style:{width:56,height:56,justifyContent:'center',alignItems:'center'}},React.createElement(Image,{source:require(\"../../assets/icon-medrequest.png\"),style:{width:48,height:48}})),React.createElement(View,{style:{flex:1}},React.createElement(View,{style:{paddingTop:8}},React.createElement(Text,{style:{fontSize:20}},\"\\u4ECA\\u65E5\\u85E5\\u55AE\")),isLoading?React.createElement(Reloading,null):med_requests.length?React.createElement(View,{style:{flex:1,flexDirection:'row',paddingVertical:8}},React.createElement(ScrollView,{horizontal:true,contentContainerStyle:{paddingBottom:10}},med_requests.map(function(request,index){return React.createElement(TouchableOpacity,{key:request.id,style:{padding:10,backgroundColor:'#F5F5F5',marginRight:15,justifyContent:'center'},underlayColor:\"#ff8944\",onClick:function onClick(){return _this3.props.viewMedRequest(index,med_requests);}},React.createElement(View,{style:{flex:1,flexDirection:'row',alignItems:'center'}},_this3.afterFive()&&request.administered?React.createElement(Image,{source:require(\"../../assets/icon-checked.png\"),style:{width:20,height:20}}):null,React.createElement(Text,{style:{alignSelf:'center',fontSize:25,color:'rgba(0,0,0,0.8)'}},beautifyTime(request.timestamp))));}))):React.createElement(View,{style:{flex:1,paddingVertical:8}},React.createElement(Text,{style:{fontSize:17}},\"\\u6C92\\u6709\\u65B0\\u7D00\\u9304\")))));}}]);return MedicationRequestCard;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{med_requests:state.parent.med_requests};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({getMedRequestSuccess:getMedRequestSuccess},dispatch));};export default connect(mapStateToProps,mapDispatchToProps,null,{forwardRef:true})(MedicationRequestCard);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/medicinerequestcard.js"],"names":["React","Card","CardItem","Button","formatDate","fetchData","beautifyTime","Reloading","connect","bindActionCreators","getMedRequestSuccess","ENV","MedicationRequestCard","props","state","isLoading","med_requests","date","child_id","Date","getTime","prevProps","setState","getHours","student_id","query","fetch","method","headers","Accept","then","res","json","resJson","data","get_todays_requests","catch","err","alert","object_array","i","length","timestamp","title","toDateString","j","width","flex","flexDirection","height","justifyContent","alignItems","require","paddingTop","fontSize","paddingVertical","paddingBottom","map","request","index","id","padding","backgroundColor","marginRight","viewMedRequest","afterFive","administered","alignSelf","color","Component","mapStateToProps","parent","mapDispatchToProps","dispatch","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TextInput, Image, TouchableOpacity, ScrollView, Alert } from 'react-native'\nimport { Card, CardItem, Button } from 'native-base'\nimport { formatDate, fetchData, beautifyTime } from '../util'\nimport Reloading from '../reloading'\nimport { connect } from 'react-redux'\nimport { bindActionCreators} from 'redux'\nimport { getMedRequestSuccess } from '../../redux/parent/actions/index'\nimport ENV from '../../variables'\n\nclass MedicationRequestCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      med_requests: [],\n      // date: new Date()\n    }\n  }\n\n  componentDidMount() {\n    const { date } = this.props\n    this.fetchData(this.props.child_id, new Date(date.getTime()))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      // const { date } = this.props\n      // console.log('this.props.date !== prevProps.date: ', this.props.date.toDateString())\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    } else if (this.props.child_id !== prevProps.child_id) {\n      // console.log('this.props.child_id !== prevProps.child_id')\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date());\n    }\n  }\n\n  afterFive() {\n    const { date } = this.props\n    return date.getHours() >= 17\n  }\n\n  async fetchData(student_id, date) {\n    const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/medicationrequest/student/${student_id}?date=${formatDate(date)}`\n    await fetch(query, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        }\n    })\n      .then((res) => res.json())\n      .then((resJson) => {\n          const {data} = resJson\n          const med_requests = this.get_todays_requests(data, date)\n          this.setState({\n            med_requests\n          })\n          this.setState({ isLoading: false })\n      })\n      .catch(err => {\n          alert('Sorry 取得今日托藥單時電腦出狀況了！請與工程師聯繫: error occurred when fetching medication request')\n      })\n  }\n\n  get_todays_requests(object_array, date) {\n    // const { date } = this.props\n    let med_requests = []\n    for (var i = 0; i < object_array.length; i++) {\n      const timestamp = new Date(object_array[i].title)\n      // console.log('timestamp: ', timestamp.toDateString())\n      // console.log('date: ', date.toDateString())\n      if (timestamp.toDateString() === (date).toDateString()) {\n        med_requests = object_array[i].data\n        for(var j = 0; j < med_requests.length; j++) {\n          med_requests[j].timestamp = new Date(med_requests[j].timestamp)\n        }\n        break\n      }\n    }\n    return med_requests\n  }\n\n  render() {\n    const { med_requests } = this.state\n    const { isLoading } = this.state\n    // console.log('med_requests: ', med_requests)\n    // console.log('med/this.props.date: ', this.props.date.toDateString())\n    return (\n      <Card style={{ width: '93%' }}>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ width: 56, height: 56, justifyContent: 'center', alignItems: 'center'}}>\n            <Image\n              source={require('../../assets/icon-medrequest.png')}\n              style={{\n                  width: 48,\n                  height: 48\n              }}\n            />\n          </View>\n          <View style={{ flex: 1 }}>\n            <View style={{ paddingTop: 8 }}>\n              <Text style={{ fontSize: 20 }}>今日藥單</Text>\n            </View>\n            {isLoading ? \n              <Reloading />\n              : med_requests.length ? \n                <View style={{ flex: 1, flexDirection: 'row', paddingVertical: 8 }}>\n                  <ScrollView horizontal contentContainerStyle={{ paddingBottom: 10}}>\n                  {med_requests.map((request, index) => {\n                    return (\n                      <TouchableOpacity \n                        key={request.id}\n                        style={{\n                          padding: 10,\n                          backgroundColor: '#F5F5F5', \n                          marginRight: 15, \n                          justifyContent: 'center'\n                        }}\n                        underlayColor='#ff8944'\n                        onClick={() => this.props.viewMedRequest(index, med_requests)}\n                      >\n                        <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                          {this.afterFive() && request.administered ? \n                            <Image\n                              source={require('../../assets/icon-checked.png')}\n                              style={{\n                                  width: 20,\n                                  height: 20\n                              }}\n                            />\n                            : null\n                          }\n                          <Text style={{ alignSelf: 'center', fontSize: 25, color: 'rgba(0,0,0,0.8)' }}>{beautifyTime(request.timestamp)}</Text>\n                        </View>\n                      </TouchableOpacity>\n                    )\n                  })}\n                  </ScrollView>\n                </View>\n                : <View style={{ flex: 1, paddingVertical: 8 }}>\n                    <Text style={{ fontSize: 17 }}>沒有新紀錄</Text>\n                </View>\n            }\n          </View>\n        </View>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    med_requests: state.parent.med_requests\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ...bindActionCreators({getMedRequestSuccess}, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true }) (MedicationRequestCard)"]},"metadata":{},"sourceType":"module"}