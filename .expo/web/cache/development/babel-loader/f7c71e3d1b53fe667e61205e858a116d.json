{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/wellnesscard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card } from 'native-base';\nimport { formatDate, fetchData as _fetchData } from \"../util\";\nimport Reloading from \"../reloading\";\n\nvar WellnessCard = function (_React$Component) {\n  _inherits(WellnessCard, _React$Component);\n\n  var _super = _createSuper(WellnessCard);\n\n  function WellnessCard(props) {\n    var _this;\n\n    _classCallCheck(this, WellnessCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      child_id: _this.props.child_id,\n      isLoading: true\n    };\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(WellnessCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var date = this.props.date;\n      this.fetchData(this.state.child_id, new Date(date.getTime()));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.date !== prevProps.date) {\n        this.setState({\n          isLoading: true\n        });\n        this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n      } else if (this.props.child_id !== prevProps.child_id) {\n        this.setState({\n          isLoading: true\n        });\n        this.fetchData(this.props.child_id, new Date());\n      }\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(child_id, date) {\n      var start_date, end_date, wellnessData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_fetchData('wellness', child_id, start_date, end_date));\n\n            case 5:\n              wellnessData = _context.sent;\n              this.setState({\n                wellnessData: wellnessData,\n                isLoading: false\n              });\n\n              if (wellnessData && wellnessData[start_date]) {\n                this.props.updateTitleTemp(wellnessData[start_date][0][1]);\n              } else {\n                this.props.updateTitleTemp('');\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          wellnessData = _this$state.wellnessData,\n          isLoading = _this$state.isLoading;\n      var date = formatDate(this.props.date);\n      return React.createElement(Card, {\n        style: {\n          width: '93%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 56,\n          height: 56,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icon-wellness.png\"),\n        style: {\n          width: 48,\n          height: 48\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \"\\u5065\\u5EB7\")), isLoading ? React.createElement(Reloading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }) : wellnessData && wellnessData[date] ? React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          paddingBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }\n      }, \"\\u6642\\u9593\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      }, \"\\u9AD4\\u6EAB\")), React.createElement(View, {\n        style: {\n          flex: 2,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, \"\\u4ECA\\u65E5\\u72C0\\u6CC1\"))), wellnessData[date].map(function (record, index) {\n        return React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 27\n          }\n        }, record[0])), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 27\n          }\n        }, record[1], \"\\xB0\")), React.createElement(View, {\n          style: {\n            flex: 2,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }\n        }, record[2])));\n      })) : React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 17\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \"\\u6C92\\u6709\\u65B0\\u7D00\\u9304\")))));\n    }\n  }]);\n\n  return WellnessCard;\n}(React.Component);\n\nexport { WellnessCard as default };","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/wellnesscard.js"],"names":["React","Card","formatDate","fetchData","Reloading","WellnessCard","props","state","child_id","isLoading","bind","date","Date","getTime","prevProps","setState","start_date","setDate","getDate","end_date","wellnessData","updateTitleTemp","width","flex","flexDirection","height","justifyContent","alignItems","require","paddingTop","fontSize","paddingVertical","paddingBottom","textAlign","color","map","record","index","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, Image } from 'react-native'\nimport { Card } from 'native-base'\nimport { formatDate, fetchData } from '../util'\nimport Reloading from '../reloading'\n\nexport default class WellnessCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      child_id: this.props.child_id,\n      isLoading: true\n    }\n    this.fetchData = this.fetchData.bind(this)\n  }\n\n  componentDidMount() {\n    const { date } = this.props\n    this.fetchData(this.state.child_id, new Date(date.getTime()))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    } else if (this.props.child_id !== prevProps.child_id) {\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date());\n    }\n  }\n\n  async fetchData(child_id, date) {\n    // const date = new Date(datetime.getTime())\n    const start_date = formatDate(date)\n    date.setDate(date.getDate() + 1)\n    const end_date = formatDate(date)\n    const wellnessData = await fetchData('wellness', child_id, start_date, end_date)\n    this.setState({\n      wellnessData,\n      isLoading: false\n    }) \n    if (wellnessData && wellnessData[start_date]) {\n      this.props.updateTitleTemp(wellnessData[start_date][0][1])\n    } else {\n      this.props.updateTitleTemp('')\n    }\n  }\n\n  render() {\n    const { wellnessData, isLoading} = this.state\n    const date = formatDate(this.props.date)\n    return (\n      <Card style={{ width: '93%' }}>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ width: 56, height: 56, justifyContent: 'center', alignItems: 'center'}}>\n            <Image\n              source={require('../../assets/icon-wellness.png')}\n              style={{\n                  width: 48,\n                  height: 48\n              }}\n            />\n          </View>\n          <View style={{ flex: 1 }}>\n            <View style={{ paddingTop: 8 }}>\n              <Text style={{ fontSize: 20 }}>健康</Text>\n            </View>\n            {isLoading ? \n              <Reloading />\n              : wellnessData && wellnessData[date] ? \n                <View style={{ flex: 1, paddingVertical: 8 }}>\n                  <View\n                    style={{ flexDirection: 'row' }}\n                  >\n                    <View style={{ flex: 1, justifyContent: 'center', paddingBottom: 5 }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>時間</Text>\n                    </View>\n                    <View style={{ flex: 1, justifyContent: 'center'  }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>體溫</Text>\n                    </View>\n                    <View style={{ flex: 2, justifyContent: 'center'  }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>今日狀況</Text>\n                    </View>\n                  </View>\n                  {wellnessData[date].map((record, index) => {\n                    return (\n                      <View\n                        key={index}\n                        style={{ flexDirection: 'row' }}\n                      >\n                        <View style={{ flex: 1, justifyContent: 'center' }}>\n                          <Text style={{ fontSize: 25, textAlign: 'center', color: '#404040' }}>{record[0]}</Text>\n                        </View>\n                        <View style={{ flex: 1, justifyContent: 'center'  }}>\n                          <Text style={{ fontSize: 25, textAlign: 'center', color: '#404040' }}>{record[1]}°</Text>\n                        </View>\n                        <View style={{ flex: 2, justifyContent: 'center'  }}>\n                          <Text style={{ fontSize: 25, textAlign: 'center', color: '#404040' }}>{record[2]}</Text>\n                        </View>\n                      </View>\n                    )\n                  })}\n                </View>\n                : <View style={{ flex: 1, paddingVertical: 8 }}>\n                    <Text style={{ fontSize: 17 }}>沒有新紀錄</Text>\n                </View>\n            }\n          </View>\n        </View>\n      </Card>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}