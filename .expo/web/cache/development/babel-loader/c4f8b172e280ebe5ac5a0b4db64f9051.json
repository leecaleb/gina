{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/wellnessform.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addHealthStatus, addTemperature } from \"../../redux/school/actions/index\";\nimport PickerComponent from \"../picker\";\n\nvar WellnessForm = function (_React$Component) {\n  _inherits(WellnessForm, _React$Component);\n\n  var _super = _createSuper(WellnessForm);\n\n  function WellnessForm(props) {\n    var _this;\n\n    _classCallCheck(this, WellnessForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      other_option: ''\n    };\n    return _this;\n  }\n\n  _createClass(WellnessForm, [{\n    key: \"handleSelectStatus\",\n    value: function handleSelectStatus(student_id, record_id, status) {\n      if (status === 'Cancel') {\n        return;\n      } else if (status === '其他') {\n        this.setState({\n          other_option: '其他'\n        });\n      } else {\n        this.props.addHealthStatus(student_id, record_id, status, this.props.teacher_id);\n      }\n    }\n  }, {\n    key: \"handleTempInput\",\n    value: function handleTempInput(student_id, record_id, temperature) {\n      var normalized_temperature = temperature.slice(-1) === '.' ? temperature.slice(0, 2) : temperature.length === 3 ? temperature.slice(0, 2) + '.' + temperature.slice(-1) : temperature;\n      this.props.addTemperature(student_id, record_id, normalized_temperature, this.props.teacher_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          student_id = _this$props.student_id,\n          record_id = _this$props.record_id,\n          records = _this$props.records,\n          records_with_error = _this$props.records_with_error,\n          autoFocus = _this$props.autoFocus;\n      var wellness_data = records[record_id];\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderWidth: 2,\n          borderColor: records_with_error.has(record_id) ? 'red' : 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          backgroundColor: 'rgba(255,255,255, 0.5)',\n          marginRight: '10%',\n          justifyContent: 'center',\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          fontSize: 40\n        },\n        autoFocus: autoFocus,\n        keyboardType: \"decimal-pad\",\n        placeholder: \"\\u9AD4\\u6EAB\",\n        value: '' + wellness_data.temperature,\n        onChangeText: function onChangeText(temp) {\n          _this2.handleTempInput(student_id, record_id, temp);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }), wellness_data.temperature === '' ? null : React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 54\n        }\n      }, \"\\xB0\")), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, this.state.other_option === '' ? React.createElement(PickerComponent, {\n        style: {\n          backgroundColor: 'rgba(255,255,255, 0.5)',\n          alignItems: 'center',\n          padding: 5\n        },\n        textStyle: {\n          fontSize: 40\n        },\n        selectedValue: wellness_data.status,\n        options: [\"健康寶寶\", \"發燒\", \"喉嚨偏紅\", \"咳嗽\", \"流⿐涕\", \"頭痛\", \"活動⼒不佳\", \"嘔吐\", \"糞便帶有⾎絲\", \"拉肚子\", \"其他\", \"Cancel\"],\n        handleOnClick: function handleOnClick() {},\n        handleSelectValue: function handleSelectValue(status) {\n          return _this2.handleSelectStatus(student_id, record_id, status);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }) : React.createElement(TextInput, {\n        style: {\n          fontSize: 40,\n          backgroundColor: 'rgba(255,255,255, 0.5)',\n          alignItems: 'center',\n          padding: 2\n        },\n        keyboardType: \"default\",\n        autoFocus: this.state.other_option !== '',\n        selectTextOnFocus: true,\n        value: wellness_data.status,\n        onChangeText: function onChangeText(status) {\n          _this2.handleSelectStatus(student_id, record_id, status);\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            other_option: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return WellnessForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    records: state.healthstatus.records,\n    records_with_error: state.healthstatus.records_with_error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    addHealthStatus: addHealthStatus,\n    addTemperature: addTemperature\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WellnessForm);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/wellnessform.js"],"names":["React","connect","bindActionCreators","addHealthStatus","addTemperature","PickerComponent","WellnessForm","props","state","other_option","student_id","record_id","status","setState","teacher_id","temperature","normalized_temperature","slice","length","records","records_with_error","autoFocus","wellness_data","flex","flexDirection","alignItems","justifyContent","borderWidth","borderColor","has","backgroundColor","marginRight","padding","fontSize","temp","handleTempInput","handleSelectStatus","Component","mapStateToProps","healthstatus","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, TextInput, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addHealthStatus, addTemperature } from '../../redux/school/actions/index'\nimport PickerComponent from '../picker'\n\nclass WellnessForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      other_option: ''\n    }\n  }\n\n  handleSelectStatus(student_id, record_id, status) {\n    if (status === 'Cancel') {\n      return\n    } else if (status === '其他') {\n      this.setState({\n        other_option: '其他'\n      })\n    } else {\n      this.props.addHealthStatus(student_id, record_id, status, this.props.teacher_id)\n    }\n  }\n\n  handleTempInput(student_id, record_id, temperature) {\n    const normalized_temperature = \n      temperature.slice(-1) === '.' ?\n        temperature.slice(0,2)\n        :\n      temperature.length === 3 ? \n        temperature.slice(0,2) + '.' + temperature.slice(-1)\n        : temperature\n    this.props.addTemperature(student_id, record_id, normalized_temperature, this.props.teacher_id)\n  }\n\n  render() {\n    const { student_id, record_id, records, records_with_error, autoFocus } = this.props\n    const wellness_data = records[record_id]\n    return (\n      <View\n        style={{\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderWidth: 2,\n          borderColor: records_with_error.has(record_id) ? 'red' : 'transparent'\n        }}\n      >\n        <View \n          style={{ \n            flex: 1, \n            flexDirection: 'row', \n            backgroundColor: 'rgba(255,255,255, 0.5)', \n            marginRight: '10%', \n            justifyContent: 'center',\n            padding: 5\n          }}\n        >\n          <TextInput\n            style={{ fontSize: 40 }}\n            autoFocus={autoFocus}\n            keyboardType='decimal-pad'\n            placeholder='體溫'\n            value={'' + wellness_data.temperature}\n            onChangeText={(temp) => { this.handleTempInput(student_id, record_id, temp) }}\n          />\n          {wellness_data.temperature === '' ? null : <Text style={{ fontSize: 30 }}>°</Text>}\n        </View>\n        <View style={{ flex: 2 }}>\n          {this.state.other_option === '' ? \n            <PickerComponent\n              style={{ \n                backgroundColor: 'rgba(255,255,255, 0.5)',\n                alignItems: 'center',\n                padding: 5\n              }}\n              textStyle={{fontSize: 40}}\n              selectedValue={wellness_data.status}\n              options={[\n                \"健康寶寶\",\n                \"發燒\",\n                \"喉嚨偏紅\",\n                \"咳嗽\",\n                \"流⿐涕\",\n                \"頭痛\",\n                \"活動⼒不佳\",\n                \"嘔吐\", \n                \"糞便帶有⾎絲\",\n                \"拉肚子\",\n                \"其他\",\n                \"Cancel\"\n              ]}\n              handleOnClick={() => { }}\n              handleSelectValue={(status) => this.handleSelectStatus(student_id, record_id, status)}\n            />\n          : <TextInput\n              style={{ \n                fontSize: 40,\n                backgroundColor: 'rgba(255,255,255, 0.5)',\n                alignItems: 'center',\n                padding: 2\n              }}\n              keyboardType='default'\n              autoFocus={this.state.other_option !== ''}\n              selectTextOnFocus={true}\n              // placeholder=''\n              value={wellness_data.status}\n              onChangeText={(status) => { this.handleSelectStatus(student_id, record_id, status) }}\n              onBlur={() => this.setState({ other_option: ''})}\n            />\n          }\n        </View>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      // class: state.classInfo,\n    records: state.healthstatus.records,\n    records_with_error: state.healthstatus.records_with_error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      ...bindActionCreators({\n          addHealthStatus,\n          addTemperature,\n      }, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WellnessForm)"]},"metadata":{},"sourceType":"module"}