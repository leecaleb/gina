{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/logs/milklog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Content, Card, Toast } from 'native-base';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { editMilkAmount, addMilkRecord, fetchClassMilkData, createDataSuccess, createDataFail, editDataSuccess, editDataFail, removeRecord, removeMilkRecordSuccess, removeMilkRecordFail, editMilkTime } from \"../../../redux/school/actions/index\";\nimport { formatTime, formatDate, fetchClassData as _fetchClassData } from \"../../util\";\nimport Reloading from \"../../reloading\";\nimport TimeModal from \"../../parent/timemodal\";\n\nvar TeacherMilkLog = function (_React$Component) {\n  _inherits(TeacherMilkLog, _React$Component);\n\n  var _super = _createSuper(TeacherMilkLog);\n\n  function TeacherMilkLog(props) {\n    var _this;\n\n    _classCallCheck(this, TeacherMilkLog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      date: new Date(),\n      showDateTimeModal: false,\n      record_id: ''\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_this));\n    _this.handleOnAddRecord = _this.handleOnAddRecord.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TeacherMilkLog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isConnected = this.props.class.isConnected;\n\n      if (!this.props.milk.loaded && isConnected) {\n        this.fetchClassData();\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n      }\n    }\n  }, {\n    key: \"checkUnsent\",\n    value: function checkUnsent(student_id) {\n      var _this$props$milk = this.props.milk,\n          newDataForCreate = _this$props$milk.newDataForCreate,\n          oldDataForEdit = _this$props$milk.oldDataForEdit,\n          dataForRemoval = _this$props$milk.dataForRemoval,\n          by_student_id = _this$props$milk.by_student_id;\n      var record_id_list = by_student_id[student_id];\n      var found = false;\n\n      for (var i = 0; i < record_id_list.length; i++) {\n        var record_id = record_id_list[i];\n\n        if (newDataForCreate.has(record_id) || oldDataForEdit.has(record_id)) {\n          found = true;\n          break;\n        }\n      }\n\n      return found;\n    }\n  }, {\n    key: \"fetchClassData\",\n    value: function fetchClassData() {\n      var isConnected, date, start_date, end_date, milkData;\n      return _regeneratorRuntime.async(function fetchClassData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isConnected = this.props.class.isConnected;\n\n              if (isConnected) {\n                _context.next = 4;\n                break;\n              }\n\n              Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n              });\n              return _context.abrupt(\"return\");\n\n            case 4:\n              date = new Date();\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(_fetchClassData('milkintake', this.props.class.class_id, start_date, end_date));\n\n            case 10:\n              milkData = _context.sent;\n              this.denormalize(milkData);\n              this.props.fetchClassMilkData(milkData.data);\n              this.setState({\n                isLoading: false\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"denormalize\",\n    value: function denormalize(milkData) {\n      if (!milkData.data.records.all_id.length) {\n        return;\n      }\n\n      var by_id = milkData.data.records.by_id;\n\n      for (var record_id in by_id) {\n        by_id[record_id].time = new Date(by_id[record_id].time);\n      }\n    }\n  }, {\n    key: \"handleEditMilkAmout\",\n    value: function handleEditMilkAmout(record_id, milk_amount) {\n      var teacher_id = this.props.route.params.teacher_id;\n      this.props.editMilkAmount(record_id, milk_amount, teacher_id);\n    }\n  }, {\n    key: \"handleOnAddRecord\",\n    value: function handleOnAddRecord(student_id) {\n      this.props.addMilkRecord(student_id);\n    }\n  }, {\n    key: \"confirmToRemoveRecord\",\n    value: function confirmToRemoveRecord(student_id, record_id, index) {\n      var _this2 = this;\n\n      Alert.alert('確定要刪除？', '', [{\n        text: 'Yes',\n        onPress: function onPress() {\n          return _this2.handleRemoveRecord(student_id, record_id, index);\n        }\n      }, {\n        text: 'Cancel',\n        style: 'cancel'\n      }]);\n    }\n  }, {\n    key: \"handleRemoveRecord\",\n    value: function handleRemoveRecord(student_id, record_id, index) {\n      var isConnected = this.props.class.isConnected;\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n        return;\n      }\n\n      this.props.removeRecord(student_id, record_id, index);\n      this.handleRemove(record_id, student_id);\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      var _this$props$milk2, newDataForCreate, oldDataForEdit, dataForRemoval, isConnected, handleCreateRes, handleEditRes;\n\n      return _regeneratorRuntime.async(function handleSend$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props$milk2 = this.props.milk, newDataForCreate = _this$props$milk2.newDataForCreate, oldDataForEdit = _this$props$milk2.oldDataForEdit, dataForRemoval = _this$props$milk2.dataForRemoval;\n              isConnected = this.props.class.isConnected;\n\n              if (isConnected) {\n                _context2.next = 5;\n                break;\n              }\n\n              Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n              });\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              if (!newDataForCreate.size) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(this.handleCreate());\n\n            case 8:\n              handleCreateRes = _context2.sent;\n\n              if (!handleCreateRes.success) {\n                _context2.next = 13;\n                break;\n              }\n\n              this.props.createDataSuccess();\n              _context2.next = 15;\n              break;\n\n            case 13:\n              this.props.createDataFail(handleCreateRes.data);\n              return _context2.abrupt(\"return\");\n\n            case 15:\n              if (!oldDataForEdit.size) {\n                _context2.next = 25;\n                break;\n              }\n\n              _context2.next = 18;\n              return _regeneratorRuntime.awrap(this.handleEdit());\n\n            case 18:\n              handleEditRes = _context2.sent;\n\n              if (!handleEditRes.success) {\n                _context2.next = 23;\n                break;\n              }\n\n              this.props.editDataSuccess();\n              _context2.next = 25;\n              break;\n\n            case 23:\n              this.props.editDataFail(handleEditRes.data);\n              return _context2.abrupt(\"return\");\n\n            case 25:\n              this.props.navigation.goBack();\n\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleCreate\",\n    value: function handleCreate() {\n      var _this$props$milk3, newDataForCreate, records, data_objs, request_body, createDataRes;\n\n      return _regeneratorRuntime.async(function handleCreate$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props$milk3 = this.props.milk, newDataForCreate = _this$props$milk3.newDataForCreate, records = _this$props$milk3.records;\n              data_objs = [];\n              newDataForCreate.forEach(function (record_id) {\n                data_objs.push(_objectSpread({}, records.by_id[record_id]));\n              });\n              this.normalize(data_objs);\n              request_body = {\n                date: formatDate(new Date()),\n                data_objs: data_objs\n              };\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/milkintake', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var statusCode = resJson.statusCode,\n                    errMessage = resJson.errMessage,\n                    message = resJson.message;\n\n                if (statusCode > 200) {\n                  return {\n                    success: false,\n                    status_code: statusCode,\n                    data: errMessage || message\n                  };\n                }\n\n                return {\n                  success: true,\n                  status_code: 200,\n                  data: resJson\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  data: err\n                };\n              }));\n\n            case 7:\n              createDataRes = _context3.sent;\n              return _context3.abrupt(\"return\", createDataRes);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit() {\n      var _this$props$milk4, oldDataForEdit, records, data_objs, request_body, editDataRes;\n\n      return _regeneratorRuntime.async(function handleEdit$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props$milk4 = this.props.milk, oldDataForEdit = _this$props$milk4.oldDataForEdit, records = _this$props$milk4.records;\n              data_objs = [];\n              oldDataForEdit.forEach(function (record_id) {\n                data_objs.push(_objectSpread({\n                  record_id: record_id\n                }, records.by_id[record_id]));\n              });\n              this.normalize(data_objs);\n              request_body = {\n                date: formatDate(new Date()),\n                data_objs: data_objs\n              };\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/milkintake', {\n                method: 'PUT',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var statusCode = resJson.statusCode,\n                    message = resJson.message;\n\n                if (statusCode > 200) {\n                  return {\n                    success: false,\n                    status_code: statusCode,\n                    data: message\n                  };\n                }\n\n                return {\n                  success: true,\n                  status_code: 200,\n                  data: resJson\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  data: err\n                };\n              }));\n\n            case 7:\n              editDataRes = _context4.sent;\n              return _context4.abrupt(\"return\", editDataRes);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove(record_id, student_id) {\n      var dataForRemoval, request_body, query, removeRes;\n      return _regeneratorRuntime.async(function handleRemove$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dataForRemoval = this.props.milk.dataForRemoval;\n\n              if (dataForRemoval.has(record_id)) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 3:\n              request_body = {\n                record_id_array: record_id,\n                student_id: student_id\n              };\n              query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/milkintake\";\n              _context5.next = 7;\n              return _regeneratorRuntime.awrap(fetch(query, {\n                method: 'DELETE',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var statusCode = resJson.statusCode,\n                    message = resJson.message;\n\n                if (statusCode > 200) {\n                  return {\n                    success: false,\n                    status_code: statusCode,\n                    data: message\n                  };\n                }\n\n                return {\n                  success: true,\n                  status_code: 200,\n                  data: resJson\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  data: err\n                };\n              }));\n\n            case 7:\n              removeRes = _context5.sent;\n\n              if (removeRes.success) {\n                this.props.removeMilkRecordSuccess();\n              } else {\n                this.props.removeMilkRecordFail();\n              }\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(data_objs) {\n      for (var i = 0; i < data_objs.length; i++) {\n        data_objs[i].time = formatTime(data_objs[i].time);\n      }\n    }\n  }, {\n    key: \"selectDatetimeConfirm\",\n    value: function selectDatetimeConfirm(time) {\n      var teacher_id = this.props.route.params.teacher_id;\n      var record_id = this.state.record_id;\n      this.setState({\n        record_id: '',\n        showDateTimeModal: false\n      });\n      this.props.editMilkTime(record_id, time, teacher_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(Reloading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }\n        });\n      }\n\n      var _this$state = this.state,\n          date = _this$state.date,\n          showDateTimeModal = _this$state.showDateTimeModal;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }, showDateTimeModal ? React.createElement(TimeModal, {\n        start_date: date,\n        datetime_type: 'time',\n        hideModal: function hideModal() {\n          return _this3.setState({\n            showDateTimeModal: false\n          });\n        },\n        selectDatetimeConfirm: function selectDatetimeConfirm(datetime) {\n          return _this3.selectDatetimeConfirm(datetime);\n        },\n        minDatetime: null,\n        maxDatetime: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }\n      }) : null, React.createElement(View, {\n        style: styles.subHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }\n      }, date.getFullYear() + '.' + (date.getMonth() + 1) + '.' + date.getDate()), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: '#dcf3d0',\n          padding: 10\n        },\n        onPress: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          color: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, \"\\u9001\\u51FA\"))), React.createElement(Content, {\n        contentContainerStyle: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }\n      }, Object.keys(this.props.class.students).map(function (student_id) {\n        var record_id_array = _this3.props.milk.by_student_id[student_id];\n        var records = _this3.props.milk.records.by_id;\n        return React.createElement(View, {\n          key: student_id,\n          style: {\n            width: '98%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          style: {\n            flex: 1,\n            paddingVertical: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 33\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 41\n          }\n        }, React.createElement(TouchableHighlight, {\n          style: styles.childThumbnail,\n          onPress: function onPress() {\n            return _this3.handleOnAddRecord(student_id);\n          },\n          underlayColor: \"transparent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 45\n          }\n        }, React.createElement(Image, {\n          source: _this3.props.class.students[student_id].profile_picture === '' ? require(\"../../../assets/icon-thumbnail.png\") : {\n            uri: _this3.props.class.students[student_id].profile_picture\n          },\n          style: styles.thumbnailImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 49\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 30,\n            paddingLeft: 18\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 53\n          }\n        }, _this3.props.class.students[student_id].name)), React.createElement(View, {\n          style: {\n            flex: 1,\n            paddingRight: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 49\n          }\n        }, _this3.checkUnsent(student_id) ? React.createElement(Text, {\n          style: {\n            fontSize: 15,\n            paddingLeft: 18,\n            alignSelf: 'flex-end',\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 57\n          }\n        }, \"\\u672A\\u9001\\u51FA\") : null)), record_id_array.map(function (record_id, index) {\n          var record = records[record_id];\n          return React.createElement(View, {\n            key: record_id,\n            style: styles.cardBody,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 53\n            }\n          }, React.createElement(View, {\n            style: {\n              width: '35%',\n              marginRight: '3%',\n              height: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 57\n            }\n          }, React.createElement(TouchableHighlight, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              backgroundColor: '#fef6dd',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this3.setState({\n                showDateTimeModal: true,\n                record_id: record_id\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 35,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 65\n            }\n          }, record.time.getHours() + ':' + record.time.getMinutes()))), React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              width: '35%',\n              marginRight: '3%',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: '#fef6dd',\n              height: '100%',\n              borderRadius: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 57\n            }\n          }, React.createElement(TextInput, {\n            style: {\n              flex: 2,\n              fontSize: 35,\n              textAlign: 'center'\n            },\n            keyboardType: \"decimal-pad\",\n            placeholder: \"\\u2F64\\u91CF\",\n            value: '' + record.amount,\n            onChangeText: function onChangeText(milk_amount) {\n              _this3.handleEditMilkAmout(record_id, milk_amount);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 61\n            }\n          }), React.createElement(Text, {\n            style: {\n              flex: 1,\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 61\n            }\n          }, \"c.c.\")), React.createElement(View, {\n            style: {\n              width: '20%',\n              marginRight: '4%',\n              height: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 57\n            }\n          }, React.createElement(TouchableHighlight, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              backgroundColor: '#ffe1d0',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this3.confirmToRemoveRecord(student_id, record_id, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 65\n            }\n          }, \"\\u79FB\\u9664\"))));\n        })))));\n      })));\n    }\n  }]);\n\n  return TeacherMilkLog;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  childThumbnail: {},\n  thumbnailImage: {\n    width: 140,\n    height: 140,\n    borderRadius: 70\n  },\n  subHeading: {\n    width: '90%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    alignSelf: 'center'\n  },\n  cardBody: {\n    flexDirection: 'row',\n    marginVertical: 6\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    class: state.classInfo,\n    milk: state.milk\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    editMilkAmount: editMilkAmount,\n    addMilkRecord: addMilkRecord,\n    fetchClassMilkData: fetchClassMilkData,\n    createDataSuccess: createDataSuccess,\n    createDataFail: createDataFail,\n    editDataSuccess: editDataSuccess,\n    editDataFail: editDataFail,\n    removeRecord: removeRecord,\n    removeMilkRecordSuccess: removeMilkRecordSuccess,\n    removeMilkRecordFail: removeMilkRecordFail,\n    editMilkTime: editMilkTime\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherMilkLog);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/milklog.js"],"names":["React","Container","Content","Card","Toast","connect","bindActionCreators","editMilkAmount","addMilkRecord","fetchClassMilkData","createDataSuccess","createDataFail","editDataSuccess","editDataFail","removeRecord","removeMilkRecordSuccess","removeMilkRecordFail","editMilkTime","formatTime","formatDate","fetchClassData","Reloading","TimeModal","TeacherMilkLog","props","state","isLoading","date","Date","showDateTimeModal","record_id","handleSend","bind","handleOnAddRecord","isConnected","class","milk","loaded","setState","show","text","buttonText","position","type","duration","student_id","newDataForCreate","oldDataForEdit","dataForRemoval","by_student_id","record_id_list","found","i","length","has","start_date","setDate","getDate","end_date","class_id","milkData","denormalize","data","records","all_id","by_id","time","milk_amount","teacher_id","route","params","index","Alert","alert","onPress","handleRemoveRecord","style","handleRemove","size","handleCreate","handleCreateRes","success","handleEdit","handleEditRes","navigation","goBack","data_objs","forEach","push","normalize","request_body","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","statusCode","errMessage","message","status_code","catch","err","createDataRes","editDataRes","record_id_array","query","removeRes","datetime","selectDatetimeConfirm","styles","subHeading","fontSize","getFullYear","getMonth","backgroundColor","padding","color","alignItems","Object","keys","students","map","width","flex","paddingVertical","flexDirection","justifyContent","childThumbnail","profile_picture","require","uri","thumbnailImage","paddingLeft","name","paddingRight","checkUnsent","alignSelf","record","cardBody","marginRight","height","borderRadius","textAlign","getHours","getMinutes","amount","handleEditMilkAmout","confirmToRemoveRecord","Component","StyleSheet","create","marginVertical","mapStateToProps","classInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Image, TouchableHighlight, View, Text, TextInput, Alert} from 'react-native'\nimport { Container, Content, Card, Toast } from 'native-base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {\n    editMilkAmount,\n    addMilkRecord,\n    fetchClassMilkData,\n    createDataSuccess,\n    createDataFail,\n    editDataSuccess,\n    editDataFail,\n    removeRecord,\n    removeMilkRecordSuccess,\n    removeMilkRecordFail,\n    editMilkTime\n} from '../../../redux/school/actions/index'\nimport { formatTime, formatDate, fetchClassData } from '../../util'\nimport Reloading from '../../reloading'\nimport TimeModal from '../../parent/timemodal'\n\nclass TeacherMilkLog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            date: new Date(),\n            showDateTimeModal: false,\n            record_id: ''\n        }\n        this.handleSend = this.handleSend.bind(this)\n        this.handleOnAddRecord = this.handleOnAddRecord.bind(this)\n    }\n\n    componentDidMount() {\n        const { isConnected } = this.props.class\n        if (!this.props.milk.loaded && isConnected) {\n            this.fetchClassData()\n        }\n        else {\n            this.setState({\n                isLoading: false\n            })\n        }\n\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n        }\n    }\n\n    checkUnsent(student_id) {\n        const { newDataForCreate, oldDataForEdit, dataForRemoval, by_student_id } = this.props.milk\n        const record_id_list = by_student_id[student_id]\n        var found = false\n        for (var i = 0; i < record_id_list.length; i++) {\n            const record_id = record_id_list[i]\n            if (newDataForCreate.has(record_id) || oldDataForEdit.has(record_id)) {\n                found = true\n                break\n            }\n        }\n        return found\n    }\n\n    async fetchClassData() {\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        const date = new Date()\n        const start_date = formatDate(date)\n        date.setDate(date.getDate() + 1)\n        const end_date = formatDate(date)\n        const milkData = await fetchClassData('milkintake', this.props.class.class_id, start_date, end_date)\n        this.denormalize(milkData)\n        this.props.fetchClassMilkData(milkData.data)\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    denormalize(milkData) {\n        if (!milkData.data.records.all_id.length) {\n            return\n        }\n        const { by_id } = milkData.data.records\n        for (const record_id in by_id) {\n            by_id[record_id].time = new Date(by_id[record_id].time)\n        }\n    }\n\n    handleEditMilkAmout(record_id, milk_amount) {\n        const { teacher_id } = this.props.route.params\n        this.props.editMilkAmount(record_id, milk_amount, teacher_id)\n    }\n\n    handleOnAddRecord(student_id) {\n        this.props.addMilkRecord(student_id)\n    }\n\n    confirmToRemoveRecord(student_id, record_id, index) {\n        Alert.alert(\n            '確定要刪除？',\n            '',\n            [\n                { text: 'Yes', onPress: () => this.handleRemoveRecord(student_id, record_id, index) },\n                { text: 'Cancel', style: 'cancel' }\n            ]\n        )\n    }\n\n    handleRemoveRecord(student_id, record_id, index) {\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        this.props.removeRecord(student_id, record_id, index)\n        this.handleRemove(record_id, student_id)\n    }\n\n    async handleSend() {\n        // this.setState({ isLoading: true })\n        const { newDataForCreate, oldDataForEdit, dataForRemoval } = this.props.milk\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n\n        if (newDataForCreate.size) {\n            const handleCreateRes = await this.handleCreate()\n            // console.log('handleCreateRes: ', handleCreateRes)\n            if (handleCreateRes.success) {\n                this.props.createDataSuccess()\n            } else {\n                this.props.createDataFail(handleCreateRes.data)\n                return\n            }\n        }\n\n        if (oldDataForEdit.size) {\n            const handleEditRes = await this.handleEdit()\n            // console.log('handleEditRes: ', handleEditRes)\n            if (handleEditRes.success) {\n                this.props.editDataSuccess()\n            } else {\n                this.props.editDataFail(handleEditRes.data)\n                return\n            }\n        }\n        // this.setState({ isLoading: false })\n        this.props.navigation.goBack()\n    }\n\n    async handleCreate() {\n        const { newDataForCreate, records } = this.props.milk\n        const data_objs = []\n        newDataForCreate.forEach(record_id => {\n            data_objs.push({\n                ...records.by_id[record_id]\n            })\n        })\n\n        this.normalize(data_objs)\n        const request_body = {\n            date: formatDate(new Date()),\n            data_objs\n        }\n\n        const createDataRes = await fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/milkintake', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                // console.log('milklog/resJson: ', resJson)\n                const {statusCode, errMessage, message } = resJson\n                if (statusCode > 200) {\n                    return {\n                        success: false,\n                        status_code: statusCode,\n                        data: errMessage || message\n                    }\n                }\n                return {\n                    success: true,\n                    status_code: 200,\n                    data: resJson\n                }\n            })\n            .catch(err => {\n                return {\n                    success: false,\n                    status_code: 500,\n                    data: err\n                }\n            })\n        return createDataRes\n    }\n\n    async handleEdit() {\n        const { oldDataForEdit, records } = this.props.milk\n        const data_objs = []\n        \n        oldDataForEdit.forEach(record_id => {\n            data_objs.push({\n                record_id,\n                ...records.by_id[record_id]\n            })\n        })\n        this.normalize(data_objs)\n        const request_body = {\n            date: formatDate(new Date()),\n            data_objs\n        }\n\n        const editDataRes = await fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/milkintake', {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const {statusCode, message } = resJson\n                if (statusCode > 200) {\n                    return {\n                        success: false,\n                        status_code: statusCode,\n                        data: message\n                    }\n                }\n                return {\n                    success: true,\n                    status_code: 200,\n                    data: resJson\n                }\n            })\n            .catch(err => {\n                return {\n                    success: false,\n                    status_code: 500,\n                    data: err\n                }\n            })\n        return editDataRes\n    }\n\n    async handleRemove(record_id, student_id) {\n        const { dataForRemoval } = this.props.milk\n\n        if (!dataForRemoval.has(record_id)) {\n            return\n        }\n\n        var request_body = {\n            record_id_array: record_id,\n            student_id\n        }\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/milkintake`\n        const removeRes = await fetch(query, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const {statusCode, message } = resJson\n                if (statusCode > 200) {\n                    return {\n                        success: false,\n                        status_code: statusCode,\n                        data: message\n                    }\n                }\n                return {\n                    success: true,\n                    status_code: 200,\n                    data: resJson\n                }\n            })\n            .catch(err => {\n                return {\n                    success: false,\n                    status_code: 500,\n                    data: err\n                }\n            })\n\n        if (removeRes.success) {\n            this.props.removeMilkRecordSuccess()\n        } else {\n            this.props.removeMilkRecordFail()\n        }\n    }\n\n    normalize(data_objs) {\n        for (var i = 0; i < data_objs.length; i++) {\n            data_objs[i].time = formatTime(data_objs[i].time)\n        }\n    }\n\n    selectDatetimeConfirm(time) {\n        const { teacher_id } = this.props.route.params\n        const { record_id } = this.state\n        this.setState({ record_id: '', showDateTimeModal: false })\n        this.props.editMilkTime(record_id, time, teacher_id)\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <Reloading />\n            )\n        }\n\n        const { date, showDateTimeModal } = this.state\n        return (\n            <Container>\n                {showDateTimeModal ?\n                    <TimeModal\n                        start_date={date}\n                        datetime_type={'time'}\n                        hideModal={() => this.setState({ showDateTimeModal: false })}\n                        selectDatetimeConfirm={(datetime) => this.selectDatetimeConfirm(datetime)}\n                        minDatetime={null}\n                        maxDatetime={null}\n                    />\n                    : null\n                }\n                <View style={styles.subHeading}>\n                    <Text style={{ fontSize: 40 }}>{date.getFullYear() + '.' + (date.getMonth()+1) + '.' + date.getDate()}</Text>\n                    <TouchableHighlight\n                        style={{ backgroundColor: '#dcf3d0', padding: 10 }}\n                        onPress={this.handleSend}\n                    >\n                        <Text style={{ fontSize: 40, color: 'grey' }}>送出</Text>\n                    </TouchableHighlight>\n                </View>\n                <Content contentContainerStyle={{ alignItems: 'center' }}>\n                    {Object.keys(this.props.class.students).map((student_id) => {\n                        const record_id_array = this.props.milk.by_student_id[student_id]\n                        const records = this.props.milk.records.by_id\n                        return(\n                            <View key={student_id} style={{ width: '98%' }}>\n                                <Card style={{ flex: 1, paddingVertical: 15 }}>\n                                    <View style={{ flex: 1, flexDirection: 'row'}}>\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                                            <TouchableHighlight\n                                                style={styles.childThumbnail}\n                                                onPress={() => this.handleOnAddRecord(student_id)}\n                                                underlayColor=\"transparent\"\n                                            >\n                                                <Image\n                                                    // source={{uri: this.props.class.students[student_id].profile_picture }}\n                                                    source={\n                                                        this.props.class.students[student_id].profile_picture === '' ?\n                                                            require('../../../assets/icon-thumbnail.png')\n                                                            : {uri: this.props.class.students[student_id].profile_picture}\n                                                    }\n                                                    style={styles.thumbnailImage}/>\n                                            </TouchableHighlight>\n                                        </View>\n                                        <View style={{ flex: 3}}>\n                                            <View style={{ flexDirection: 'row'}}>\n                                                <View style={{ flex: 1 }}>\n                                                    <Text style={{ fontSize: 30, paddingLeft: 18 }}>{this.props.class.students[student_id].name}</Text>\n                                                </View>\n                                                <View style={{ flex: 1, paddingRight: 15 }}>\n                                                    {this.checkUnsent(student_id) ?\n                                                        <Text style={{ fontSize: 15, paddingLeft: 18, alignSelf: 'flex-end', color: 'red' }}>\n                                                            未送出\n                                                        </Text>\n                                                        : null\n                                                    }\n                                                </View>\n                                            </View>\n                                            {record_id_array.map((record_id, index) => {\n                                                const record = records[record_id]\n                                                return (\n                                                    <View key={record_id} style={styles.cardBody}>\n                                                        <View style={{ width: '35%', marginRight: '3%', height: '100%' }}>\n                                                            <TouchableHighlight\n                                                                style={{ flex: 1, justifyContent: 'center', backgroundColor: '#fef6dd', borderRadius: 10 }}\n                                                                onPress={() => this.setState({ showDateTimeModal: true, record_id})}\n                                                            >\n                                                                <Text style={{ fontSize: 35, textAlign: 'center' }}>\n                                                                    {record.time.getHours() + ':' + record.time.getMinutes()}\n                                                                </Text>\n                                                            </TouchableHighlight>\n                                                        </View>\n                                                        <View style={{\n                                                            flexDirection: 'row',\n                                                            width: '35%',\n                                                            marginRight: '3%',\n                                                            alignItems: 'center',\n                                                            justifyContent: 'center',\n                                                            backgroundColor: '#fef6dd',\n                                                            height: '100%',\n                                                            borderRadius: 10\n                                                        }}>\n                                                            <TextInput\n                                                                style={{ flex: 2, fontSize: 35, textAlign: 'center' }}\n                                                                keyboardType='decimal-pad'\n                                                                placeholder=\"⽤量\"\n                                                                value={'' + record.amount}\n                                                                onChangeText={(milk_amount) => {this.handleEditMilkAmout(record_id, milk_amount)}}\n                                                            />\n                                                            <Text style={{ flex: 1, fontSize: 30, textAlign: 'center' }}>\n                                                                c.c.\n                                                            </Text>\n                                                        </View>\n                                                        <View style={{ width: '20%', marginRight: '4%', height: '100%' }}>\n                                                            <TouchableHighlight\n                                                                style={{ flex:1, justifyContent: 'center', backgroundColor: '#ffe1d0', borderRadius: 10}}\n                                                                onPress={() => this.confirmToRemoveRecord(student_id, record_id, index)}\n                                                            >\n                                                                <Text style={{ fontSize: 30, textAlign: 'center' }}>\n                                                                    移除\n                                                                </Text>\n                                                            </TouchableHighlight>\n                                                        </View>\n                                                    </View>\n                                                )\n                                            })}\n                                        </View>\n                                    </View>\n                                </Card>\n                            </View>\n                        )\n                    })}\n                </Content>\n            </Container>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    childThumbnail: {\n        // width: 100,\n        // height: 100,\n        // backgroundColor: 'white',\n        // marginLeft: -7,\n    },\n    thumbnailImage: {\n        width: 140,\n        height: 140,\n        borderRadius: 70\n    },\n    subHeading: {\n        width: '90%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        alignSelf: 'center'\n    },\n    cardBody: {\n        // flex: 1,\n        flexDirection: 'row',\n        marginVertical: 6\n        // alignItems: 'center',\n        // justifyContent: 'center',\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        class: state.classInfo,\n        milk: state.milk\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            editMilkAmount,\n            addMilkRecord,\n            fetchClassMilkData,\n            createDataSuccess,\n            createDataFail,\n            editDataSuccess,\n            editDataFail,\n            removeRecord,\n            removeMilkRecordSuccess,\n            removeMilkRecordFail,\n            editMilkTime\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TeacherMilkLog)"]},"metadata":{},"sourceType":"module"}