{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import{connect}from'react-redux';import{bindActionCreators}from'redux';import{addHealthStatus,addTemperature}from\"../../redux/school/actions/index\";import PickerComponent from\"../picker\";var WellnessForm=function(_React$Component){_inherits(WellnessForm,_React$Component);var _super=_createSuper(WellnessForm);function WellnessForm(props){var _this;_classCallCheck(this,WellnessForm);_this=_super.call(this,props);_this.state={other_option:''};return _this;}_createClass(WellnessForm,[{key:\"handleSelectStatus\",value:function handleSelectStatus(student_id,record_id,status){if(status==='Cancel'){return;}else if(status==='其他'){this.setState({other_option:'其他'});}else{this.props.addHealthStatus(student_id,record_id,status,this.props.teacher_id);}}},{key:\"handleTempInput\",value:function handleTempInput(student_id,record_id,temperature){var normalized_temperature=temperature.slice(-1)==='.'?temperature.slice(0,2):temperature.length===3?temperature.slice(0,2)+'.'+temperature.slice(-1):temperature;this.props.addTemperature(student_id,record_id,normalized_temperature,this.props.teacher_id);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,student_id=_this$props.student_id,record_id=_this$props.record_id,records=_this$props.records,records_with_error=_this$props.records_with_error,autoFocus=_this$props.autoFocus;var wellness_data=records[record_id];return React.createElement(View,{style:{flex:1,flexDirection:'row',alignItems:'center',justifyContent:'center',borderWidth:2,borderColor:records_with_error.has(record_id)?'red':'transparent'}},React.createElement(View,{style:{flex:1,flexDirection:'row',backgroundColor:'rgba(255,255,255, 0.5)',marginRight:'10%',justifyContent:'center',padding:5}},React.createElement(TextInput,{style:{fontSize:40},autoFocus:autoFocus,keyboardType:\"decimal-pad\",placeholder:\"\\u9AD4\\u6EAB\",value:''+wellness_data.temperature,onChangeText:function onChangeText(temp){_this2.handleTempInput(student_id,record_id,temp);}}),wellness_data.temperature===''?null:React.createElement(Text,{style:{fontSize:30}},\"\\xB0\")),React.createElement(View,{style:{flex:2}},this.state.other_option===''?React.createElement(PickerComponent,{style:{backgroundColor:'rgba(255,255,255, 0.5)',alignItems:'center',padding:5},textStyle:{fontSize:40},selectedValue:wellness_data.status,options:[\"健康寶寶\",\"發燒\",\"喉嚨偏紅\",\"咳嗽\",\"流⿐涕\",\"頭痛\",\"活動⼒不佳\",\"嘔吐\",\"糞便帶有⾎絲\",\"拉肚子\",\"其他\",\"Cancel\"],handleOnClick:function handleOnClick(){},handleSelectValue:function handleSelectValue(status){return _this2.handleSelectStatus(student_id,record_id,status);}}):React.createElement(TextInput,{style:{fontSize:40,backgroundColor:'rgba(255,255,255, 0.5)',alignItems:'center',padding:2},keyboardType:\"default\",autoFocus:this.state.other_option!=='',selectTextOnFocus:true,value:wellness_data.status,onChangeText:function onChangeText(status){_this2.handleSelectStatus(student_id,record_id,status);},onBlur:function onBlur(){return _this2.setState({other_option:''});}})));}}]);return WellnessForm;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{records:state.healthstatus.records,records_with_error:state.healthstatus.records_with_error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({addHealthStatus:addHealthStatus,addTemperature:addTemperature},dispatch));};export default connect(mapStateToProps,mapDispatchToProps)(WellnessForm);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/wellnessform.js"],"names":["React","connect","bindActionCreators","addHealthStatus","addTemperature","PickerComponent","WellnessForm","props","state","other_option","student_id","record_id","status","setState","teacher_id","temperature","normalized_temperature","slice","length","records","records_with_error","autoFocus","wellness_data","flex","flexDirection","alignItems","justifyContent","borderWidth","borderColor","has","backgroundColor","marginRight","padding","fontSize","temp","handleTempInput","handleSelectStatus","Component","mapStateToProps","healthstatus","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, TextInput, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addHealthStatus, addTemperature } from '../../redux/school/actions/index'\nimport PickerComponent from '../picker'\n\nclass WellnessForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      other_option: ''\n    }\n  }\n\n  handleSelectStatus(student_id, record_id, status) {\n    if (status === 'Cancel') {\n      return\n    } else if (status === '其他') {\n      this.setState({\n        other_option: '其他'\n      })\n    } else {\n      this.props.addHealthStatus(student_id, record_id, status, this.props.teacher_id)\n    }\n  }\n\n  handleTempInput(student_id, record_id, temperature) {\n    const normalized_temperature = \n      temperature.slice(-1) === '.' ?\n        temperature.slice(0,2)\n        :\n      temperature.length === 3 ? \n        temperature.slice(0,2) + '.' + temperature.slice(-1)\n        : temperature\n    this.props.addTemperature(student_id, record_id, normalized_temperature, this.props.teacher_id)\n  }\n\n  render() {\n    const { student_id, record_id, records, records_with_error, autoFocus } = this.props\n    const wellness_data = records[record_id]\n    return (\n      <View\n        style={{\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderWidth: 2,\n          borderColor: records_with_error.has(record_id) ? 'red' : 'transparent'\n        }}\n      >\n        <View \n          style={{ \n            flex: 1, \n            flexDirection: 'row', \n            backgroundColor: 'rgba(255,255,255, 0.5)', \n            marginRight: '10%', \n            justifyContent: 'center',\n            padding: 5\n          }}\n        >\n          <TextInput\n            style={{ fontSize: 40 }}\n            autoFocus={autoFocus}\n            keyboardType='decimal-pad'\n            placeholder='體溫'\n            value={'' + wellness_data.temperature}\n            onChangeText={(temp) => { this.handleTempInput(student_id, record_id, temp) }}\n          />\n          {wellness_data.temperature === '' ? null : <Text style={{ fontSize: 30 }}>°</Text>}\n        </View>\n        <View style={{ flex: 2 }}>\n          {this.state.other_option === '' ? \n            <PickerComponent\n              style={{ \n                backgroundColor: 'rgba(255,255,255, 0.5)',\n                alignItems: 'center',\n                padding: 5\n              }}\n              textStyle={{fontSize: 40}}\n              selectedValue={wellness_data.status}\n              options={[\n                \"健康寶寶\",\n                \"發燒\",\n                \"喉嚨偏紅\",\n                \"咳嗽\",\n                \"流⿐涕\",\n                \"頭痛\",\n                \"活動⼒不佳\",\n                \"嘔吐\", \n                \"糞便帶有⾎絲\",\n                \"拉肚子\",\n                \"其他\",\n                \"Cancel\"\n              ]}\n              handleOnClick={() => { }}\n              handleSelectValue={(status) => this.handleSelectStatus(student_id, record_id, status)}\n            />\n          : <TextInput\n              style={{ \n                fontSize: 40,\n                backgroundColor: 'rgba(255,255,255, 0.5)',\n                alignItems: 'center',\n                padding: 2\n              }}\n              keyboardType='default'\n              autoFocus={this.state.other_option !== ''}\n              selectTextOnFocus={true}\n              // placeholder=''\n              value={wellness_data.status}\n              onChangeText={(status) => { this.handleSelectStatus(student_id, record_id, status) }}\n              onBlur={() => this.setState({ other_option: ''})}\n            />\n          }\n        </View>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      // class: state.classInfo,\n    records: state.healthstatus.records,\n    records_with_error: state.healthstatus.records_with_error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      ...bindActionCreators({\n          addHealthStatus,\n          addTemperature,\n      }, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WellnessForm)"]},"metadata":{},"sourceType":"module"}