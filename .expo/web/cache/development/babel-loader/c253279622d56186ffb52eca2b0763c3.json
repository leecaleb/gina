{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/morningremindercard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Body } from 'native-base';\nimport { formatDate, fetchData as _fetchData, post, beautifyTime, formatTime } from \"../util\";\nimport Reloading from \"../reloading\";\nimport TimeModal from \"./timemodal\";\nimport { debounce } from 'lodash';\n\nvar MorningReminderCard = function (_React$Component) {\n  _inherits(MorningReminderCard, _React$Component);\n\n  var _super = _createSuper(MorningReminderCard);\n\n  function MorningReminderCard(props) {\n    var _this;\n\n    _classCallCheck(this, MorningReminderCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      morning_reminder_id: null,\n      text: '',\n      reminder_read: false,\n      isConnected: true,\n      scrollHeight: '100%',\n      milk_timestamp: new Date(),\n      diaper_timestamp: new Date(),\n      milk_amount: '',\n      diaper_type: '小便',\n      showDateTimeModal: false,\n      showDateTimeModalType: '',\n      includeMilkIntake: false,\n      includeDiaper: false\n    };\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_this));\n    _this.onSendMessageDelay = debounce(_this.sendMessage, 1000).bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MorningReminderCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var date = this.props.date;\n      this.fetchData(this.props.child_id, new Date(date.getTime()));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.date !== prevProps.date) {\n        this.setState({\n          isLoading: true,\n          text: '',\n          scrollHeight: '100%',\n          includeMilkIntake: false,\n          milk_timestamp: new Date(),\n          milk_amount: '',\n          includeDiaper: false,\n          diaper_timestamp: new Date(),\n          diaper_type: '小便'\n        });\n        this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n      } else if (this.props.child_id !== prevProps.child_id) {\n        this.setState({\n          isLoading: true,\n          text: '',\n          scrollHeight: '100%',\n          includeMilkIntake: false,\n          milk_timestamp: new Date(),\n          milk_amount: '',\n          includeDiaper: false,\n          diaper_timestamp: new Date(),\n          diaper_type: '小便'\n        });\n        this.fetchData(this.props.child_id, new Date());\n      } else if (this.props.isConnected != prevProps.isConnected) {\n        this.setState({\n          isConnected: this.props.isConnected\n        });\n      }\n    }\n  }, {\n    key: \"setScrollHeight\",\n    value: function setScrollHeight(scrollHeight) {\n      this.setState({\n        scrollHeight: scrollHeight\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(child_id, date) {\n      var start_date, end_date, messageData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_fetchData('morningreminder', child_id, start_date, end_date));\n\n            case 5:\n              messageData = _context.sent;\n\n              if (!(messageData.data === undefined || messageData.data[start_date] === undefined)) {\n                _context.next = 9;\n                break;\n              }\n\n              this.setState({\n                isLoading: false,\n                morning_reminder_id: null,\n                text: '',\n                reminder_read: false\n              });\n              return _context.abrupt(\"return\");\n\n            case 9:\n              this.setState({\n                isLoading: false,\n                morning_reminder_id: messageData.data[start_date].morning_reminder_id,\n                text: messageData.data[start_date].text,\n                reminder_read: messageData.data[start_date].reminder_read\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage() {\n      var _this$props, class_id, date, parent_id, _this$state, text, morning_reminder_id, isConnected, includeMilkIntake, milk_timestamp, milk_amount, includeDiaper, diaper_timestamp, diaper_type, reminder, body, response, success, statusCode, message, data;\n\n      return _regeneratorRuntime.async(function sendMessage$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = this.props, class_id = _this$props.class_id, date = _this$props.date, parent_id = _this$props.parent_id;\n              _this$state = this.state, text = _this$state.text, morning_reminder_id = _this$state.morning_reminder_id, isConnected = _this$state.isConnected, includeMilkIntake = _this$state.includeMilkIntake, milk_timestamp = _this$state.milk_timestamp, milk_amount = _this$state.milk_amount, includeDiaper = _this$state.includeDiaper, diaper_timestamp = _this$state.diaper_timestamp, diaper_type = _this$state.diaper_type;\n\n              if (!(!this.editable() || text === '' && !includeMilkIntake && !includeDiaper)) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              if (isConnected) {\n                _context2.next = 7;\n                break;\n              }\n\n              alert('網路連不到! 請稍後再試試看');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              reminder = text;\n\n              if (includeDiaper) {\n                reminder = \"\\u5982\\u5EC1: \" + beautifyTime(diaper_timestamp) + \" \" + diaper_type + \"\\n\" + reminder;\n              }\n\n              if (includeMilkIntake) {\n                reminder = \"\\u9935\\u5976: \" + beautifyTime(milk_timestamp) + \" \" + milk_amount + \" c.c.\\n\" + reminder;\n              }\n\n              body = {\n                morning_reminder_id: morning_reminder_id,\n                student_id: this.props.child_id,\n                parent_id: parent_id,\n                timestamp: formatDate(date) + ' ' + formatTime(date),\n                text: reminder\n              };\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(post(\"/morningreminder/class/\" + class_id, body));\n\n            case 13:\n              response = _context2.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context2.next = 18;\n                break;\n              }\n\n              alert(\"Sorry \\u50B3\\u9001\\u8A0A\\u606F\\u6642\\u96FB\\u8166\\u51FA\\u72C0\\u6CC1\\u4E86\\uFF01\\u8ACB\\u622A\\u5716\\u548C\\u8207\\u5DE5\\u7A0B\\u5E2B\\u806F\\u7E6B\\n\\n\" + message);\n              return _context2.abrupt(\"return\");\n\n            case 18:\n              alert(\"\\u8A0A\\u606F\\u50B3\\u9054\\u6210\\u529F\\uFF01\");\n              this.setState({\n                includeMilkIntake: false,\n                milk_timestamp: new Date(),\n                milk_amount: '',\n                includeDiaper: false,\n                diaper_timestamp: new Date(),\n                diaper_type: '小便',\n                morning_reminder_id: ''\n              });\n              this.fetchData(this.props.child_id, new Date(this.props.date));\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"editable\",\n    value: function editable() {\n      var date = this.props.date;\n      var threshold = new Date();\n      threshold.setHours(10, 0, 0);\n      return date.toDateString() === new Date().toDateString() && new Date() < threshold || date.toDateString() !== new Date().toDateString() && date > new Date();\n    }\n  }, {\n    key: \"selectDatetimeConfirm\",\n    value: function selectDatetimeConfirm(datetime) {\n      var showDateTimeModalType = this.state.showDateTimeModalType;\n\n      if (showDateTimeModalType === 'milkintake') {\n        this.setState({\n          milk_timestamp: datetime\n        });\n      } else if (showDateTimeModalType === 'diaper') {\n        this.setState({\n          diaper_timestamp: datetime\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          isLoading = _this$state2.isLoading,\n          text = _this$state2.text,\n          scrollHeight = _this$state2.scrollHeight,\n          morning_reminder_id = _this$state2.morning_reminder_id,\n          reminder_read = _this$state2.reminder_read,\n          milk_timestamp = _this$state2.milk_timestamp,\n          milk_amount = _this$state2.milk_amount,\n          diaper_timestamp = _this$state2.diaper_timestamp,\n          diaper_type = _this$state2.diaper_type,\n          showDateTimeModal = _this$state2.showDateTimeModal,\n          includeMilkIntake = _this$state2.includeMilkIntake,\n          includeDiaper = _this$state2.includeDiaper;\n      return React.createElement(Card, {\n        style: {\n          width: '93%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 56,\n          height: 56,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icon-morningreminder.png\"),\n        style: {\n          width: 48,\n          height: 48\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 8,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          paddingRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, \"\\u611B\\u7684\\u53EE\\u5680\"), text !== '' && React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 31\n        }\n      }, reminder_read ? '已讀' : '未讀')), React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 8,\n          paddingRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          backgroundColor: includeMilkIntake ? '#dcf3d0' : 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: true,\n        onClick: function onClick() {\n          if (!_this2.editable()) return;\n\n          _this2.setState({\n            includeMilkIntake: !includeMilkIntake\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 24,\n          height: 24,\n          borderWidth: 1,\n          borderRadius: 12,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 16,\n          height: 16,\n          borderRadius: 8,\n          backgroundColor: includeMilkIntake ? '#00c07f' : 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginLeft: 10,\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, \"\\u9935\\u5976: \"))), React.createElement(TouchableOpacity, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 10\n        },\n        onClick: function onClick() {\n          if (!_this2.editable()) return;\n\n          _this2.setState({\n            showDateTimeModalType: 'milkintake',\n            includeMilkIntake: true\n          });\n\n          _this2.props.showTimeModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, \"\" + beautifyTime(milk_timestamp))), React.createElement(TextInput, {\n        editable: this.editable(),\n        style: {\n          marginLeft: 15,\n          width: 55,\n          fontSize: 25\n        },\n        keyboardType: \"number-pad\",\n        placeholder: '_____',\n        value: '' + milk_amount,\n        onChangeText: function onChangeText(milk_amount) {\n          return _this2.setState({\n            milk_amount: milk_amount\n          });\n        },\n        onFocus: function onFocus() {\n          if (!_this2.editable()) return;\n\n          _this2.setState({\n            includeMilkIntake: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, \"  c.c.\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: 10,\n          backgroundColor: includeDiaper ? '#dcf3d0' : 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: true,\n        onClick: function onClick() {\n          if (!_this2.editable()) return;\n\n          _this2.setState({\n            includeDiaper: !includeDiaper\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 24,\n          height: 24,\n          borderWidth: 1,\n          borderRadius: 12,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 16,\n          height: 16,\n          borderRadius: 8,\n          backgroundColor: includeDiaper ? '#00c07f' : 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginLeft: 10,\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 23\n        }\n      }, \"\\u5982\\u5EC1: \"))), React.createElement(TouchableOpacity, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 5\n        },\n        onClick: function onClick() {\n          if (!_this2.editable()) return;\n\n          _this2.setState({\n            showDateTimeModalType: 'diaper',\n            includeDiaper: true\n          });\n\n          _this2.props.showTimeModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, \"\" + beautifyTime(diaper_timestamp))), React.createElement(TouchableOpacity, {\n        style: {\n          marginLeft: 15,\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 10\n        },\n        onClick: function onClick() {\n          if (!_this2.editable()) return;\n\n          _this2.setState({\n            diaper_type: diaper_type === '小便' ? '大便' : diaper_type === '大便' ? '無排便' : '小便',\n            includeDiaper: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, diaper_type))), React.createElement(TextInput, {\n        key: morning_reminder_id,\n        editable: this.editable(),\n        style: {\n          width: '100%',\n          height: scrollHeight,\n          backgroundColor: '#dcf3d0',\n          fontSize: 25,\n          paddingTop: 10,\n          padding: 10,\n          marginTop: 10\n        },\n        placeholder: this.editable() ? '點擊我開始填寫...' : isLoading ? '下載中...' : '已不能填寫',\n        value: text,\n        multiline: true,\n        scrollEnabled: false,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            text: text\n          });\n        },\n        onChange: function onChange(e) {\n          return _this2.setScrollHeight(e.target.scrollHeight);\n        },\n        onLayout: function onLayout(event) {\n          var scrollHeight = event.nativeEvent.target.scrollHeight;\n\n          _this2.setState({\n            scrollHeight: scrollHeight\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        disabled: !this.editable(),\n        style: {\n          backgroundColor: '#00c07f',\n          padding: 10,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        underlayColor: \"transparent\",\n        onClick: this.onSendMessageDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }\n      }, \"\\u9001\\u51FA\"))))));\n    }\n  }]);\n\n  return MorningReminderCard;\n}(React.Component);\n\nexport { MorningReminderCard as default };","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/morningremindercard.js"],"names":["React","Card","Body","formatDate","fetchData","post","beautifyTime","formatTime","Reloading","TimeModal","debounce","MorningReminderCard","props","state","isLoading","morning_reminder_id","text","reminder_read","isConnected","scrollHeight","milk_timestamp","Date","diaper_timestamp","milk_amount","diaper_type","showDateTimeModal","showDateTimeModalType","includeMilkIntake","includeDiaper","bind","onSendMessageDelay","sendMessage","date","child_id","getTime","prevProps","setState","start_date","setDate","getDate","end_date","messageData","data","undefined","class_id","parent_id","editable","alert","reminder","body","student_id","timestamp","response","success","statusCode","message","threshold","setHours","toDateString","datetime","width","flex","flexDirection","height","justifyContent","alignItems","require","paddingTop","paddingRight","fontSize","paddingVertical","backgroundColor","borderWidth","borderRadius","marginLeft","alignSelf","padding","showTimeModal","marginTop","e","setScrollHeight","target","event","nativeEvent","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, Image, TextInput, TouchableOpacity, Alert } from 'react-native'\nimport { Card, Body } from 'native-base'\nimport { formatDate, fetchData, post, beautifyTime, formatTime } from '../util'\nimport Reloading from '../reloading'\nimport TimeModal from './timemodal'\nimport { debounce } from 'lodash'\n\nexport default class MorningReminderCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        isLoading: true,\n        // present: false,\n        morning_reminder_id: null,\n        text: '',\n        reminder_read: false,\n        isConnected: true,\n        scrollHeight: '100%',\n        milk_timestamp: new Date(),\n        diaper_timestamp: new Date(),\n        milk_amount: '',\n        diaper_type: '小便',\n        showDateTimeModal: false,\n        showDateTimeModalType: '',\n        includeMilkIntake: false,\n        includeDiaper: false\n    }\n    this.fetchData = this.fetchData.bind(this)\n    this.onSendMessageDelay = debounce(this.sendMessage, 1000).bind(this)\n  }\n\n  componentDidMount() {\n    const { date } = this.props\n    this.fetchData(this.props.child_id, new Date(date.getTime()))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      // console.log('this.props.date !== prevProps.date')\n      this.setState({ isLoading: true, text: '', scrollHeight: '100%', includeMilkIntake: false, milk_timestamp: new Date(), milk_amount: '', \n        includeDiaper: false, diaper_timestamp: new Date(), diaper_type: '小便' })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    } else if (this.props.child_id !== prevProps.child_id) {\n      this.setState({ isLoading: true, text: '', scrollHeight: '100%', includeMilkIntake: false, milk_timestamp: new Date(), milk_amount: '', \n        includeDiaper: false, diaper_timestamp: new Date(), diaper_type: '小便' })\n      this.fetchData(this.props.child_id, new Date());\n    // } else if (this.props.present !== prevProps.present) {\n    //     this.setState({ present: this.props.present })\n    } else if (this.props.isConnected != prevProps.isConnected) {\n      this.setState({\n        isConnected: this.props.isConnected\n      })\n    }\n  }\n\n  setScrollHeight(scrollHeight) {\n    // console.log('scrollHeight: ', scrollHeight)\n    this.setState({ scrollHeight })\n  }\n\n  async fetchData(child_id, date) {\n    const start_date = formatDate(date)\n    date.setDate(date.getDate() + 1)\n    const end_date = formatDate(date)\n    const messageData = await fetchData('morningreminder', child_id, start_date, end_date)\n    // console.log('messageData: ', messageData)\n    if (messageData.data === undefined || messageData.data[start_date] === undefined) {\n      this.setState({\n        isLoading: false,\n        morning_reminder_id: null,\n        text: '',\n        reminder_read: false\n      })\n      return\n    }\n    this.setState({\n        isLoading: false,\n        morning_reminder_id: messageData.data[start_date].morning_reminder_id,\n        text: messageData.data[start_date].text,\n        reminder_read: messageData.data[start_date].reminder_read\n    })\n  }\n\n  async sendMessage() {\n    const { class_id, date, parent_id } = this.props\n    const { text, morning_reminder_id, isConnected, \n      includeMilkIntake, milk_timestamp, milk_amount, includeDiaper, diaper_timestamp, diaper_type } = this.state\n    if (!this.editable() || (text === '' && !includeMilkIntake && !includeDiaper)) return\n    if (!isConnected) {\n      alert('網路連不到! 請稍後再試試看')\n      return\n    }\n\n    let reminder = text\n    if(includeDiaper) {\n      reminder = `如廁: ${beautifyTime(diaper_timestamp)} ${diaper_type}\\n` + reminder\n    }\n    if (includeMilkIntake) {\n      reminder = `餵奶: ${beautifyTime(milk_timestamp)} ${milk_amount} c.c.\\n` + reminder\n    }\n\n    const body = {\n        morning_reminder_id,\n        student_id: this.props.child_id,\n        parent_id,\n        timestamp: formatDate(date) + ' ' + formatTime(date),\n        text: reminder\n    }\n    const response = await post(`/morningreminder/class/${class_id}`, body)\n    const { success, statusCode, message, data } = response\n    if (!success) {\n      alert(`Sorry 傳送訊息時電腦出狀況了！請截圖和與工程師聯繫\\n\\n` + message)\n      return \n    }\n    alert(`訊息傳達成功！`)\n    this.setState({\n      includeMilkIntake: false,\n      milk_timestamp: new Date(),\n      milk_amount: '',\n      includeDiaper: false,\n      diaper_timestamp: new Date(),\n      diaper_type: '小便',\n      morning_reminder_id: ''\n    })\n\n    this.fetchData(this.props.child_id, new Date(this.props.date))\n  }\n\n  editable() {\n    const { date } = this.props\n    const threshold = new Date()\n    threshold.setHours(10, 0, 0)\n    return (date.toDateString() === (new Date).toDateString() && new Date() < threshold) || (date.toDateString() !== (new Date).toDateString() && date > (new Date()))\n    // return true\n  }\n\n  selectDatetimeConfirm(datetime) {\n    const { showDateTimeModalType } = this.state\n    if ( showDateTimeModalType === 'milkintake') {\n      this.setState({\n        milk_timestamp: datetime,\n        // showDateTimeModal: false\n      })\n    } else if (showDateTimeModalType === 'diaper') {\n      this.setState({\n        diaper_timestamp: datetime,\n        // showDateTimeModal: false\n      })\n    }\n  }\n\n  render() {\n    const { isLoading, text, scrollHeight, morning_reminder_id, reminder_read, \n      milk_timestamp, milk_amount, diaper_timestamp, diaper_type, showDateTimeModal, includeMilkIntake, includeDiaper } = this.state\n    // console.log('this.state: ', this.state)\n    return (\n      <Card style={{ width: '93%' }}>\n        {/* {showDateTimeModal &&\n          <TimeModal\n            start_date={new Date()}\n            datetime_type={'time'}\n            hideModal={() => this.setState({ showDateTimeModal: false })}\n            selectDatetimeConfirm={(datetime) => this.selectDatetimeConfirm(datetime)}\n            minDatetime={null}\n            maxDatetime={null}\n            minTime={null}\n            maxTime={null}\n          />\n        } */}\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ width: 56, height: 56, justifyContent: 'center', alignItems: 'center'}}>\n            <Image\n              source={require('../../assets/icon-morningreminder.png')}\n              style={{\n                  width: 48,\n                  height: 48\n              }}\n            />\n          </View>\n          <View style={{ flex: 1 }}>\n            <View style={{ paddingTop: 8, flexDirection: 'row', justifyContent: 'space-between', paddingRight: 8 }}>\n              <Text style={{ fontSize: 20 }}>愛的叮嚀</Text>\n              {text !== '' && <Text style={{ fontSize: 20 }}>{reminder_read ? '已讀' : '未讀'}</Text>}\n            </View>\n            <View style={{ flex: 1, paddingVertical: 8, paddingRight: 8 }}>\n                {/* milk */}\n                <View style={{ flexDirection: 'row', alignItems: 'center', backgroundColor: includeMilkIntake ? '#dcf3d0' : 'transparent' }}>\n                  <TouchableOpacity\n                    disabled={true}\n                    onClick={() => {\n                      if (!this.editable()) return\n                      this.setState({ includeMilkIntake: !includeMilkIntake })\n                    }}\n                  >\n                    <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                      <View\n                        style={{ width: 24, height: 24, borderWidth: 1, borderRadius: 12, justifyContent: 'center', alignItems: 'center' }}\n                      >\n                        <View \n                          style={{\n                            width: 16,\n                            height: 16,\n                            borderRadius: 8,\n                            backgroundColor: includeMilkIntake ? '#00c07f' : 'white'\n                          }}\n                        >\n                        </View>\n                      </View>\n                      <Text style={{ fontSize: 20, marginLeft: 10, alignSelf: 'center' }}>餵奶: </Text>\n                    </View>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                    style={{ justifyContent: 'center', alignItems: 'center', padding: 10 }}\n                    onClick={() => {\n                      if (!this.editable()) return\n                      this.setState({\n                        showDateTimeModalType: 'milkintake',\n                        // showDateTimeModal: true,\n                        includeMilkIntake: true\n                      })\n                      this.props.showTimeModal()\n                    }}\n                  >\n                    <Text style={{ fontSize: 25 }}>{`${beautifyTime(milk_timestamp)}`}</Text>\n                  </TouchableOpacity>\n                  <TextInput\n                    editable={this.editable()}\n                    style={{ marginLeft: 15, width: 55, fontSize: 25 }}\n                    keyboardType=\"number-pad\"\n                    placeholder={'_____'}\n                    value={''+milk_amount}\n                    onChangeText={(milk_amount) => this.setState({ milk_amount })}\n                    onFocus={() => {\n                      if (!this.editable()) return\n                      this.setState({ includeMilkIntake: true })\n                    }}\n                  />\n                  <Text style={{ fontSize: 20 }}>  c.c.</Text>\n                </View>\n\n                {/* diaper */}\n                <View \n                  style={{ \n                    flexDirection: 'row', alignItems: 'center', \n                    marginTop: 10, backgroundColor: includeDiaper ? '#dcf3d0' : 'transparent'\n                  }}\n                >\n                  <TouchableOpacity\n                    disabled={true}\n                    onClick={() => {\n                      if (!this.editable()) return\n                      this.setState({ includeDiaper: !includeDiaper })\n                    }}\n                  >\n                    <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                      <View\n                        style={{ width: 24, height: 24, borderWidth: 1, borderRadius: 12, justifyContent: 'center', alignItems: 'center' }}\n                      >\n                        <View \n                          style={{\n                            width: 16,\n                            height: 16,\n                            borderRadius: 8,\n                            backgroundColor: includeDiaper? '#00c07f' : 'white'\n                          }}\n                        >\n                        </View>\n                      </View>\n                      <Text style={{ fontSize: 20, marginLeft: 10, alignSelf: 'center' }}>如廁: </Text>\n                    </View>\n                  </TouchableOpacity>\n                  \n                  <TouchableOpacity\n                    style={{ justifyContent: 'center', alignItems: 'center', padding: 5 }}\n                    onClick={() => {\n                      if (!this.editable()) return\n                      this.setState({\n                        showDateTimeModalType: 'diaper',\n                        // showDateTimeModal: true,\n                        includeDiaper: true\n                      })\n                      this.props.showTimeModal()\n                    }}\n                  >\n                    <Text style={{ fontSize: 25, padding: 5 }}>{`${beautifyTime(diaper_timestamp)}`}</Text>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                    style={{ marginLeft: 15, justifyContent: 'center', alignItems: 'center', padding: 10 }}\n                    onClick={() => {\n                      if (!this.editable()) return\n                      this.setState({\n                        diaper_type: \n                          diaper_type === '小便' ? \n                            '大便'\n                            : diaper_type === '大便' ?\n                              '無排便'\n                              : '小便',\n                        includeDiaper: true\n                      })\n                    }}\n                  >\n                    <Text style={{ fontSize: 20 }}>{diaper_type}</Text>\n                  </TouchableOpacity>\n                </View>\n\n                {/* text */}\n                <TextInput\n                    key={morning_reminder_id}\n                    editable={this.editable()}\n                    style={{ width: '100%', height: scrollHeight, backgroundColor: '#dcf3d0', \n                      fontSize: 25, paddingTop: 10, padding: 10, marginTop: 10\n                    }}\n                    placeholder={\n                      this.editable() ? \n                        '點擊我開始填寫...' \n                        : isLoading ?\n                          '下載中...'\n                          :'已不能填寫'\n                    }\n                    value={text}\n                    multiline={true}\n                    scrollEnabled={false}\n                    // maxLength={200}\n                    onChangeText={(text) => this.setState({ text })}\n                    onChange={(e) => this.setScrollHeight(e.target.scrollHeight)}\n                    onLayout={(event) => {\n                      const { scrollHeight } = event.nativeEvent.target\n                      this.setState({\n                          scrollHeight\n                      })\n                    }}\n                />\n                <TouchableOpacity\n                    disabled={!this.editable()}\n                    style={{ backgroundColor: '#00c07f', padding: 10, justifyContent: 'center', alignItems: 'center' }}\n                    underlayColor=\"transparent\"\n                    onClick={this.onSendMessageDelay}\n                >\n                    <Text style={{ fontSize: 25}}>送出</Text>\n                </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Card>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}