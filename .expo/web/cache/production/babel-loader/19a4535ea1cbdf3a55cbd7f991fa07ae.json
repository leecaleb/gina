{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Alert from\"react-native-web/dist/exports/Alert\";import{connect}from'react-redux';import{bindActionCreators}from'redux';import Reloading from\"../reloading\";import{formatHourMinute}from\"../util\";import LoginNumberPad from\"./loginnumberpad\";var Inbox=function(_React$Component){_inherits(Inbox,_React$Component);var _super=_createSuper(Inbox);function Inbox(props){var _this;_classCallCheck(this,Inbox);_this=_super.call(this,props);_this.state={isLoading:true,refreshing:false,selected_request_id:'',showLoginNumberPad:false};return _this;}_createClass(Inbox,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){var _this$props$route$par=this.props.route.params,messages=_this$props$route$par.messages,students=_this$props$route$par.students;return React.createElement(View,{style:{flex:1,padding:40}},React.createElement(ScrollView,null,messages.map(function(message,index){var activities=message.activities,items_to_bring=message.items_to_bring,message_for_teacher=message.message_for_teacher,morning_reminder=message.morning_reminder,other_activity=message.other_activity,other_item=message.other_item,student_id=message.student_id,teacher_id=message.teacher_id,text=message.text;return React.createElement(View,{key:index,style:{flexDirection:'row',backgroundColor:'white',borderWidth:1,borderColor:'lightgrey',marginBottom:20,padding:20}},React.createElement(View,null,React.createElement(Image,{source:students[student_id].profile_picture===''?require(\"../../assets/icon-thumbnail.png\"):{uri:students[student_id].profile_picture},style:styles.thumbnailImage}),React.createElement(View,{style:{justifyContent:'center',alignItems:'center',paddingTop:20}},React.createElement(Text,{style:{fontSize:25}},students[student_id].name))),React.createElement(View,{style:{flex:1,backgroundColor:'',marginLeft:20}},React.createElement(View,{style:{}},React.createElement(Text,{style:{fontSize:25,fontWeight:'bold'}},\"\\u8001\\u5E2B\\u7684\\u8A71:\"),React.createElement(Text,{style:{fontSize:20}},text&&text+'\\n')),React.createElement(View,{style:{}},React.createElement(Text,{style:{fontSize:25,fontWeight:'bold'}},\"\\u5BB6\\u9577\\u56DE\\u61C9:\"),React.createElement(Text,{style:{fontSize:20}},message_for_teacher&&message_for_teacher+'\\n')),React.createElement(View,{style:{}},React.createElement(Text,{style:{fontSize:25,fontWeight:'bold'}},\"\\u65E9\\u6668\\u53EE\\u5680:\"),React.createElement(Text,{style:{fontSize:20}},morning_reminder&&morning_reminder+'\\n'))));})));}}]);return Inbox;}(React.Component);var styles=StyleSheet.create({cardContainer:{width:170,paddingRight:5},thumbnailImage:{height:160,width:160,borderRadius:80}});var mapStateToProps=function mapStateToProps(state){return{class:state.classInfo,requests:state.medicationrequests};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({},dispatch));};export default connect(mapStateToProps,mapDispatchToProps)(Inbox);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/inbox.js"],"names":["React","connect","bindActionCreators","Reloading","formatHourMinute","LoginNumberPad","Inbox","props","state","isLoading","refreshing","selected_request_id","showLoginNumberPad","route","params","messages","students","flex","padding","map","message","index","activities","items_to_bring","message_for_teacher","morning_reminder","other_activity","other_item","student_id","teacher_id","text","flexDirection","backgroundColor","borderWidth","borderColor","marginBottom","profile_picture","require","uri","styles","thumbnailImage","justifyContent","alignItems","paddingTop","fontSize","name","marginLeft","fontWeight","Component","StyleSheet","create","cardContainer","width","paddingRight","height","borderRadius","mapStateToProps","class","classInfo","requests","medicationrequests","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, RefreshControl, StyleSheet, Image, TouchableHighlight, ScrollView, Alert } from 'react-native'\nimport { connect } from 'react-redux'\n// import MedRequestModal from './medrequestmodal'\nimport { bindActionCreators } from 'redux';\n// import { initializeRequests, fillMedRequest } from '../../../redux/school/actions/index' \nimport Reloading from '../reloading'\nimport { formatHourMinute } from '../util'\nimport LoginNumberPad from './loginnumberpad'\n\nclass Inbox extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            refreshing: false,\n            selected_request_id: '',\n            showLoginNumberPad: false\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        const { messages, students } = this.props.route.params\n        // console.log(messages)\n        return (\n            <View style={{ flex: 1, padding: 40 }}>\n                <ScrollView>\n                    {messages.map((message, index) => {\n                        const { activities, items_to_bring, message_for_teacher, morning_reminder, other_activity, other_item, student_id, teacher_id, text } = message\n                        return (\n                            <View \n                                key={index}\n                                style={{\n                                    flexDirection: 'row',\n                                    backgroundColor: 'white',\n                                    borderWidth: 1,\n                                    borderColor: 'lightgrey',\n                                    marginBottom: 20,\n                                    padding: 20,\n\n                                }}\n                            >\n                                <View>\n                                    <Image\n                                        source={\n                                            students[student_id].profile_picture === '' ?\n                                                require('../../assets/icon-thumbnail.png')\n                                                : {uri: students[student_id].profile_picture} \n                                        }\n                                        style={styles.thumbnailImage}\n                                    />\n                                    <View style={{ justifyContent: 'center', alignItems: 'center', paddingTop: 20 }}>\n                                        <Text style={{ fontSize: 25 }}>\n                                            {students[student_id].name}\n                                        </Text>\n                                    </View>\n                                </View>\n                                \n                                <View style={{ flex:1, backgroundColor: '', marginLeft: 20 }}>\n\n                                    <View style={{}}>\n                                        <Text style={{ fontSize: 25, fontWeight: 'bold' }}>\n                                            老師的話:\n                                        </Text>\n                                        <Text style={{ fontSize: 20 }}>\n                                            {text && text + '\\n'}\n                                        </Text>\n                                    </View>\n\n                                    <View style={{}}>\n                                        <Text style={{ fontSize: 25, fontWeight: 'bold' }}>\n                                            家長回應:\n                                        </Text>\n                                        <Text style={{ fontSize: 20 }}>\n                                            {message_for_teacher && message_for_teacher + '\\n'}\n                                        </Text>\n                                    </View>\n\n                                    <View style={{}}>\n                                        <Text style={{ fontSize: 25, fontWeight: 'bold' }}>\n                                            早晨叮嚀:\n                                        </Text>\n                                        <Text style={{ fontSize: 20 }}>\n                                            {morning_reminder && morning_reminder + '\\n'}\n                                        </Text>\n                                    </View>\n\n                                </View>\n                            </View>\n                        )\n                    })}\n                </ScrollView>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    cardContainer: {\n        width: 170,\n        paddingRight: 5\n    },\n    thumbnailImage: {\n        height: 160,\n        width: 160,\n        borderRadius: 80\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        class: state.classInfo,\n        requests: state.medicationrequests\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({}, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Inbox)"]},"metadata":{},"sourceType":"module"}