{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export default function parent(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isConnected:true,child_of_id:{},med_requests:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SET_CONNECT_STATE':{var isConnected=action.isConnected;return _objectSpread(_objectSpread({},state),{},{isConnected:isConnected});}case'INITIALIZE_CHILDREN':var data=action.data;data.forEach(function(child){var id=child.id,name=child.name,class_id=child.class_id,profile_picture=child.profile_picture,school_id=child.school_id;state.child_of_id[id]={name:name,class_id:class_id,profile_picture:profile_picture,school_id:school_id};});return _objectSpread({},state);case'MARK_PRESENT':var student_id=action.student_id;state.child_of_id[student_id].present=true;return _objectSpread({},state);case'GET_MED_REQUEST_SUCCESS':var med_requests=action.med_requests;return _objectSpread(_objectSpread({},state),{},{med_requests:med_requests});case'CLEAR_STATE':{return{isConnected:true,child_of_id:{},med_requests:[]};}default:return state;}}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/parent/reducers/parent.js"],"names":["parent","state","isConnected","child_of_id","med_requests","action","type","data","forEach","child","id","name","class_id","profile_picture","school_id","student_id","present"],"mappings":"+1BAAA,cAAe,SAASA,CAAAA,MAAT,EA0BJ,IA1BoBC,CAAAA,KA0BpB,2DA1B4B,CAInCC,WAAW,CAAE,IAJsB,CAKnCC,WAAW,CAAE,EALsB,CAsBnCC,YAAY,CAAE,EAtBqB,CA0B5B,IAARC,CAAAA,MAAQ,2CACP,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,mBAAL,CAA0B,IACdJ,CAAAA,WADc,CACEG,MADF,CACdH,WADc,CAEtB,sCACOD,KADP,MAEIC,WAAW,CAAXA,WAFJ,GAIH,CACD,IAAK,qBAAL,IACYK,CAAAA,IADZ,CACqBF,MADrB,CACYE,IADZ,CAEIA,IAAI,CAACC,OAAL,CAAa,SAACC,KAAD,CAAW,IACZC,CAAAA,EADY,CACuCD,KADvC,CACZC,EADY,CACRC,IADQ,CACuCF,KADvC,CACRE,IADQ,CACFC,QADE,CACuCH,KADvC,CACFG,QADE,CACQC,eADR,CACuCJ,KADvC,CACQI,eADR,CACyBC,SADzB,CACuCL,KADvC,CACyBK,SADzB,CAEpBb,KAAK,CAACE,WAAN,CAAkBO,EAAlB,EAAwB,CACpBC,IAAI,CAAJA,IADoB,CAEpBC,QAAQ,CAARA,QAFoB,CAGpBC,eAAe,CAAfA,eAHoB,CAIpBC,SAAS,CAATA,SAJoB,CAAxB,CAMH,CARD,EASA,wBACOb,KADP,EAIJ,IAAK,cAAL,IACYc,CAAAA,UADZ,CAC2BV,MAD3B,CACYU,UADZ,CAEId,KAAK,CAACE,WAAN,CAAkBY,UAAlB,EAA8BC,OAA9B,CAAwC,IAAxC,CACA,wBACOf,KADP,EAIJ,IAAK,yBAAL,IACYG,CAAAA,YADZ,CAC6BC,MAD7B,CACYD,YADZ,CAEI,sCACOH,KADP,MAEIG,YAAY,CAAZA,YAFJ,GAKJ,IAAK,aAAL,CAAoB,CAChB,MAAO,CACHF,WAAW,CAAE,IADV,CAEHC,WAAW,CAAE,EAFV,CAGHC,YAAY,CAAE,EAHX,CAAP,CAKH,CAED,QACI,MAAOH,CAAAA,KAAP,CA9CR,CAgDH","sourcesContent":["export default function parent(state = {\n    // first_name: '',\n    // last_name: '',\n    // id: '',\n    isConnected: true,\n    child_of_id: {\n        /*\n        {child_A_id}: {\n            first_name: \"\",\n            last_name: \"\",\n            class_id: SOME_ID,\n            profile_pic: \"\",\n            // teacher_ids: []\n        },\n        {child_B_id}: {\n            first_name: \"\",\n            last_name: \"\",\n            class_id: SOME_ID,\n            profile_pic: \"\"\n        }\n        */\n    },\n    med_requests: []\n    // teachers: {\n\n    // }\n}, action) {\n    switch (action.type) {\n        case 'SET_CONNECT_STATE': {\n            const { isConnected } = action\n            return {\n                ...state,\n                isConnected\n            }\n        }\n        case 'INITIALIZE_CHILDREN':\n            const { data } = action\n            data.forEach((child) => {\n                const { id, name, class_id, profile_picture, school_id } = child\n                state.child_of_id[id] = {\n                    name,\n                    class_id,\n                    profile_picture,\n                    school_id\n                }\n            })\n            return {\n                ...state\n            }\n\n        case 'MARK_PRESENT':\n            const { student_id } = action\n            state.child_of_id[student_id].present = true\n            return {\n                ...state\n            }\n\n        case 'GET_MED_REQUEST_SUCCESS': \n            const { med_requests } = action\n            return {\n                ...state,\n                med_requests\n            }\n    \n        case 'CLEAR_STATE': {\n            return {\n                isConnected: true,\n                child_of_id: {},\n                med_requests: []\n            }\n        }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}