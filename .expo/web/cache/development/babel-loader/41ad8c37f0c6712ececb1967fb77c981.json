{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/absenceexcusepage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AbsenceExcuse from \"./absenceexcuse\";\nimport { formatDate } from \"../util\";\nimport ENV from \"../../variables\";\nimport { connect } from 'react-redux';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nvar AbsenceExcusePage = function (_React$Component) {\n  _inherits(AbsenceExcusePage, _React$Component);\n\n  var _super = _createSuper(AbsenceExcusePage);\n\n  function AbsenceExcusePage(props) {\n    var _this;\n\n    _classCallCheck(this, AbsenceExcusePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todays_date: formatDate(new Date()),\n      SlideInRight: new Animated.Value(0),\n      SlideInLeft: new Animated.Value(0),\n      total_height: 1,\n      total_width: 1,\n      height: 0,\n      width: 0,\n      left: 0,\n      top: 0,\n      requests: [],\n      day_of_week: ['天', '一', '二', '三', '四', '五', '六'],\n      selected_request_index: -1\n    };\n    return _this;\n  }\n\n  _createClass(AbsenceExcusePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isConnected = this.props.isConnected;\n\n      if (!isConnected) {\n        alert('網路連不到! 請稍後再試試看');\n        return;\n      }\n\n      this.fetchAbsenceExcuse();\n      this.initializePage();\n    }\n  }, {\n    key: \"isIOS\",\n    value: function isIOS() {\n      return Platform.OS === 'ios';\n    }\n  }, {\n    key: \"fetchAbsenceExcuse\",\n    value: function fetchAbsenceExcuse() {\n      var _this2 = this;\n\n      var student_id, date, query;\n      return _regeneratorRuntime.async(function fetchAbsenceExcuse$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              student_id = this.props.route.params.student_id;\n              date = formatDate(new Date());\n              query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/absence-excuse/student/\" + student_id + \"?date=\" + date;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(query, {\n                method: 'GET',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var statusCode = resJson.statusCode,\n                    message = resJson.message,\n                    data = resJson.data;\n\n                if (statusCode > 200 || message === 'Internal server error') {\n                  alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫' + message);\n                  return;\n                }\n\n                _this2.denormalize(data);\n\n                _this2.setState({\n                  requests: data\n                });\n              }).catch(function (err) {\n                alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when fetching absence request');\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"denormalize\",\n    value: function denormalize(data) {\n      for (var i = 0; i < data.length; i++) {\n        data[i].date = new Date(data[i].date);\n      }\n    }\n  }, {\n    key: \"initializePage\",\n    value: function initializePage() {\n      Animated.sequence([Animated.timing(this.state.SlideInRight, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(this.state.SlideInLeft, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      })]).start();\n    }\n  }, {\n    key: \"selectRequest\",\n    value: function selectRequest(index) {\n      var access_mode = this.refs['main'].fetchAccessMode();\n\n      if (access_mode === 'edit') {\n        alert('還在編輯中喔請完成再離開 多謝');\n        return;\n      }\n\n      this.setState({\n        selected_request_index: index\n      });\n    }\n  }, {\n    key: \"onCreateRequestSuccess\",\n    value: function onCreateRequestSuccess(request_id) {\n      var requests, new_request_index, i;\n      return _regeneratorRuntime.async(function onCreateRequestSuccess$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.fetchAbsenceExcuse());\n\n            case 2:\n              requests = this.state.requests;\n              new_request_index = -1;\n              i = 0;\n\n            case 5:\n              if (!(i < requests.length)) {\n                _context2.next = 12;\n                break;\n              }\n\n              if (!(requests[i].id === request_id)) {\n                _context2.next = 9;\n                break;\n              }\n\n              new_request_index = i;\n              return _context2.abrupt(\"break\", 12);\n\n            case 9:\n              i++;\n              _context2.next = 5;\n              break;\n\n            case 12:\n              this.setState({\n                selected_request_index: new_request_index\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onDeleteRequestSuccess\",\n    value: function onDeleteRequestSuccess(deleted_request_id) {\n      var requests = this.state.requests;\n      var updated_requests = [];\n\n      for (var i = 0; i < requests.length; i++) {\n        if (requests[i].id !== deleted_request_id) {\n          updated_requests.push(requests[i]);\n        }\n      }\n\n      this.setState({\n        requests: updated_requests,\n        selected_request_index: 0\n      });\n    }\n  }, {\n    key: \"checkUniqueStudentDate\",\n    value: function checkUniqueStudentDate(id, date) {\n      var requests = this.state.requests;\n      var duplicateDateFound = false;\n\n      for (var i = 0; i < requests.length; i++) {\n        if (id !== requests[i].id && formatDate(date) === formatDate(requests[i].date)) {\n          duplicateDateFound = true;\n          break;\n        }\n      }\n\n      if (!duplicateDateFound) {\n        return;\n      }\n\n      alert('已經在這個日期請過假了');\n      this.refs['main'].duplicateDateFound();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          SlideInRight = _this$state.SlideInRight,\n          SlideInLeft = _this$state.SlideInLeft,\n          total_width = _this$state.total_width,\n          requests = _this$state.requests,\n          todays_date = _this$state.todays_date,\n          day_of_week = _this$state.day_of_week,\n          selected_request_index = _this$state.selected_request_index;\n      var _this$props$route$par = this.props.route.params,\n          student_id = _this$props$route$par.student_id,\n          class_id = _this$props$route$par.class_id,\n          school_id = _this$props$route$par.school_id;\n      var selected_request = requests[selected_request_index];\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1,\n          width: '100%',\n          alignItems: 'center'\n        },\n        behavior: 'padding',\n        keyboardVerticalOffset: 85,\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, requests.map(function (request, index) {\n        var day = day_of_week[request.date.getDay()];\n        var date = request.date.getMonth() + 1 + \"/\" + request.date.getDate();\n        return React.createElement(Animated.View, {\n          key: request.id,\n          style: {\n            padding: 10,\n            transform: [{\n              translateX: SlideInRight.interpolate({\n                inputRange: [0, 1],\n                outputRange: [total_width, 0]\n              })\n            }]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            height: 100,\n            width: 100,\n            padding: 10,\n            backgroundColor: selected_request_index === index ? '#368cbf' : 'rgba(0,0,0,0.2)',\n            borderRadius: 10\n          },\n          underlayColor: \"#368cbf\",\n          onClick: function onClick() {\n            return _this3.selectRequest(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 41\n          }\n        }, formatDate(request.date) === todays_date ? React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: selected_request_index === index ? 'white' : 'black'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 49\n          }\n        }, \"\\u4ECA\\u5929\") : React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: selected_request_index === index ? 'white' : 'black'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 51\n          }\n        }, \"\\u661F\\u671F\", day), React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: selected_request_index === index ? 'white' : 'black'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 45\n          }\n        }, date))));\n      }), React.createElement(Animated.View, {\n        style: {\n          padding: 10,\n          transform: [{\n            translateX: SlideInRight.interpolate({\n              inputRange: [0, 1],\n              outputRange: [total_width, 0]\n            })\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 100,\n          width: 100,\n          padding: 10,\n          backgroundColor: selected_request_index === -1 ? '#368cbf' : 'rgba(0,0,0,0.2)',\n          borderRadius: 10\n        },\n        underlayColor: \"#ff8944\",\n        ref: 'welrnf',\n        onClick: function onClick() {\n          return _this3.selectRequest(-1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: selected_request_index === -1 ? 'white' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 37\n        }\n      }, \"\\u65B0\\u589E\")))))), React.createElement(View, {\n        style: {\n          width: '100%',\n          borderRadius: 40,\n          backgroundColor: '#b5e9e9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, React.createElement(AbsenceExcuse, {\n        ref: \"main\",\n        student_id: student_id,\n        class_id: class_id,\n        school_id: school_id,\n        request: selected_request,\n        onCreateRequestSuccess: function onCreateRequestSuccess(request_id) {\n          return _this3.onCreateRequestSuccess(request_id);\n        },\n        onDeleteRequestSuccess: function onDeleteRequestSuccess(deleted_request_id) {\n          return _this3.onDeleteRequestSuccess(deleted_request_id);\n        },\n        checkUniqueStudentDate: function checkUniqueStudentDate(id, date) {\n          return _this3.checkUniqueStudentDate(id, date);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return AbsenceExcusePage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isConnected: state.parent.isConnected\n  };\n};\n\nexport default connect(mapStateToProps)(AbsenceExcusePage);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/absenceexcusepage.js"],"names":["React","AbsenceExcuse","formatDate","ENV","connect","Dimensions","get","height","AbsenceExcusePage","props","state","todays_date","Date","SlideInRight","Animated","Value","SlideInLeft","total_height","total_width","width","left","top","requests","day_of_week","selected_request_index","isConnected","alert","fetchAbsenceExcuse","initializePage","Platform","OS","student_id","route","params","date","query","fetch","method","headers","Accept","then","res","json","resJson","statusCode","message","data","denormalize","setState","catch","err","i","length","sequence","timing","toValue","duration","useNativeDriver","start","index","access_mode","refs","fetchAccessMode","request_id","new_request_index","id","deleted_request_id","updated_requests","push","duplicateDateFound","class_id","school_id","selected_request","flex","alignItems","map","request","day","getDay","getMonth","getDate","padding","transform","translateX","interpolate","inputRange","outputRange","backgroundColor","borderRadius","selectRequest","fontSize","color","onCreateRequestSuccess","onDeleteRequestSuccess","checkUniqueStudentDate","Component","mapStateToProps","parent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    View, TouchableOpacity, Text, Animated, ScrollView, Alert, KeyboardAvoidingView, Platform, Dimensions\n} from 'react-native'\nimport AbsenceExcuse from './absenceexcuse'\nimport { formatDate } from '../util'\nimport ENV from '../../variables'\nimport { connect } from 'react-redux'\n\nconst { height } = Dimensions.get('window')\n\nclass AbsenceExcusePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            todays_date: formatDate(new Date()),\n            SlideInRight: new Animated.Value(0),\n            SlideInLeft: new Animated.Value(0),\n            total_height: 1,\n            total_width: 1,\n            height: 0,\n            width: 0,\n            left: 0,\n            top: 0,\n            requests: [],\n            day_of_week: ['天', '一', '二', '三', '四', '五', '六'],\n            selected_request_index: -1\n        }\n    }\n\n    componentDidMount() {\n        const { isConnected } = this.props\n        if (!isConnected) {\n            alert('網路連不到! 請稍後再試試看')\n            return\n        }\n        this.fetchAbsenceExcuse()\n        this.initializePage()\n    }\n\n    isIOS() {\n        return Platform.OS === 'ios'\n    }\n\n    async fetchAbsenceExcuse() {\n        const { student_id } = this.props.route.params\n        const date = formatDate(new Date())\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/absence-excuse/student/${student_id}?date=${date}`\n        await fetch(query, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const { statusCode, message, data } = resJson\n                if (statusCode > 200 || message === 'Internal server error') {\n                    alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫' + message)\n                    return\n                }\n                this.denormalize(data)\n                this.setState({ requests: data })\n            })\n            .catch(err => {\n                alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when fetching absence request')\n            })\n    }\n\n    denormalize(data) {\n        for (var i = 0; i < data.length; i++) {\n            data[i].date = new Date(data[i].date)\n        }\n    }\n\n    initializePage() {\n        Animated.sequence([\n            Animated.timing(\n                this.state.SlideInRight, \n                {\n                    toValue: 1,\n                    duration: 1000,\n                    useNativeDriver: true\n                }\n            ),\n            Animated.timing(\n                this.state.SlideInLeft,\n                {\n                    toValue: 1,\n                    duration: 1000,\n                    useNativeDriver: true\n                }\n            )\n        ]).start()\n        \n    }\n\n    selectRequest(index) {\n        const access_mode = this.refs['main'].fetchAccessMode()\n        if (access_mode === 'edit') {\n            alert('還在編輯中喔請完成再離開 多謝')\n            return\n        }\n        this.setState({ selected_request_index: index })\n    }\n\n    async onCreateRequestSuccess(request_id) {\n        await this.fetchAbsenceExcuse()\n        const { requests } = this.state\n        let new_request_index = -1\n        for (var i = 0; i < requests.length; i++) {\n            if (requests[i].id === request_id) {\n                new_request_index = i\n                break\n            }\n        }\n        this.setState({\n            selected_request_index: new_request_index\n        })\n    }\n\n    onDeleteRequestSuccess(deleted_request_id) {\n        const { requests } = this.state\n        const updated_requests = []\n        for (var i = 0; i < requests.length; i++) {\n            if (requests[i].id !== deleted_request_id) {\n                updated_requests.push(requests[i])\n            }\n        }\n        this.setState({\n            requests: updated_requests,\n            selected_request_index: 0\n        })\n    }\n\n    checkUniqueStudentDate(id, date) {\n        const { requests } = this.state\n        var duplicateDateFound = false\n        for (var i = 0; i < requests.length; i++) {\n            if (id !== requests[i].id && formatDate(date) === formatDate(requests[i].date)) {\n                duplicateDateFound = true\n                break\n            }\n        }\n\n        if (!duplicateDateFound) {\n            return\n        }\n\n        alert('已經在這個日期請過假了')\n\n        this.refs['main'].duplicateDateFound()\n    }\n\n    render () {\n        const { SlideInRight, SlideInLeft, total_width, requests, todays_date, day_of_week, selected_request_index } = this.state\n        const { student_id, class_id, school_id } = this.props.route.params\n        const selected_request = requests[selected_request_index]\n        return (\n            <KeyboardAvoidingView\n                style={{flex: 1, width: '100%', alignItems: 'center' }}\n                behavior={'padding'}\n                keyboardVerticalOffset={85}\n                enabled\n            >\n                <ScrollView style={{ width: '100%'}}>\n                <View style={{ width: '100%' }}>\n                    <ScrollView\n                        horizontal\n                        showsHorizontalScrollIndicator={false}\n                    >\n                        {requests.map((request, index) => {\n                            const day = day_of_week[request.date.getDay()]\n                            const date = `${request.date.getMonth()+1}/${request.date.getDate()}`\n                            return (\n                                <Animated.View\n                                    key={request.id}\n                                    style={{\n                                        padding: 10,\n                                        transform: [\n                                            {\n                                                translateX: SlideInRight.interpolate({\n                                                    inputRange: [0,1],\n                                                    outputRange: [total_width, 0]\n                                                })\n                                            }\n                                        ]\n                                    }}\n                                >\n                                    <TouchableOpacity\n                                        style={{\n                                            height: 100,\n                                            width: 100,\n                                            padding: 10,\n                                            backgroundColor: selected_request_index === index ? '#368cbf' : 'rgba(0,0,0,0.2)',\n                                            borderRadius: 10\n                                        }}\n                                        underlayColor='#368cbf'\n                                        onClick={() => this.selectRequest(index)}\n                                    >\n                                        <View>\n                                            {formatDate(request.date) === todays_date ?\n                                                <Text style={{ fontSize: 20, color: selected_request_index === index ? 'white' : 'black' }}>今天</Text>\n                                                : <Text style={{ fontSize: 20, color: selected_request_index === index ? 'white' : 'black' }}>星期{day}</Text>\n                                            }\n                                            <Text style={{ fontSize: 20, color: selected_request_index === index ? 'white' : 'black' }}>{date}</Text>\n                                        </View>\n                                    </TouchableOpacity>\n                                </Animated.View>\n                            )\n                        })}\n                        \n                        <Animated.View\n                            style={{\n                                padding: 10,\n                                transform: [\n                                    {\n                                        translateX: SlideInRight.interpolate({\n                                            inputRange: [0,1],\n                                            outputRange: [total_width, 0]\n                                        })\n                                    }\n                                ]\n                            }}\n                        >\n                            <TouchableOpacity\n                                style={{\n                                    height: 100,\n                                    width: 100,\n                                    padding: 10,\n                                    backgroundColor: selected_request_index === -1 ? '#368cbf' : 'rgba(0,0,0,0.2)',\n                                    borderRadius: 10\n                                }}\n                                underlayColor='#ff8944'\n                                ref={'welrnf'}\n                                onClick={() => this.selectRequest(-1)}\n                            >\n                                <View>\n                                    <Text style={{ fontSize: 20, color: selected_request_index === -1 ? 'white' : 'black' }}>新增</Text>\n                                </View>\n                            </TouchableOpacity>\n                        </Animated.View>\n                    </ScrollView>\n                </View>\n\n                <View\n                    style={{\n                        width: '100%',\n                        borderRadius: 40,\n                        backgroundColor: '#b5e9e9'\n                    }}  \n                >\n                    <AbsenceExcuse\n                        ref='main'\n                        student_id={student_id}\n                        class_id={class_id}\n                        school_id={school_id}\n                        request={selected_request}\n                        onCreateRequestSuccess={(request_id) => this.onCreateRequestSuccess(request_id)}\n                        onDeleteRequestSuccess={(deleted_request_id) => this.onDeleteRequestSuccess(deleted_request_id)}\n                        checkUniqueStudentDate={(id, date) => this.checkUniqueStudentDate(id, date)}\n                    />\n                </View>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isConnected: state.parent.isConnected\n    }\n}\n\nexport default connect(mapStateToProps) (AbsenceExcusePage)"]},"metadata":{},"sourceType":"module"}