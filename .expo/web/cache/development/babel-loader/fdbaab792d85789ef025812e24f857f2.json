{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/profileselector.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar ProfileSelector = function (_React$Component) {\n  _inherits(ProfileSelector, _React$Component);\n\n  var _super = _createSuper(ProfileSelector);\n\n  function ProfileSelector(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileSelector);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showSelector: false,\n      SlideInRight: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(ProfileSelector, [{\n    key: \"slideIn\",\n    value: function slideIn() {\n      var _this2 = this;\n\n      this.setState({\n        showSelector: true\n      }, function () {\n        Animated.timing(_this2.state.SlideInRight, {\n          toValue: 1,\n          duration: 200,\n          useNativeDriver: true\n        }).start();\n      });\n    }\n  }, {\n    key: \"onSelectStudent\",\n    value: function onSelectStudent(student_id) {\n      this.props.onSelectStudent(student_id);\n      Animated.timing(this.state.SlideInRight, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true\n      }).start();\n      this.setState({\n        showSelector: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var windowWidth = Dimensions.get('window').width;\n      var _this$state = this.state,\n          showSelector = _this$state.showSelector,\n          SlideInRight = _this$state.SlideInRight;\n      var student_of_id = this.props.student_of_id;\n\n      if (!showSelector) {\n        return null;\n      }\n\n      return React.createElement(Animated.View, {\n        style: {\n          zIndex: 2,\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundColor: 'rgba(0,0,0,0.7)',\n          transform: [{\n            translateX: SlideInRight.interpolate({\n              inputRange: [0, 1],\n              outputRange: [windowWidth, 0]\n            })\n          }],\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, Object.keys(student_of_id).map(function (student_id) {\n        return React.createElement(TouchableHighlight, {\n          key: student_id,\n          style: {\n            marginTop: windowWidth / 4\n          },\n          onPress: function onPress() {\n            return _this3.onSelectStudent(student_id);\n          },\n          underlayColor: \"transparent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: student_of_id[student_id].profile_picture === '' ? require(\"../../assets/icon-thumbnail.png\") : {\n            uri: student_of_id[student_id].profile_picture\n          },\n          style: {\n            width: 160,\n            height: 160,\n            borderRadius: 80,\n            backgroundColor: 'rgba(255,255,255,0.6)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return ProfileSelector;\n}(React.Component);\n\nexport { ProfileSelector as default };","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/profileselector.js"],"names":["React","ProfileSelector","props","state","showSelector","SlideInRight","Animated","Value","setState","timing","toValue","duration","useNativeDriver","start","student_id","onSelectStudent","windowWidth","Dimensions","get","width","student_of_id","zIndex","height","position","backgroundColor","transform","translateX","interpolate","inputRange","outputRange","alignItems","Object","keys","map","marginTop","profile_picture","require","uri","borderRadius","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Animated, Dimensions, Image, TouchableHighlight } from 'react-native'\n\nexport default class ProfileSelector extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showSelector: false,\n      SlideInRight: new Animated.Value(0)\n    }\n  }\n\n  slideIn() {\n    this.setState({\n      showSelector: true\n    } , () => {\n      Animated.timing(\n        this.state.SlideInRight,\n        {\n            toValue: 1,\n            duration: 200,\n            useNativeDriver: true\n        }\n      ).start()\n    })\n  }\n\n  onSelectStudent(student_id) {\n    this.props.onSelectStudent(student_id)\n    Animated.timing(\n      this.state.SlideInRight,\n      {\n          toValue: 0,\n          duration: 500,\n          useNativeDriver: true\n      }\n    ).start()\n    this.setState({\n      showSelector: false\n    })\n  }\n\n  render() {\n    const windowWidth = Dimensions.get('window').width\n    const { showSelector, SlideInRight } = this.state\n    const { student_of_id } = this.props\n    if (!showSelector) {\n      return null\n    }\n    return (\n      <Animated.View\n        style={{\n          zIndex: 2,\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundColor: 'rgba(0,0,0,0.7)',\n          transform: [\n            {\n                translateX: SlideInRight.interpolate({\n                    inputRange: [0,1],\n                    outputRange: [windowWidth, 0]\n                })\n            }\n          ],\n          alignItems: 'center',\n          // justifyContent: 'space-evenly'\n        }}\n      >\n        {Object.keys(student_of_id).map((student_id) => {\n          return (\n            <TouchableHighlight \n              key={student_id}\n              style={{ marginTop: windowWidth/4 }}\n              onPress={() => this.onSelectStudent(student_id)}\n              underlayColor='transparent'\n            >\n              <Image\n                    source={\n                      student_of_id[student_id].profile_picture === '' ?\n                        require('../../assets/icon-thumbnail.png')\n                        : { uri: student_of_id[student_id].profile_picture }\n                      }\n                    style={{\n                        width: 160,\n                        height: 160,\n                        borderRadius: 80,\n                        backgroundColor: 'rgba(255,255,255,0.6)'\n                    }}\n                />\n            </TouchableHighlight>\n          )\n        })}\n      </Animated.View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}