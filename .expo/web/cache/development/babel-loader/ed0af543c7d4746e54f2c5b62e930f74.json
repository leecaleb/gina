{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/logs/appetitelog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Container, Content, Card, CardItem, Body, Button, Toast } from 'native-base';\nimport { connect } from 'react-redux';\nimport Header from \"../../header\";\nimport { bindActionCreators } from 'redux';\nimport { rateAppetite, clearRatings, setAllRatingsToGreat, fetchClassAppetiteData, onSendAppetiteSuccess, alertErrMessage, markWaterDrank, editFruitName, clearAppetiteErrorMessage, addStudentIdForUpdate } from \"../../../redux/school/actions/index\";\nimport { formatDate, fetchClassData as _fetchClassData } from \"../../util\";\n\nvar TeacherAppetiteLog = function (_React$Component) {\n  _inherits(TeacherAppetiteLog, _React$Component);\n\n  var _super = _createSuper(TeacherAppetiteLog);\n\n  function TeacherAppetiteLog(props) {\n    var _this;\n\n    _classCallCheck(this, TeacherAppetiteLog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      mealType: '',\n      selectedForCustomize: new Set(),\n      editingFruitType: false,\n      students_with_records: []\n    };\n    _this.handleRateFoodWellness = _this.handleRateFoodWellness.bind(_assertThisInitialized(_this));\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_this));\n    _this.handleClearAll = _this.handleClearAll.bind(_assertThisInitialized(_this));\n    _this.handleSetAll = _this.handleSetAll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TeacherAppetiteLog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var updatedStudents = this.props.appetite.updatedStudents;\n      var isConnected = this.props.class.isConnected;\n\n      if (updatedStudents.size > 0 || !isConnected) {\n        this.setState({\n          isLoading: false\n        });\n      } else {\n        this.fetchClassData();\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n      }\n    }\n  }, {\n    key: \"fetchClassData\",\n    value: function fetchClassData() {\n      var date, start_date, end_date, appetiteData, _appetiteData$data$st, fruit_name, ratings;\n\n      return _regeneratorRuntime.async(function fetchClassData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              date = new Date();\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(_fetchClassData('appetite', this.props.class.class_id, start_date, end_date));\n\n            case 6:\n              appetiteData = _context.sent;\n\n              if (!(appetiteData.data[start_date] === undefined)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _appetiteData$data$st = appetiteData.data[start_date], fruit_name = _appetiteData$data$st.fruit_name, ratings = _appetiteData$data$st.ratings;\n              this.props.fetchClassAppetiteData(fruit_name, ratings);\n              this.setState({\n                isLoading: false,\n                students_with_records: Object.keys(ratings)\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"editFruitName\",\n    value: function editFruitName(fruit_name) {\n      this.props.editFruitName(fruit_name);\n    }\n  }, {\n    key: \"fruitNameEditorOnBlur\",\n    value: function fruitNameEditorOnBlur() {\n      var students_with_records = this.state.students_with_records;\n      this.setState({\n        editingFruitType: false\n      });\n\n      if (this.props.appetite.fruit_name === '') {\n        this.props.editFruitName('水果');\n      }\n\n      if (students_with_records.length > 1) {\n        this.props.addStudentIdForUpdate(students_with_records);\n      }\n    }\n  }, {\n    key: \"handleRateFoodWellness\",\n    value: function handleRateFoodWellness(student_id, rating) {\n      if (this.state.mealType === '') {\n        Toast.show({\n          text: '請選擇餐時',\n          buttonText: 'Okay',\n          position: 'top',\n          duration: 3000\n        });\n      } else {\n        var selectedForCustomize = this.state.selectedForCustomize;\n        var teacher_id = this.props.route.params.teacher_id;\n        selectedForCustomize.delete(student_id);\n        this.setState({\n          selectedForCustomize: selectedForCustomize\n        });\n        this.props.rateAppetite(student_id, this.state.mealType, rating, teacher_id);\n      }\n    }\n  }, {\n    key: \"onClickOther\",\n    value: function onClickOther(student_id) {\n      var _this$state = this.state,\n          mealType = _this$state.mealType,\n          selectedForCustomize = _this$state.selectedForCustomize;\n      var teacher_id = this.props.route.params.teacher_id;\n\n      if (mealType === '') {\n        Toast.show({\n          text: '請選擇餐時',\n          buttonText: 'Okay',\n          position: 'top',\n          duration: 3000\n        });\n      } else {\n        this.setState({\n          selectedForCustomize: new Set([].concat(_toConsumableArray(selectedForCustomize), [student_id]))\n        });\n        this.props.rateAppetite(student_id, this.state.mealType, '', teacher_id);\n      }\n    }\n  }, {\n    key: \"isRatingCustomized\",\n    value: function isRatingCustomized(rating) {\n      var mealType = this.state.mealType;\n\n      if (mealType === '') {\n        return false;\n      } else if (rating === 'Awesome' || rating === 'Good' || rating === 'Ok' || rating === '') {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onCustomizeRating\",\n    value: function onCustomizeRating(student_id, customized_text) {\n      var teacher_id = this.props.route.params.teacher_id;\n      this.props.rateAppetite(student_id, this.state.mealType, customized_text, teacher_id);\n    }\n  }, {\n    key: \"customizedRatingOnBlur\",\n    value: function customizedRatingOnBlur(student_id) {\n      var selectedForCustomize = this.state.selectedForCustomize;\n      selectedForCustomize.delete(student_id);\n      this.setState({\n        selectedForCustomize: selectedForCustomize\n      });\n    }\n  }, {\n    key: \"markWaterDrank\",\n    value: function markWaterDrank(student_id) {\n      var teacher_id = this.props.route.params.teacher_id;\n\n      if (this.state.mealType === '') {\n        Toast.show({\n          text: '請選擇餐時',\n          buttonText: 'Okay',\n          position: 'top',\n          duration: 3000\n        });\n      } else {\n        this.props.markWaterDrank(student_id, this.state.mealType, teacher_id);\n      }\n    }\n  }, {\n    key: \"handleSetAll\",\n    value: function handleSetAll() {\n      var teacher_id = this.props.route.params.teacher_id;\n\n      if (this.state.mealType === '') {\n        Toast.show({\n          text: '請選擇餐時',\n          buttonText: 'Okay',\n          position: 'top',\n          duration: 3000\n        });\n      } else {\n        this.props.setAllRatingsToGreat(this.state.mealType, teacher_id);\n      }\n    }\n  }, {\n    key: \"handleClearAll\",\n    value: function handleClearAll() {\n      if (this.state.mealType === '') {\n        Toast.show({\n          text: '請選擇餐時',\n          buttonText: 'Okay',\n          position: 'top',\n          duration: 3000\n        });\n      } else {\n        this.props.clearRatings(this.state.mealType);\n      }\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      var _this2 = this;\n\n      var isConnected = this.props.class.isConnected;\n      var _this$props$appetite = this.props.appetite,\n          updatedStudents = _this$props$appetite.updatedStudents,\n          fruit_name = _this$props$appetite.fruit_name;\n      var data_objs = [],\n          appetite_log = this.props.appetite.ratings;\n\n      if (updatedStudents.size === 0) {\n        this.props.navigation.goBack();\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n        return;\n      }\n\n      updatedStudents.forEach(function (student_id) {\n        var ratings = appetite_log[student_id];\n        var data = {\n          student_id: student_id,\n          b_rating: ratings.Breakfast,\n          f_rating: ratings.Fruit,\n          l_rating: ratings.Lunch,\n          s_rating: ratings.Snack,\n          teacher_id: ratings.teacher_id\n        };\n        data_objs.push(data);\n      });\n      var request_body = {\n        date: formatDate(new Date()),\n        fruit_name: fruit_name,\n        obj: data_objs\n      };\n      fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/appetite', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request_body)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        var statusCode = resJson.statusCode,\n            message = resJson.message;\n\n        if (statusCode > 200 || message === 'Internal Server Error') {\n          _this2.props.alertErrMessage(message);\n        } else {\n          _this2.props.onSendAppetiteSuccess();\n\n          _this2.props.navigation.goBack();\n        }\n      }).catch(function (err) {\n        _this2.props.alertErrMessage(err);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.props.appetite.err_message !== '') {\n        Alert.alert('Error!', this.props.appetite.err_message, [{\n          text: 'OK',\n          onPress: function onPress() {\n            return _this3.props.clearAppetiteErrorMessage();\n          }\n        }]);\n      }\n\n      var _this$state2 = this.state,\n          mealType = _this$state2.mealType,\n          selectedForCustomize = _this$state2.selectedForCustomize,\n          editingFruitType = _this$state2.editingFruitType;\n      var date = new Date();\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1,\n          backgroundColor: mealType === 'Breakfast' ? '#ffe1d0' : mealType === 'Fruit' ? '#ffddb7' : mealType === 'Lunch' ? '#fff1b5' : mealType === 'Snack' ? '#dcf3d0' : 'transparent'\n        },\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.subHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }, date.getFullYear() + '.' + (date.getMonth() + 1) + '.' + date.getDate()), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: '#b5e9e9',\n          padding: 10\n        },\n        onPress: this.handleSetAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'grey',\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }, \"\\u5168\\u8B9A\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: '#ffe1d0',\n          padding: 10\n        },\n        onPress: this.handleClearAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'grey',\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, \"\\u5168\\u90E8\\u6E05\\u9664\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: '#dcf3d0',\n          padding: 10\n        },\n        onPress: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'grey',\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }\n      }, \"\\u9001\\u51FA\"))), React.createElement(Content, {\n        contentContainerStyle: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.mealButtons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: mealType === 'Breakfast' ? '#fa625f' : '#ffe1d0',\n          width: '23%',\n          height: 60,\n          justifyContent: 'center',\n          marginHorizontal: '1%',\n          padding: 10\n        },\n        underlayColor: \"#fa625f\",\n        onPress: function onPress() {\n          return _this3.setState({\n            mealType: 'Breakfast',\n            editingFruitType: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.mealButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }\n      }, \"\\u65E9\\u9910\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: mealType === 'Fruit' ? '#ff8944' : '#ffddb7',\n          width: '23%',\n          height: 60,\n          justifyContent: 'center',\n          marginHorizontal: '1%'\n        },\n        underlayColor: \"#ff8944\",\n        onPress: function onPress() {\n          return _this3.setState({\n            mealType: 'Fruit'\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this3.setState({\n            mealType: 'Fruit',\n            editingFruitType: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }\n      }, editingFruitType ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          paddingLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 37\n        }\n      }, \"\\u6C34\\u679C:\"), React.createElement(TextInput, {\n        autoFocus: true,\n        selectTextOnFocus: true,\n        style: {\n          width: '95%',\n          alignSelf: 'center',\n          fontSize: 25,\n          textAlign: 'center',\n          color: 'grey',\n          borderWidth: 1\n        },\n        onChangeText: function onChangeText(fruit_name) {\n          return _this3.editFruitName(fruit_name);\n        },\n        value: this.props.appetite.fruit_name,\n        onBlur: function onBlur() {\n          return _this3.fruitNameEditorOnBlur();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 37\n        }\n      })) : React.createElement(Text, {\n        style: styles.mealButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 33\n        }\n      }, this.props.appetite.fruit_name)), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: mealType === 'Lunch' ? '#f4d41f' : '#fff1b5',\n          width: '23%',\n          height: 60,\n          justifyContent: 'center',\n          marginHorizontal: '1%',\n          padding: 10\n        },\n        underlayColor: \"#f4d41f\",\n        onPress: function onPress() {\n          return _this3.setState({\n            mealType: 'Lunch',\n            editingFruitType: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.mealButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 29\n        }\n      }, \"\\u5348\\u9910\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: mealType === 'Snack' ? '#00c07f' : '#dcf3d0',\n          width: '23%',\n          height: 60,\n          justifyContent: 'center',\n          marginHorizontal: '1%',\n          padding: 10\n        },\n        underlayColor: \"#00c07f\",\n        onPress: function onPress() {\n          return _this3.setState({\n            mealType: 'Snack',\n            editingFruitType: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.mealButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }\n      }, \"\\u9EDE\\u5FC3\"))), Object.keys(this.props.class.students).map(function (student_id) {\n        var meal_rating = mealType === '' ? '' : _this3.props.appetite.ratings[student_id][mealType].slice(0, -1);\n        var water_drank = mealType === '' ? false : _this3.props.appetite.ratings[student_id][mealType].slice(-1) === '1';\n        return React.createElement(View, {\n          key: student_id,\n          style: {\n            width: '98%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 33\n          }\n        }, React.createElement(CardItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: styles.childThumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 41\n          }\n        }, React.createElement(Image, {\n          source: _this3.props.class.students[student_id].profile_picture === '' ? require(\"../../../assets/icon-thumbnail.png\") : {\n            uri: _this3.props.class.students[student_id].profile_picture\n          },\n          style: styles.thumbnailImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 45\n          }\n        })), React.createElement(View, {\n          style: {\n            width: '75%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 49\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 30,\n            paddingLeft: 18,\n            alignSelf: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 57\n          }\n        }, _this3.props.class.students[student_id].name)), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 53\n          }\n        }, React.createElement(TouchableHighlight, {\n          style: {\n            width: '80%',\n            borderWidth: 2,\n            borderColor: '#368cbf',\n            padding: 10,\n            justifyContent: 'center',\n            backgroundColor: water_drank ? '#368cbf' : 'white'\n          },\n          onPress: function onPress() {\n            return _this3.markWaterDrank(student_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 57\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: water_drank ? '#D3D3D3' : 'grey',\n            fontSize: 17\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 61\n          }\n        }, \"\\u6709\\u559D\\u6C34\"))), React.createElement(View, {\n          style: {\n            flex: 2,\n            alignItems: 'flex-end'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 53\n          }\n        }, _this3.props.appetite.updatedStudents.has(student_id) ? React.createElement(Text, {\n          style: {\n            color: 'red',\n            fontSize: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 61\n          }\n        }, \"\\u672A\\u9001\\u51FA\") : null)), React.createElement(View, {\n          style: styles.cardBody,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 49\n          }\n        }, React.createElement(TouchableHighlight, {\n          style: {\n            width: '22%',\n            height: '100%',\n            margin: 5,\n            justifyContent: 'center',\n            backgroundColor: meal_rating === 'Awesome' ? '#368cbf' : '#b5e9e9',\n            padding: 10\n          },\n          onPress: function onPress() {\n            return _this3.handleRateFoodWellness(student_id, 'Awesome');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: meal_rating === 'Awesome' ? '#D3D3D3' : 'grey',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 57\n          }\n        }, \"\\u975E\\u5E38\\u597D\")), React.createElement(TouchableHighlight, {\n          style: {\n            width: '22%',\n            height: '100%',\n            margin: 5,\n            justifyContent: 'center',\n            backgroundColor: meal_rating === 'Good' ? '#368cbf' : '#b5e9e9',\n            padding: 10\n          },\n          onPress: function onPress() {\n            return _this3.handleRateFoodWellness(student_id, 'Good');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: meal_rating === 'Good' ? '#D3D3D3' : 'grey',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 57\n          }\n        }, \"\\u9084\\u4E0D\\u932F\")), React.createElement(TouchableHighlight, {\n          style: {\n            width: '22%',\n            height: '100%',\n            margin: 5,\n            justifyContent: 'center',\n            backgroundColor: meal_rating === 'Ok' ? '#368cbf' : '#b5e9e9',\n            padding: 10\n          },\n          onPress: function onPress() {\n            return _this3.handleRateFoodWellness(student_id, 'Ok');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: meal_rating === 'Ok' ? '#D3D3D3' : 'grey',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 57\n          }\n        }, \"\\u5403\\u4E0D\\u591A\")), React.createElement(TouchableHighlight, {\n          style: {\n            width: '22%',\n            height: '100%',\n            margin: 5,\n            justifyContent: 'center',\n            backgroundColor: _this3.isRatingCustomized(meal_rating) || selectedForCustomize.has(student_id) ? '#368cbf' : '#b5e9e9',\n            padding: 10\n          },\n          onPress: function onPress() {\n            return _this3.onClickOther(student_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 53\n          }\n        }, _this3.isRatingCustomized(meal_rating) || selectedForCustomize.has(student_id) ? React.createElement(TextInput, {\n          style: {\n            textAlign: 'center',\n            color: '#D3D3D3',\n            fontSize: 20\n          },\n          autoFocus: meal_rating === '' ? true : false,\n          onChangeText: function onChangeText(customized_text) {\n            return _this3.onCustomizeRating(student_id, customized_text);\n          },\n          value: meal_rating,\n          onBlur: function onBlur() {\n            return _this3.customizedRatingOnBlur(student_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 61\n          }\n        }) : React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: _this3.isRatingCustomized(meal_rating) || selectedForCustomize.has(student_id) ? '#D3D3D3' : 'grey',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 63\n          }\n        }, \"Other\"))))))));\n      })));\n    }\n  }]);\n\n  return TeacherAppetiteLog;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  childThumbnail: {\n    width: '25%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardBody: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  foodButton: {\n    width: 70,\n    alignSelf: 'center',\n    margin: 5,\n    justifyContent: 'center',\n    backgroundColor: '#b5e9e9'\n  },\n  thumbnailImage: {\n    height: 130,\n    width: 130,\n    borderRadius: 65\n  },\n  subHeading: {\n    width: '99%',\n    paddingHorizontal: '4%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    zIndex: 2\n  },\n  mealButtons: {\n    width: '99%',\n    marginVertical: 15,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mealButtonText: {\n    fontSize: 30,\n    textAlign: 'center'\n  },\n  buttonText: {\n    color: 'grey',\n    textAlign: 'center'\n  }\n});\n\nvar mapStatesToProps = function mapStatesToProps(state) {\n  return {\n    class: state.classInfo,\n    appetite: state.appetite\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    rateAppetite: rateAppetite,\n    clearRatings: clearRatings,\n    setAllRatingsToGreat: setAllRatingsToGreat,\n    fetchClassAppetiteData: fetchClassAppetiteData,\n    onSendAppetiteSuccess: onSendAppetiteSuccess,\n    alertErrMessage: alertErrMessage,\n    markWaterDrank: markWaterDrank,\n    editFruitName: editFruitName,\n    clearAppetiteErrorMessage: clearAppetiteErrorMessage,\n    addStudentIdForUpdate: addStudentIdForUpdate\n  }, dispatch));\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(TeacherAppetiteLog);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/appetitelog.js"],"names":["React","Container","Content","Card","CardItem","Body","Button","Toast","connect","Header","bindActionCreators","rateAppetite","clearRatings","setAllRatingsToGreat","fetchClassAppetiteData","onSendAppetiteSuccess","alertErrMessage","markWaterDrank","editFruitName","clearAppetiteErrorMessage","addStudentIdForUpdate","formatDate","fetchClassData","TeacherAppetiteLog","props","state","isLoading","mealType","selectedForCustomize","Set","editingFruitType","students_with_records","handleRateFoodWellness","bind","handleSend","handleClearAll","handleSetAll","updatedStudents","appetite","isConnected","class","size","setState","show","text","buttonText","position","type","duration","date","Date","start_date","setDate","getDate","end_date","class_id","appetiteData","data","undefined","fruit_name","ratings","Object","keys","length","student_id","rating","teacher_id","route","params","delete","customized_text","data_objs","appetite_log","navigation","goBack","forEach","b_rating","Breakfast","f_rating","Fruit","l_rating","Lunch","s_rating","Snack","push","request_body","obj","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","statusCode","message","catch","err","err_message","Alert","alert","onPress","flex","backgroundColor","styles","subHeading","fontSize","getFullYear","getMonth","padding","color","alignItems","mealButtons","width","height","justifyContent","marginHorizontal","mealButtonText","paddingLeft","alignSelf","textAlign","borderWidth","fruitNameEditorOnBlur","students","map","meal_rating","slice","water_drank","childThumbnail","profile_picture","require","uri","thumbnailImage","flexDirection","name","borderColor","has","cardBody","margin","isRatingCustomized","onClickOther","onCustomizeRating","customizedRatingOnBlur","Component","StyleSheet","create","foodButton","borderRadius","paddingHorizontal","zIndex","marginVertical","mapStatesToProps","classInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Image, TouchableHighlight, TextInput, Text, View, KeyboardAvoidingView, Alert, Keyboard } from 'react-native'\nimport { Container, Content, Card, CardItem, Body, Button, Toast } from 'native-base'\nimport { connect } from 'react-redux';\nimport Header from '../../header'\nimport { bindActionCreators } from 'redux';\nimport {\n    rateAppetite,\n    clearRatings,\n    setAllRatingsToGreat,\n    fetchClassAppetiteData,\n    onSendAppetiteSuccess,\n    alertErrMessage,\n    markWaterDrank,\n    editFruitName,\n    clearAppetiteErrorMessage,\n    addStudentIdForUpdate\n} from '../../../redux/school/actions/index'\nimport { formatDate, fetchClassData } from '../../util'\n\nclass TeacherAppetiteLog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            mealType: '',\n            selectedForCustomize: new Set(),\n            editingFruitType: false,\n            students_with_records: [],\n        }\n        this.handleRateFoodWellness = this.handleRateFoodWellness.bind(this)\n        this.handleSend = this.handleSend.bind(this)\n        this.handleClearAll = this.handleClearAll.bind(this)\n        this.handleSetAll = this.handleSetAll.bind(this)\n    }\n\n    componentDidMount() {\n        const { updatedStudents } = this.props.appetite\n        const { isConnected } = this.props.class\n        if (updatedStudents.size > 0 || !isConnected) {\n            this.setState({\n                isLoading: false\n            })\n        } else {\n            this.fetchClassData()\n        }\n\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n        }\n        // this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', console.log('keyboard hid'))\n    }\n\n    async fetchClassData() {\n        const date = new Date()\n        const start_date = formatDate(date)\n        date.setDate(date.getDate() + 1)\n        const end_date = formatDate(date)\n        const appetiteData = await fetchClassData('appetite', this.props.class.class_id, start_date, end_date)\n        if (appetiteData.data[start_date] === undefined) {\n            return \n        }\n        const { fruit_name, ratings } = appetiteData.data[start_date]\n        this.props.fetchClassAppetiteData(fruit_name, ratings)\n        this.setState({\n            isLoading: false,\n            students_with_records: Object.keys(ratings)\n        })\n    }\n\n    editFruitName(fruit_name) {\n        this.props.editFruitName(fruit_name)\n    }\n\n    fruitNameEditorOnBlur() {\n        const { students_with_records } = this.state\n        this.setState({ editingFruitType: false })\n        if (this.props.appetite.fruit_name === '') {\n            this.props.editFruitName('水果')\n        }\n\n        if (students_with_records.length > 1) {\n            this.props.addStudentIdForUpdate(students_with_records)\n        }\n    }\n\n    handleRateFoodWellness(student_id, rating) {\n        if (this.state.mealType === '') {\n            Toast.show({\n                text: '請選擇餐時',\n                buttonText: 'Okay',\n                position: 'top',\n                duration: 3000\n            })\n        } else {\n            const { selectedForCustomize } = this.state\n            const {teacher_id } = this.props.route.params\n            selectedForCustomize.delete(student_id)\n            this.setState({\n                selectedForCustomize\n            })\n            this.props.rateAppetite(student_id, this.state.mealType, rating, teacher_id)\n        }\n    }\n\n    onClickOther(student_id) {\n        const { mealType, selectedForCustomize } = this.state\n        const {teacher_id } = this.props.route.params\n        if (mealType === '') {\n            Toast.show({\n                text: '請選擇餐時',\n                buttonText: 'Okay',\n                position: 'top',\n                duration: 3000\n            })\n        } else {\n            this.setState({\n                selectedForCustomize: new Set([...selectedForCustomize, student_id])\n            })\n            this.props.rateAppetite(student_id, this.state.mealType, '', teacher_id)\n        }\n    }\n\n    isRatingCustomized(rating) {\n        const { mealType } = this.state\n        if (mealType === '') {\n            return false\n        } else if (rating === 'Awesome' || rating === 'Good' || rating === 'Ok' || rating === '') {\n            return false\n        }\n        return true\n    }\n\n    onCustomizeRating(student_id, customized_text) {\n        const {teacher_id } = this.props.route.params\n        this.props.rateAppetite(student_id, this.state.mealType, customized_text, teacher_id)\n    }\n\n    customizedRatingOnBlur(student_id) {\n        const { selectedForCustomize } = this.state\n        selectedForCustomize.delete(student_id)\n        this.setState({\n            selectedForCustomize\n        })\n    }\n\n    markWaterDrank(student_id) {\n        const {teacher_id } = this.props.route.params\n        if (this.state.mealType === '') {\n            Toast.show({\n                text: '請選擇餐時',\n                buttonText: 'Okay',\n                position: 'top',\n                duration: 3000\n            })\n        } else {\n            this.props.markWaterDrank(student_id, this.state.mealType, teacher_id)\n        }\n    }\n\n    handleSetAll() {\n        const {teacher_id } = this.props.route.params\n        if (this.state.mealType === '') {\n            Toast.show({\n                text: '請選擇餐時',\n                buttonText: 'Okay',\n                position: 'top',\n                duration: 3000\n            })\n        } else {\n            this.props.setAllRatingsToGreat(this.state.mealType, teacher_id)\n        }\n    }\n\n    handleClearAll() {\n        if (this.state.mealType === '') {\n            Toast.show({\n                text: '請選擇餐時',\n                buttonText: 'Okay',\n                position: 'top',\n                duration: 3000\n            })\n        } else {\n            this.props.clearRatings(this.state.mealType)\n        }\n    }\n\n    handleSend() {\n        const { isConnected } = this.props.class\n        const {updatedStudents, fruit_name} = this.props.appetite\n        var data_objs = [],\n            appetite_log = this.props.appetite.ratings\n        \n        if (updatedStudents.size === 0) {\n            this.props.navigation.goBack()\n        }\n\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n\n        updatedStudents.forEach(student_id => {\n            const ratings = appetite_log[student_id] // get ratings obj for student\n            const data = { // create query data and append to data_objs\n                student_id,\n                b_rating: ratings.Breakfast,\n                f_rating: ratings.Fruit,\n                l_rating: ratings.Lunch,\n                s_rating: ratings.Snack,\n                teacher_id: ratings.teacher_id\n            }\n            data_objs.push(data)\n        })\n        \n        const request_body = {\n            date: formatDate(new Date()),\n            fruit_name,\n            obj: data_objs\n        }\n\n        fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/appetite', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        }).then(res => res.json())\n            .then(resJson => {\n                // console.log(resJson)\n                const { statusCode, message } = resJson\n                if (statusCode > 200 || message === 'Internal Server Error') {\n                    this.props.alertErrMessage(message)\n                } else {\n                    this.props.onSendAppetiteSuccess()\n                    this.props.navigation.goBack()\n                }\n            })\n            .catch(err => {\n                this.props.alertErrMessage(err)\n            })\n    }\n\n    // keyboardDidHide = () => {\n    //     Keyboard.dismiss();\n    // }\n\n    componentWillUnmount() {\n        // this.keyboardDidHideListener.remove()\n    }\n\n    render() {\n        if (this.props.appetite.err_message !== ''){\n            Alert.alert(\n                'Error!',\n                this.props.appetite.err_message,\n                [{text: 'OK', onPress: () => this.props.clearAppetiteErrorMessage()}]\n            )\n        }\n        const { mealType, selectedForCustomize, editingFruitType } = this.state\n        var date = new Date()\n        // console.log(this.props.appetite)\n        return (\n            <KeyboardAvoidingView\n                style={{\n                    flex: 1,\n                    backgroundColor: mealType === 'Breakfast' ? '#ffe1d0'\n                                    : mealType === 'Fruit' ? '#ffddb7'\n                                    : mealType === 'Lunch' ? '#fff1b5'\n                                        : mealType === 'Snack' ? '#dcf3d0'\n                                    : 'transparent'\n                }}\n                // behavior='padding'\n                // keyboardVerticalOffset={120}\n                enabled\n            >\n                <View style={styles.subHeading}>\n                    <Text style={{ fontSize: 40 }}>{date.getFullYear() + '.' + (date.getMonth()+1) + '.' + date.getDate()}</Text>\n                    <TouchableHighlight\n                        style={{ backgroundColor: '#b5e9e9', padding: 10 }}\n                        onPress={this.handleSetAll}>\n                        <Text style={{ color: 'grey', fontSize: 40 }}>全讚</Text>\n                    </TouchableHighlight>\n                    <TouchableHighlight\n                        style={{ backgroundColor: '#ffe1d0', padding: 10  }}\n                        onPress={this.handleClearAll}>\n                        <Text style={{ color: 'grey', fontSize: 40 }}>全部清除</Text>\n                    </TouchableHighlight>\n                    <TouchableHighlight\n                        style={{ backgroundColor: '#dcf3d0', padding: 10  }}\n                        onPress={this.handleSend}>\n                        <Text style={{ color: 'grey', fontSize: 40 }}>送出</Text>\n                    </TouchableHighlight>\n                </View>\n                <Content contentContainerStyle={{ alignItems: 'center' }}>\n                    <View style={styles.mealButtons}>\n                        <TouchableHighlight\n                            style={{\n                                backgroundColor: mealType === 'Breakfast' ? '#fa625f' : '#ffe1d0',\n                                width: '23%',\n                                height: 60,\n                                justifyContent: 'center',\n                                marginHorizontal: '1%',\n                                padding: 10\n                            }}\n                            underlayColor='#fa625f'\n                            onPress={() => this.setState({ mealType: 'Breakfast', editingFruitType: false })}\n                        >\n                            <Text style={styles.mealButtonText}>早餐</Text>\n                        </TouchableHighlight>\n                        <TouchableHighlight\n                            style={{\n                                backgroundColor: mealType === 'Fruit' ? '#ff8944' : '#ffddb7',\n                                width: '23%',\n                                height: 60,\n                                justifyContent: 'center',\n                                marginHorizontal: '1%',\n                                // padding: 10\n                            }}\n                            underlayColor='#ff8944'\n                            onPress={() => this.setState({ mealType: 'Fruit' })}\n                            onLongPress={() => this.setState({ mealType: 'Fruit', editingFruitType: true })}\n                        >\n                            {editingFruitType ?\n                                <View style={{ flex: 1 }}>\n                                    <Text style={{ paddingLeft: 5 }}>水果:</Text>\n                                    <TextInput\n                                        autoFocus={true}\n                                        selectTextOnFocus={true}\n                                        style={{ width: '95%', alignSelf: 'center', fontSize: 25, textAlign: 'center', color: 'grey', borderWidth: 1 }}\n                                        onChangeText={fruit_name => this.editFruitName(fruit_name)}\n                                        value={this.props.appetite.fruit_name}\n                                        onBlur={() => this.fruitNameEditorOnBlur()}\n                                    />\n                                </View>\n                            :   <Text style={styles.mealButtonText}>{this.props.appetite.fruit_name}</Text>\n                            }\n                        </TouchableHighlight>\n                        <TouchableHighlight\n                            style={{\n                                backgroundColor: mealType === 'Lunch' ? '#f4d41f' : '#fff1b5',\n                                width: '23%',\n                                height: 60,\n                                justifyContent: 'center',\n                                marginHorizontal: '1%',\n                                padding: 10\n                            }}\n                            underlayColor='#f4d41f'\n                            onPress={() => this.setState({ mealType: 'Lunch', editingFruitType: false })}\n                        >\n                            <Text style={styles.mealButtonText}>午餐</Text>\n                        </TouchableHighlight>\n                        <TouchableHighlight\n                            style={{\n                                backgroundColor: mealType === 'Snack' ? '#00c07f' : '#dcf3d0',\n                                width: '23%',\n                                height: 60,\n                                justifyContent: 'center',\n                                marginHorizontal: '1%',\n                                padding: 10\n                            }}\n                            underlayColor='#00c07f'\n                            onPress={() => this.setState({ mealType: 'Snack', editingFruitType: false })}\n                        >\n                            <Text style={styles.mealButtonText}>點心</Text>\n                        </TouchableHighlight>\n                    </View>\n                    \n                    {Object.keys(this.props.class.students).map((student_id) => {\n                        const meal_rating = mealType === '' ? '' : this.props.appetite.ratings[student_id][mealType].slice(0,-1)\n                        const water_drank = mealType === '' ? false : this.props.appetite.ratings[student_id][mealType].slice(-1) === '1'\n                        return (\n                            <View\n                                key={student_id}\n                                style={{ width: '98%' }}\n                            >\n                                <Card>\n                                    <CardItem>\n                                        <View style={styles.childThumbnail}>\n                                            <Image\n                                                source={\n                                                    this.props.class.students[student_id].profile_picture === '' ?\n                                                        require('../../../assets/icon-thumbnail.png')\n                                                        : {uri: this.props.class.students[student_id].profile_picture}\n                                                }\n                                                style={styles.thumbnailImage}/>\n                                        </View>\n                                        <View style={{ width: '75%' }}>\n                                            <View style={{ flex: 1 }}>\n                                                <View style={{ flex: 1, flexDirection: 'row' }}>\n                                                    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n                                                        <Text style={{ fontSize: 30, paddingLeft: 18, alignSelf: 'center' }}>\n                                                            {this.props.class.students[student_id].name}\n                                                        </Text>\n                                                    </View>\n                                                    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                                                        <TouchableHighlight\n                                                            style={{\n                                                                width: '80%',\n                                                                borderWidth: 2,\n                                                                borderColor: '#368cbf',\n                                                                padding: 10,\n                                                                justifyContent: 'center',\n                                                                backgroundColor: water_drank ? '#368cbf': 'white'\n                                                            }}\n                                                            onPress={() => this.markWaterDrank(student_id)}\n                                                        >\n                                                            <Text style={{\n                                                                textAlign: 'center',\n                                                                color: water_drank ? '#D3D3D3': 'grey',\n                                                                fontSize: 17\n                                                            }}>有喝水</Text>\n                                                        </TouchableHighlight>\n                                                    </View>\n                                                    <View style={{ flex: 2, alignItems: 'flex-end'}}>\n                                                        {this.props.appetite.updatedStudents.has(student_id) ?\n                                                            <Text style={{ color: 'red', fontSize: 15 }}>未送出</Text>\n                                                            : null\n                                                        }\n                                                    </View>\n                                                </View>\n                                                <View style={styles.cardBody}>\n                                                    <TouchableHighlight\n                                                        style={{\n                                                            width: '22%',\n                                                            height: '100%',\n                                                            margin: 5,\n                                                            justifyContent: 'center',\n                                                            backgroundColor: meal_rating === 'Awesome' ? '#368cbf' : '#b5e9e9',\n                                                            padding: 10\n                                                        }}\n                                                        onPress={() => this.handleRateFoodWellness(student_id, 'Awesome')}\n                                                    >\n                                                        <Text\n                                                            style={{\n                                                                textAlign: 'center',\n                                                                color: meal_rating === 'Awesome' ? '#D3D3D3' : 'grey',\n                                                                fontSize: 20\n                                                            }}\n                                                        >\n                                                            非常好\n                                                        </Text>\n                                                    </TouchableHighlight>\n                                                    <TouchableHighlight\n                                                        style={{\n                                                            width: '22%',\n                                                            height: '100%',\n                                                            margin: 5,\n                                                            justifyContent: 'center',\n                                                            backgroundColor: meal_rating === 'Good' ? '#368cbf' : '#b5e9e9',\n                                                            padding: 10\n                                                        }}\n                                                        onPress={() => this.handleRateFoodWellness(student_id, 'Good')}\n                                                    >\n                                                        <Text\n                                                            style={{\n                                                                textAlign: 'center',\n                                                                color: meal_rating === 'Good' ? '#D3D3D3' : 'grey',\n                                                                fontSize: 20\n                                                            }}\n                                                        >\n                                                            還不錯\n                                                        </Text>\n                                                    </TouchableHighlight>\n                                                    <TouchableHighlight\n                                                        style={{\n                                                            width: '22%',\n                                                            height: '100%',\n                                                            margin: 5,\n                                                            justifyContent: 'center',\n                                                            backgroundColor: meal_rating === 'Ok' ? '#368cbf' : '#b5e9e9',\n                                                            padding: 10\n                                                        }}\n                                                        onPress={() => this.handleRateFoodWellness(student_id, 'Ok')}\n                                                    >\n                                                        <Text\n                                                            style={{\n                                                                textAlign: 'center',\n                                                                color: meal_rating === 'Ok' ? '#D3D3D3' : 'grey',\n                                                                fontSize: 20\n                                                            }}\n                                                        >\n                                                            吃不多\n                                                        </Text>\n                                                    </TouchableHighlight>\n                                                    <TouchableHighlight\n                                                        style={{\n                                                            width: '22%',\n                                                            height: '100%',\n                                                            margin: 5,\n                                                            justifyContent: 'center',\n                                                            backgroundColor:\n                                                                this.isRatingCustomized(meal_rating) || selectedForCustomize.has(student_id) ?\n                                                                    '#368cbf'\n                                                                    : '#b5e9e9',\n                                                            padding: 10\n                                                        }}\n                                                        onPress={() => this.onClickOther(student_id)}\n                                                    >\n                                                        {this.isRatingCustomized(meal_rating) || selectedForCustomize.has(student_id) ?\n                                                            <TextInput\n                                                                style={{\n                                                                    textAlign: 'center',\n                                                                    color: '#D3D3D3',\n                                                                    fontSize: 20\n                                                                }}\n                                                                autoFocus={meal_rating === '' ? true : false}\n                                                                onChangeText={customized_text => this.onCustomizeRating(student_id, customized_text)}\n                                                                value={meal_rating}\n                                                                onBlur={() => this.customizedRatingOnBlur(student_id)}\n                                                            />\n                                                            : <Text\n                                                                style={{\n                                                                    textAlign: 'center',\n                                                                    color: this.isRatingCustomized(meal_rating) || selectedForCustomize.has(student_id) ? '#D3D3D3' : 'grey',\n                                                                    fontSize: 20\n                                                                }}\n                                                            >\n                                                                Other\n                                                            </Text>\n                                                        }\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </CardItem>\n                                </Card>\n                            </View>\n                        )\n                    })}\n                </Content>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    childThumbnail: {\n        width: '25%',\n        // width: 100,\n        // height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center'\n        // marginLeft: -7,\n    },\n    cardBody: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    foodButton: {\n        width: 70,\n        alignSelf: 'center',\n        margin: 5,\n        justifyContent: 'center',\n        backgroundColor: '#b5e9e9'\n    },\n    thumbnailImage: {\n        height: 130,\n        width: 130,\n        borderRadius: 65\n    },\n    subHeading: {\n        width: '99%',\n        // height: 45,\n        paddingHorizontal: '4%',\n        // marginTop: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        // backgroundColor: '#ccd2dd',\n        zIndex: 2\n    },\n    mealButtons: {\n        width: '99%',\n        // height: 45,\n        marginVertical: 15,\n        // marginTop: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // zIndex: 1,\n        // position: 'absolute'\n    },\n    mealButtonText: {\n        fontSize: 30,\n        textAlign: 'center'\n    },\n    buttonText: {\n        color: 'grey',\n        textAlign: 'center'\n    }\n})\n\nconst mapStatesToProps = (state) => {\n    return {\n        class: state.classInfo,\n        appetite: state.appetite\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            rateAppetite,\n            clearRatings,\n            setAllRatingsToGreat,\n            fetchClassAppetiteData,\n            onSendAppetiteSuccess,\n            alertErrMessage,\n            markWaterDrank,\n            editFruitName,\n            clearAppetiteErrorMessage,\n            addStudentIdForUpdate\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStatesToProps, mapDispatchToProps) (TeacherAppetiteLog)"]},"metadata":{},"sourceType":"module"}