{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Alert from\"react-native-web/dist/exports/Alert\";import{Card,CardItem,Button}from'native-base';import{connect}from'react-redux';import{bindActionCreators}from'redux';import{formatHourMinute,get,formatDate}from\"../util\";var InboxCard=function(_React$Component){_inherits(InboxCard,_React$Component);var _super=_createSuper(InboxCard);function InboxCard(props){var _this;_classCallCheck(this,InboxCard);_this=_super.call(this,props);_this.state={messages:[]};return _this;}_createClass(InboxCard,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchData();}},{key:\"fetchData\",value:function fetchData(){var class_id,date,response,success,statusCode,message,data;return _regeneratorRuntime.async(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:class_id=this.props.class_id;date=new Date();_context.next=4;return _regeneratorRuntime.awrap(get(\"/message/class/\"+class_id+\"/unread?date=\"+formatDate(date)));case 4:response=_context.sent;success=response.success,statusCode=response.statusCode,message=response.message,data=response.data;if(success){_context.next=9;break;}alert(\"Sorry \\u53D6\\u5F97\\u5BB6\\u9577\\u8A0A\\u606F\\u6642\\u96FB\\u8166\\u51FA\\u72C0\\u6CC1\\u4E86\\uFF01\\u8ACB\\u622A\\u5716\\u548C\\u8207\\u5DE5\\u7A0B\\u5E2B\\u806F\\u7E6B\\n\\n\"+message);return _context.abrupt(\"return\");case 9:this.setState({messages:data});case 10:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"render\",value:function render(){var _this2=this;var students=this.props.students;var messages=this.state.messages;return React.createElement(Card,{style:{flex:1,width:'90%'}},React.createElement(View,{style:{height:80,justifyContent:'center',marginTop:5}},React.createElement(Text,{style:{fontSize:30,alignSelf:'center',position:'absolute'}},\"\\u8A0A\\u606F\")),React.createElement(View,{style:{}},React.createElement(ScrollView,{horizontal:true},messages.map(function(message,index){var activities=message.activities,items_to_bring=message.items_to_bring,message_for_teacher=message.message_for_teacher,other_activity=message.other_activity,other_item=message.other_item,student_id=message.student_id,teacher_id=message.teacher_id,text=message.text;return React.createElement(TouchableHighlight,{key:index,style:{flex:1,margin:3},onPress:function onPress(){_this2.props.navigation.push('Inbox',{messages:messages,students:students});}},React.createElement(Card,{style:{flex:1,alignItems:'center',padding:15}},React.createElement(View,{style:{justifyContent:'center'}},React.createElement(Image,{source:students[student_id].profile_picture===''?require(\"../../assets/icon-thumbnail.png\"):{uri:students[student_id].profile_picture},style:styles.thumbnailImage})),React.createElement(View,{style:{justifyContent:'center'}},React.createElement(Text,{style:{fontSize:25}},students[student_id].name))));}))));}}]);return InboxCard;}(React.Component);var styles=StyleSheet.create({card:{width:'90%',flex:1},button:{width:'30%',backgroundColor:\"#b5e9e9\"},button_text:{width:'100%',textAlign:'center',color:'gray',fontSize:30},thumbnailImage:{height:150,width:150,borderRadius:75}});var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({},dispatch));};export default connect(null,mapDispatchToProps,null,{forwardRef:true})(InboxCard);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/inboxcard.js"],"names":["React","Card","CardItem","Button","connect","bindActionCreators","formatHourMinute","get","formatDate","InboxCard","props","state","messages","fetchData","class_id","date","Date","response","success","statusCode","message","data","alert","setState","students","flex","width","height","justifyContent","marginTop","fontSize","alignSelf","position","map","index","activities","items_to_bring","message_for_teacher","other_activity","other_item","student_id","teacher_id","text","margin","navigation","push","alignItems","padding","profile_picture","require","uri","styles","thumbnailImage","name","Component","StyleSheet","create","card","button","backgroundColor","button_text","textAlign","color","borderRadius","mapDispatchToProps","dispatch","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, StyleSheet, Image, TouchableHighlight, ScrollView, Alert } from 'react-native'\nimport { Card, CardItem, Button } from 'native-base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n// import { initializeRequests } from '../../redux/school/actions/index'\nimport { formatHourMinute, get, formatDate } from '../util'\n\nclass InboxCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            messages: []\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    async fetchData() {\n        const { class_id } = this.props\n        // let yesterday = new Date()\n        // yesterday.setDate(yesterday.getDate() - 1)\n        const date = new Date()\n        const response = await get(`/message/class/${class_id}/unread?date=${formatDate(date)}`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert(`Sorry 取得家長訊息時電腦出狀況了！請截圖和與工程師聯繫\\n\\n` + message)\n              return \n        }\n        // this.props.getUnreadMessageSuccess(data)\n        // console.log('data: ', data)\n        this.setState({ messages: data })\n    }\n\n    render() {\n        const { students } = this.props\n        const { messages } = this.state\n        // const { requests, unfinished } = this.props.medication_requests\n        return (\n            <Card style={{ flex: 1, width: '90%'}}>\n                <View style={{ height: 80, justifyContent: 'center', marginTop: 5 }}>\n                    <Text style={{ fontSize: 30, alignSelf: 'center', position: 'absolute' }}>訊息</Text>\n                    {/* <TouchableHighlight\n                        style={{\n                            width: '25%',\n                            alignSelf: 'flex-end',\n                            position: 'absolute',\n                            padding: 5,\n                            backgroundColor: '#b5e9e9'\n                        }}\n                        onPress={() => {\n                            this.props.navigation.push('TeacherMedicineLog', {\n                                request_id: null\n                            })\n                        }}\n                    >\n                        <Text style={styles.button_text}>查看</Text>\n                    </TouchableHighlight> */}\n                </View>\n                <View style={{ }}>\n                    <ScrollView horizontal={true}>\n                        {messages.map((message, index) => {\n                            const { activities, items_to_bring, message_for_teacher, other_activity, other_item, student_id, teacher_id, text } = message\n                            // const time = formatHourMinute(new Date(timestamp))\n                            return (\n                                <TouchableHighlight\n                                    key={index}\n                                    style={{ flex: 1, margin: 3 }}\n                                    onPress={() => {\n                                        this.props.navigation.push('Inbox', {\n                                            messages,\n                                            students\n                                        })\n                                    }}\n                                >\n                                    <Card style={{ flex:1, alignItems: 'center', padding: 15 }}>\n                                        {/* <View style={{ justifyContent: 'center' }}>\n                                            <Text style={{ fontSize: 35 }}>{time}</Text>\n                                        </View> */}\n                                        <View style={{ justifyContent: 'center' }}>\n                                            <Image\n                                                source={\n                                                    students[student_id].profile_picture === '' ?\n                                                        require('../../assets/icon-thumbnail.png')\n                                                        : {uri: students[student_id].profile_picture} \n                                                }\n                                                style={styles.thumbnailImage}/>\n                                        </View>\n                                        <View\n                                            style={{ justifyContent: 'center' }}\n                                        >\n                                            <Text style={{ fontSize: 25 }}>{students[student_id].name}</Text>\n                                        </View>\n                                    </Card>\n                                </TouchableHighlight>\n                            )\n                        })}\n                    </ScrollView>\n                </View>\n            </Card>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    card: {\n        width: '90%',\n        flex: 1\n    },\n    button: {\n        width: '30%',\n        backgroundColor:\"#b5e9e9\"\n    },\n    button_text: {\n        width: '100%',\n        textAlign: 'center',\n        color: 'gray',\n        fontSize: 30,\n    },\n    thumbnailImage: {\n        height: 150,\n        width: 150,\n        borderRadius: 75\n    }\n})\n\n// const mapStateToProps = (state) => {\n//     return {\n//         medication_requests: state.medicationrequests\n//     }\n// }\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({ }, dispatch)\n    }\n}\n\nexport default connect(null, mapDispatchToProps, null, { forwardRef: true }) (InboxCard)"]},"metadata":{},"sourceType":"module"}