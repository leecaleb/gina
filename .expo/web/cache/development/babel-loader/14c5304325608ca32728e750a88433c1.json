{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/studentmodal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Toast } from 'native-base';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport WellnessForm from \"./wellnessform\";\nimport { sendWellnessData, formatDate, post } from \"../util\";\nimport { sendWellnessDataFail, sendWellnessDataSuccess } from \"../../redux/school/actions/index\";\n\nvar StudentModal = function (_React$Component) {\n  _inherits(StudentModal, _React$Component);\n\n  var _super = _createSuper(StudentModal);\n\n  function StudentModal(props) {\n    var _this;\n\n    _classCallCheck(this, StudentModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      class_id: ''\n    };\n    return _this;\n  }\n\n  _createClass(StudentModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          class_id = _this$props.class_id,\n          student_id = _this$props.student_id;\n\n      if (class_id === 'all') {\n        this.getClassIdByStudentId(student_id);\n      } else {\n        this.setState({\n          class_id: class_id\n        });\n      }\n    }\n  }, {\n    key: \"getClassIdByStudentId\",\n    value: function getClassIdByStudentId(student_id) {\n      var classes = this.props.classes;\n      var id = Object.keys(classes);\n      var class_id_found = '';\n\n      for (var i = 0; i < id.length; i++) {\n        var students = classes[id[i]].students;\n\n        for (var j = 0; j < students.length; j++) {\n          if (students[j] === student_id) {\n            class_id_found = id[i];\n          }\n        }\n      }\n\n      this.setState({\n        class_id: class_id_found\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend(record_id) {\n      var _this$props2, wellness, isConnected, class_id, records, record, sendDataResult;\n\n      return _regeneratorRuntime.async(function handleSend$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props2 = this.props, wellness = _this$props2.wellness, isConnected = _this$props2.isConnected;\n              class_id = this.state.class_id;\n              records = wellness.records;\n              record = records[record_id];\n\n              if (!(record.temperature === '')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert('未填寫!', '', [{\n                text: 'OK'\n              }]);\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (!isConnected) {\n                Toast.show({\n                  text: '拍謝 網路連不到! 等一下再試試看',\n                  buttonText: 'Okay',\n                  position: \"top\",\n                  type: \"warning\",\n                  duration: 2000\n                });\n              }\n\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(sendWellnessData(wellness, class_id, formatDate(new Date())));\n\n            case 10:\n              sendDataResult = _context.sent;\n\n              if (sendDataResult.success) {\n                this.props.fetchStudentAttendance();\n                this.props.sendWellnessDataSuccess();\n                this.props.hideModal();\n              } else {\n                this.props.sendWellnessDataFail(sendDataResult.message);\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"markAbsent\",\n    value: function markAbsent() {\n      var _this$props3, student_id, school_id, class_id, body, response, success, statusCode, message, data;\n\n      return _regeneratorRuntime.async(function markAbsent$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props3 = this.props, student_id = _this$props3.student_id, school_id = _this$props3.school_id;\n              class_id = this.state.class_id;\n              body = {\n                student_id: student_id,\n                class_id: class_id,\n                school_id: school_id,\n                startDate: formatDate(new Date()),\n                endDate: formatDate(new Date()),\n                excuse_type: 'none-medical',\n                note: '校方填寫'\n              };\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(post('/absence-excuse', body));\n\n            case 5:\n              response = _context2.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context2.next = 10;\n                break;\n              }\n\n              Alert.alert('Sorry 標記學生缺席時電腦出狀況了！', '請截圖和與工程師聯繫\\n\\n' + message, [{\n                text: 'Ok'\n              }]);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              this.props.fetchStudentAttendance();\n              this.props.hideModal();\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          show = _this$props4.show,\n          student_id = _this$props4.student_id,\n          teacher_id = _this$props4.teacher_id,\n          students = _this$props4.students,\n          student_unmarked = _this$props4.student_unmarked,\n          student_absent = _this$props4.student_absent,\n          teacherOnDuty = _this$props4.teacherOnDuty;\n      var student = students[student_id];\n      var wellness = this.props.wellness;\n      var record_id = wellness.by_student_id[student_id][0];\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '80%',\n          height: '70%',\n          backgroundColor: student_absent.has(student_id) ? '#ffe1d0' : student_unmarked.has(student_id) ? '#fff1b5' : '#dcf3d0',\n          zIndex: 3,\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 2,\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: student.profile_picture === '' ? require(\"../../assets/icon-thumbnail.png\") : {\n          uri: student.profile_picture\n        },\n        style: styles.thumbnailImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, student.name), React.createElement(TouchableHighlight, {\n        style: {\n          padding: 10,\n          backgroundColor: 'lightgrey',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.markAbsent();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"\\u7F3A\\u5E2D\")))), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, \"\\u8840\\u578B: \", student.blood_type, \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, \"\\u5730\\u5740: \", student.address), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, \"\\u5BB6\\u88E1\\u96FB\\u8A71: \", student.home_phone), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, \"\\uFF08\\u7236\\uFF09\\u624B\\u6A5F: \", student.father_phone), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }, \"\\uFF08\\u6BCD\\uFF09\\u624B\\u6A5F: \", student.mother_phone)), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingHorizontal: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, student_unmarked.has(student_id) ? React.createElement(WellnessForm, {\n        student_id: student_id,\n        teacher_id: teacherOnDuty,\n        record_id: record_id,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }) : null)), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, student_unmarked.has(student_id) ? React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: 'red',\n          flex: 1,\n          height: 60,\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: 8\n        },\n        onPress: this.props.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, \"\\u53D6\\u6D88\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: 'grey',\n          flex: 1,\n          height: 60,\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: 8\n        },\n        onPress: function onPress() {\n          return _this2.handleSend(record_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }, \"\\u9001\\u51FA\"))) : null));\n    }\n  }]);\n\n  return StudentModal;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  thumbnailImage: {\n    width: 200,\n    height: 200,\n    borderRadius: 100\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    classes: state.school.classes,\n    student_absent: state.school.student_absent,\n    student_unmarked: state.school.student_unmarked,\n    students: state.school.students,\n    wellness: state.healthstatus,\n    isConnected: state.school.isConnected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    sendWellnessDataFail: sendWellnessDataFail,\n    sendWellnessDataSuccess: sendWellnessDataSuccess\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentModal);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/studentmodal.js"],"names":["React","Toast","connect","bindActionCreators","WellnessForm","sendWellnessData","formatDate","post","sendWellnessDataFail","sendWellnessDataSuccess","StudentModal","props","state","class_id","student_id","getClassIdByStudentId","setState","classes","id","Object","keys","class_id_found","i","length","students","j","record_id","wellness","isConnected","records","record","temperature","Alert","alert","text","show","buttonText","position","type","duration","Date","sendDataResult","success","fetchStudentAttendance","hideModal","message","school_id","body","startDate","endDate","excuse_type","note","response","statusCode","data","teacher_id","student_unmarked","student_absent","teacherOnDuty","student","by_student_id","flex","width","height","backgroundColor","has","zIndex","flexDirection","justifyContent","alignItems","profile_picture","require","uri","styles","thumbnailImage","fontSize","name","padding","markAbsent","blood_type","address","home_phone","father_phone","mother_phone","paddingHorizontal","margin","handleSend","Component","StyleSheet","create","borderRadius","mapStateToProps","school","healthstatus","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Image, Text, TouchableHighlight, StyleSheet, KeyboardAvoidingView, Alert } from 'react-native'\nimport { Toast } from 'native-base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport WellnessForm from './wellnessform'\nimport { sendWellnessData, formatDate, post } from '../util'\nimport { sendWellnessDataFail, sendWellnessDataSuccess } from '../../redux/school/actions/index'\n\nclass StudentModal extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state={\n        class_id: ''\n    }\n  }\n\n  componentDidMount() {\n    const { class_id, student_id } = this.props\n    if (class_id === 'all') {\n      this.getClassIdByStudentId(student_id)\n    } else {\n      this.setState({ class_id })\n    }\n  }\n\n  getClassIdByStudentId(student_id) {\n      const { classes } = this.props\n      const id = Object.keys(classes)\n      var class_id_found = ''\n      for(var i = 0; i < id.length; i++) {\n          const {students} = classes[id[i]]\n          for(var j = 0; j < students.length; j++) {\n              if (students[j] === student_id) {\n                  class_id_found = id[i]\n              }\n          }\n      }\n\n      this.setState({\n          class_id: class_id_found\n      })\n  }\n\n  async handleSend(record_id) {\n    const { wellness, isConnected } = this.props\n    const { class_id } = this.state\n    const { records } = wellness\n    const record = records[record_id]\n    if (record.temperature === '') {\n      Alert.alert(\n        '未填寫!',\n        '',\n        [{text: 'OK'}]\n      )\n      return\n    }\n\n    if (!isConnected) {\n        Toast.show({\n            text: '拍謝 網路連不到! 等一下再試試看',\n            buttonText: 'Okay',\n            position: \"top\",\n            type: \"warning\",\n            duration: 2000\n        })\n    }\n\n    const sendDataResult = await sendWellnessData(wellness, class_id, formatDate(new Date()))\n    if (sendDataResult.success) {\n        this.props.fetchStudentAttendance()\n        this.props.sendWellnessDataSuccess()\n        this.props.hideModal()\n    } else {\n      this.props.sendWellnessDataFail(sendDataResult.message)\n    }\n  }\n\n  async markAbsent() {\n    const { student_id, school_id } = this.props\n    const { class_id } = this.state\n    const body = {\n      student_id,\n      class_id,\n      school_id,\n      startDate: formatDate(new Date()),\n      endDate: formatDate(new Date()),\n      excuse_type: 'none-medical',\n      note: '校方填寫'\n    }\n    const response = await post('/absence-excuse', body)\n    const { success, statusCode, message, data } = response\n    if (!success) {\n        Alert.alert(\n            'Sorry 標記學生缺席時電腦出狀況了！',\n            '請截圖和與工程師聯繫\\n\\n' + message,\n            [{ text: 'Ok' }]\n        )\n        return \n    }\n    this.props.fetchStudentAttendance()\n    this.props.hideModal()\n  }\n\n  render() {\n    const { show, student_id, teacher_id, students, student_unmarked, student_absent, teacherOnDuty } = this.props\n    const student = students[student_id]\n    const { wellness } = this.props\n    const record_id = wellness.by_student_id[student_id][0]\n    return (\n        <View\n          style={{\n            flex: 1,\n            width: '80%',\n            height: '70%',\n            backgroundColor:\n                student_absent.has(student_id) ? '#ffe1d0'\n                : student_unmarked.has(student_id) ? '#fff1b5'\n                : '#dcf3d0',\n            zIndex: 3,\n            position: 'absolute'\n          }}\n        >\n          <View style={{ flex: 2, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center' }}>\n            <View style={{ flex: 1, alignItems: 'center' }}>\n              <Image\n                source={\n                  student.profile_picture === '' ?\n                      require('../../assets/icon-thumbnail.png')\n                      : {uri: student.profile_picture }\n              }\n                style={styles.thumbnailImage}\n              />\n            </View>\n            <View style={{ flex: 1, alignItems: 'flex-start' }}>\n              <Text style={{ fontSize: 60 }}>{student.name}</Text>\n              <TouchableHighlight\n                style={{ padding: 10, backgroundColor: 'lightgrey', justifyContent: 'center' }}\n                onPress={() => this.markAbsent()}\n              >\n                <Text style={{ fontSize: 40 }}>缺席</Text>\n              </TouchableHighlight>\n            </View>\n          </View>\n          \n          <View style={{ flex: 2 }}>\n            <View style={{ flex: 3, alignItems: 'center' }}>\n              <Text style={{ fontSize: 20 }}>血型: {student.blood_type} </Text>\n              <Text style={{ fontSize: 20 }}>地址: {student.address}</Text>\n              <Text style={{ fontSize: 20 }}>家裡電話: {student.home_phone}</Text>\n              <Text style={{ fontSize: 20 }}>（父）手機: {student.father_phone}</Text>\n              <Text style={{ fontSize: 20 }}>（母）手機: {student.mother_phone}</Text>\n            </View>\n            <View style={{ flex: 1, flexDirection: 'row', paddingHorizontal: 30 }}>\n              {student_unmarked.has(student_id) ? \n                <WellnessForm\n                  student_id={student_id}\n                  teacher_id={teacherOnDuty}\n                  record_id={record_id}\n                  autoFocus={true}\n                />\n              : null}\n            </View>\n          </View>\n\n          <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n            {student_unmarked.has(student_id) ?\n              <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                <TouchableHighlight\n                  style={{ backgroundColor: 'red', flex: 1, height: 60, justifyContent: 'center', alignItems: 'center', margin: 8 }}\n                  onPress={this.props.hideModal}\n                >\n                  <Text style={{ fontSize: 30 }}>取消</Text>\n                </TouchableHighlight>\n                <TouchableHighlight\n                  style={{ backgroundColor: 'grey', flex: 1, height: 60, justifyContent: 'center', alignItems: 'center', margin: 8 }}\n                  onPress={() => this.handleSend(record_id)}\n                >\n                  <Text style={{ fontSize: 30 }}>送出</Text>\n                </TouchableHighlight>\n              </View>\n              : null\n            }\n          </View>\n        </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  thumbnailImage: {\n      width: 200,\n      height: 200,\n      borderRadius: 100\n  }\n})\n\nconst mapStateToProps = (state) => {\n  return {\n    // students: state.classInfo.students,\n    // school: state.school,\n    classes: state.school.classes,\n    student_absent: state.school.student_absent,\n    student_unmarked: state.school.student_unmarked,\n    students: state.school.students,\n    wellness: state.healthstatus,\n    isConnected: state.school.isConnected\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ...bindActionCreators({ sendWellnessDataFail, sendWellnessDataSuccess}, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (StudentModal)"]},"metadata":{},"sourceType":"module"}