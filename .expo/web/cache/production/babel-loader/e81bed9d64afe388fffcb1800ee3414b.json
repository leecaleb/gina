{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import{Card}from'native-base';import{formatDate,fetchData as _fetchData}from\"../util\";import Reloading from\"../reloading\";var WellnessCard=function(_React$Component){_inherits(WellnessCard,_React$Component);var _super=_createSuper(WellnessCard);function WellnessCard(props){var _this;_classCallCheck(this,WellnessCard);_this=_super.call(this,props);_this.state={child_id:_this.props.child_id,isLoading:true};_this.fetchData=_this.fetchData.bind(_assertThisInitialized(_this));return _this;}_createClass(WellnessCard,[{key:\"componentDidMount\",value:function componentDidMount(){var date=this.props.date;this.fetchData(this.state.child_id,new Date(date.getTime()));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.date!==prevProps.date){this.setState({isLoading:true});this.fetchData(this.props.child_id,new Date(this.props.date.getTime()));}else if(this.props.child_id!==prevProps.child_id){this.setState({isLoading:true});this.fetchData(this.props.child_id,new Date());}}},{key:\"fetchData\",value:function fetchData(child_id,date){var start_date,end_date,wellnessData;return _regeneratorRuntime.async(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:start_date=formatDate(date);date.setDate(date.getDate()+1);end_date=formatDate(date);_context.next=5;return _regeneratorRuntime.awrap(_fetchData('wellness',child_id,start_date,end_date));case 5:wellnessData=_context.sent;this.setState({wellnessData:wellnessData,isLoading:false});if(wellnessData&&wellnessData[start_date]){this.props.updateTitleTemp(wellnessData[start_date][0][1]);}else{this.props.updateTitleTemp('');}case 8:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"render\",value:function render(){var _this$state=this.state,wellnessData=_this$state.wellnessData,isLoading=_this$state.isLoading;var date=formatDate(this.props.date);return React.createElement(Card,{style:{width:'93%'}},React.createElement(View,{style:{flex:1,flexDirection:'row'}},React.createElement(View,{style:{width:56,height:56,justifyContent:'center',alignItems:'center'}},React.createElement(Image,{source:require(\"../../assets/icon-wellness.png\"),style:{width:48,height:48}})),React.createElement(View,{style:{flex:1}},React.createElement(View,{style:{paddingTop:8}},React.createElement(Text,{style:{fontSize:20}},\"\\u5065\\u5EB7\")),isLoading?React.createElement(Reloading,null):wellnessData&&wellnessData[date]?React.createElement(View,{style:{flex:1,paddingVertical:8}},React.createElement(View,{style:{flexDirection:'row'}},React.createElement(View,{style:{flex:1,justifyContent:'center',paddingBottom:5}},React.createElement(Text,{style:{fontSize:15,textAlign:'center',color:'#606060'}},\"\\u6642\\u9593\")),React.createElement(View,{style:{flex:1,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:15,textAlign:'center',color:'#606060'}},\"\\u9AD4\\u6EAB\")),React.createElement(View,{style:{flex:2,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:15,textAlign:'center',color:'#606060'}},\"\\u4ECA\\u65E5\\u72C0\\u6CC1\"))),wellnessData[date].map(function(record,index){return React.createElement(View,{key:index,style:{flexDirection:'row'}},React.createElement(View,{style:{flex:1,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:25,textAlign:'center',color:'#404040'}},record[0])),React.createElement(View,{style:{flex:1,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:25,textAlign:'center',color:'#404040'}},record[1],\"\\xB0\")),React.createElement(View,{style:{flex:2,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:25,textAlign:'center',color:'#404040'}},record[2])));})):React.createElement(View,{style:{flex:1,paddingVertical:8}},React.createElement(Text,{style:{fontSize:17}},\"\\u6C92\\u6709\\u65B0\\u7D00\\u9304\")))));}}]);return WellnessCard;}(React.Component);export{WellnessCard as default};","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/wellnesscard.js"],"names":["React","Card","formatDate","fetchData","Reloading","WellnessCard","props","state","child_id","isLoading","bind","date","Date","getTime","prevProps","setState","start_date","setDate","getDate","end_date","wellnessData","updateTitleTemp","width","flex","flexDirection","height","justifyContent","alignItems","require","paddingTop","fontSize","paddingVertical","paddingBottom","textAlign","color","map","record","index","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, Image } from 'react-native'\nimport { Card } from 'native-base'\nimport { formatDate, fetchData } from '../util'\nimport Reloading from '../reloading'\n\nexport default class WellnessCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      child_id: this.props.child_id,\n      isLoading: true\n    }\n    this.fetchData = this.fetchData.bind(this)\n  }\n\n  componentDidMount() {\n    const { date } = this.props\n    this.fetchData(this.state.child_id, new Date(date.getTime()))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    } else if (this.props.child_id !== prevProps.child_id) {\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date());\n    }\n  }\n\n  async fetchData(child_id, date) {\n    // const date = new Date(datetime.getTime())\n    const start_date = formatDate(date)\n    date.setDate(date.getDate() + 1)\n    const end_date = formatDate(date)\n    const wellnessData = await fetchData('wellness', child_id, start_date, end_date)\n    this.setState({\n      wellnessData,\n      isLoading: false\n    }) \n    if (wellnessData && wellnessData[start_date]) {\n      this.props.updateTitleTemp(wellnessData[start_date][0][1])\n    } else {\n      this.props.updateTitleTemp('')\n    }\n  }\n\n  render() {\n    const { wellnessData, isLoading} = this.state\n    const date = formatDate(this.props.date)\n    return (\n      <Card style={{ width: '93%' }}>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ width: 56, height: 56, justifyContent: 'center', alignItems: 'center'}}>\n            <Image\n              source={require('../../assets/icon-wellness.png')}\n              style={{\n                  width: 48,\n                  height: 48\n              }}\n            />\n          </View>\n          <View style={{ flex: 1 }}>\n            <View style={{ paddingTop: 8 }}>\n              <Text style={{ fontSize: 20 }}>健康</Text>\n            </View>\n            {isLoading ? \n              <Reloading />\n              : wellnessData && wellnessData[date] ? \n                <View style={{ flex: 1, paddingVertical: 8 }}>\n                  <View\n                    style={{ flexDirection: 'row' }}\n                  >\n                    <View style={{ flex: 1, justifyContent: 'center', paddingBottom: 5 }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>時間</Text>\n                    </View>\n                    <View style={{ flex: 1, justifyContent: 'center'  }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>體溫</Text>\n                    </View>\n                    <View style={{ flex: 2, justifyContent: 'center'  }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>今日狀況</Text>\n                    </View>\n                  </View>\n                  {wellnessData[date].map((record, index) => {\n                    return (\n                      <View\n                        key={index}\n                        style={{ flexDirection: 'row' }}\n                      >\n                        <View style={{ flex: 1, justifyContent: 'center' }}>\n                          <Text style={{ fontSize: 25, textAlign: 'center', color: '#404040' }}>{record[0]}</Text>\n                        </View>\n                        <View style={{ flex: 1, justifyContent: 'center'  }}>\n                          <Text style={{ fontSize: 25, textAlign: 'center', color: '#404040' }}>{record[1]}°</Text>\n                        </View>\n                        <View style={{ flex: 2, justifyContent: 'center'  }}>\n                          <Text style={{ fontSize: 25, textAlign: 'center', color: '#404040' }}>{record[2]}</Text>\n                        </View>\n                      </View>\n                    )\n                  })}\n                </View>\n                : <View style={{ flex: 1, paddingVertical: 8 }}>\n                    <Text style={{ fontSize: 17 }}>沒有新紀錄</Text>\n                </View>\n            }\n          </View>\n        </View>\n      </Card>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}