{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/picker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ActionSheetIOS from \"react-native-web/dist/exports/ActionSheetIOS\";\nimport { ActionSheet } from 'native-base';\n\nvar PickerComponent = function (_React$Component) {\n  _inherits(PickerComponent, _React$Component);\n\n  var _super = _createSuper(PickerComponent);\n\n  function PickerComponent(props) {\n    var _this;\n\n    _classCallCheck(this, PickerComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(PickerComponent, [{\n    key: \"isIOS\",\n    value: function isIOS() {\n      if (Platform.OS === 'ios') {\n        return true;\n      } else return false;\n    }\n  }, {\n    key: \"showActionSheet\",\n    value: function showActionSheet() {}\n  }, {\n    key: \"iosShowActionSheet\",\n    value: function iosShowActionSheet() {\n      var _this2 = this;\n\n      var options = this.props.options;\n      ActionSheetIOS.showActionSheetWithOptions({\n        options: options,\n        cancelButtonIndex: options.length - 1\n      }, function (buttonIndex) {\n        _this2.setState({\n          selectedIndex: buttonIndex\n        });\n\n        _this2.props.handleSelectValue(options[buttonIndex]);\n      });\n    }\n  }, {\n    key: \"androidShowActionSheet\",\n    value: function androidShowActionSheet() {\n      var _this3 = this;\n\n      var options = this.props.options;\n      ActionSheet.show({\n        options: options,\n        cancelButtonIndex: options.length - 1\n      }, function (buttonIndex) {\n        _this3.setState({\n          selectedIndex: buttonIndex\n        });\n\n        _this3.props.handleSelectValue(options[buttonIndex]);\n      });\n    }\n  }, {\n    key: \"isOtherSelected\",\n    value: function isOtherSelected() {\n      var _this$props = this.props,\n          selectedValue = _this$props.selectedValue,\n          options = _this$props.options;\n      var index = options.indexOf(selectedValue);\n      if (index < 0) return true;\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          selectedValue = _this$props2.selectedValue,\n          style = _this$props2.style,\n          textStyle = _this$props2.textStyle,\n          disabled = _this$props2.disabled;\n      return React.createElement(TouchableHighlight, {\n        disabled: disabled,\n        style: style,\n        onPress: function onPress() {\n          return _this4.props.showSelect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, selectedValue));\n    }\n  }]);\n\n  return PickerComponent;\n}(React.Component);\n\nexport { PickerComponent as default };","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/picker.js"],"names":["React","ActionSheet","PickerComponent","props","state","selectedIndex","Platform","OS","options","ActionSheetIOS","showActionSheetWithOptions","cancelButtonIndex","length","buttonIndex","setState","handleSelectValue","show","selectedValue","index","indexOf","style","textStyle","disabled","showSelect","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;;IAEqBC,e;;;;;AACnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAFiB;AAKlB;;;;4BAEO;AACN,UAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,eAAO,IAAP;AACD,OAFD,MAEO,OAAO,KAAP;AACR;;;sCAEiB,CAOjB;;;yCAEoB;AAAA;;AAAA,UACXC,OADW,GACC,KAAKL,KADN,CACXK,OADW;AAEnBC,MAAAA,cAAc,CAACC,0BAAf,CACE;AACEF,QAAAA,OAAO,EAAPA,OADF;AAEEG,QAAAA,iBAAiB,EAAEH,OAAO,CAACI,MAAR,GAAe;AAFpC,OADF,EAKE,UAACC,WAAD,EAAiB;AACf,QAAA,MAAI,CAACC,QAAL,CAAc;AACZT,UAAAA,aAAa,EAAEQ;AADH,SAAd;;AAGA,QAAA,MAAI,CAACV,KAAL,CAAWY,iBAAX,CAA6BP,OAAO,CAACK,WAAD,CAApC;AACD,OAVH;AAYD;;;6CAEwB;AAAA;;AAAA,UACfL,OADe,GACH,KAAKL,KADF,CACfK,OADe;AAEvBP,MAAAA,WAAW,CAACe,IAAZ,CACE;AACER,QAAAA,OAAO,EAAPA,OADF;AAEEG,QAAAA,iBAAiB,EAAEH,OAAO,CAACI,MAAR,GAAe;AAFpC,OADF,EAKE,UAAAC,WAAW,EAAI;AACb,QAAA,MAAI,CAACC,QAAL,CAAc;AAAET,UAAAA,aAAa,EAAEQ;AAAjB,SAAd;;AACA,QAAA,MAAI,CAACV,KAAL,CAAWY,iBAAX,CAA6BP,OAAO,CAACK,WAAD,CAApC;AACD,OARH;AAUD;;;sCAEiB;AAAA,wBACmB,KAAKV,KADxB;AAAA,UACRc,aADQ,eACRA,aADQ;AAAA,UACOT,OADP,eACOA,OADP;AAEhB,UAAMU,KAAK,GAAGV,OAAO,CAACW,OAAR,CAAgBF,aAAhB,CAAd;AACA,UAAIC,KAAK,GAAG,CAAZ,EAAe,OAAO,IAAP;AACf,aAAO,KAAP;AACD;;;6BAEQ;AAAA;;AAAA,yBAC+C,KAAKf,KADpD;AAAA,UACCc,aADD,gBACCA,aADD;AAAA,UACgBG,KADhB,gBACgBA,KADhB;AAAA,UACuBC,SADvB,gBACuBA,SADvB;AAAA,UACkCC,QADlC,gBACkCA,QADlC;AAEP,aACE,oBAAC,kBAAD;AACE,QAAA,QAAQ,EAAEA,QADZ;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACjB,KAAL,CAAWoB,UAAX,EAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBJ,aAAzB,CALF,CADF;AASD;;;;EAvE0CjB,KAAK,CAACwB,S;;SAA9BtB,e","sourcesContent":["import React from 'react'\nimport { View, TouchableHighlight, Text, Platform, Picker, ActionSheetIOS } from 'react-native'\nimport { ActionSheet } from 'native-base'\n\nexport default class PickerComponent extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedIndex: 0\n    }\n  }\n\n  isIOS() {\n    if (Platform.OS === 'ios') {\n      return true\n    } else return false\n  }\n\n  showActionSheet() {\n    // this.props.handleOnClick()\n    // if (this.isIOS()) {\n    //   this.iosShowActionSheet()\n    // } else { // android\n    //   this.androidShowActionSheet()\n    // }\n  }\n\n  iosShowActionSheet() {\n    const { options } = this.props\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length-1\n      },\n      (buttonIndex) => {\n        this.setState({\n          selectedIndex: buttonIndex\n        })\n        this.props.handleSelectValue(options[buttonIndex])\n      }\n    )\n  }\n\n  androidShowActionSheet() {\n    const { options } = this.props\n    ActionSheet.show(\n      {\n        options,\n        cancelButtonIndex: options.length-1\n      },\n      buttonIndex => {\n        this.setState({ selectedIndex: buttonIndex })\n        this.props.handleSelectValue(options[buttonIndex])\n      }\n    )\n  }\n\n  isOtherSelected() {\n    const { selectedValue, options } = this.props\n    const index = options.indexOf(selectedValue)\n    if (index < 0) return true\n    return false\n  }\n\n  render() {\n    const { selectedValue, style, textStyle, disabled } = this.props\n    return (\n      <TouchableHighlight\n        disabled={disabled}\n        style={style}\n        onPress={() => this.props.showSelect()}\n      >\n        <Text style={textStyle}>{selectedValue}</Text>\n      </TouchableHighlight>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}