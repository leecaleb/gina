{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Alert from\"react-native-web/dist/exports/Alert\";import{Card,Toast}from'native-base';import{connect}from'react-redux';import MedRequestModal from\"./medrequestmodal\";import{bindActionCreators}from'redux';import{initializeRequests,fillMedRequest}from\"../../../redux/school/actions/index\";import Reloading from\"../../reloading\";import{formatHourMinute}from\"../../util\";import LoginNumberPad from\"../loginnumberpad\";var TeacherMedicineLog=function(_React$Component){_inherits(TeacherMedicineLog,_React$Component);var _super=_createSuper(TeacherMedicineLog);function TeacherMedicineLog(props){var _this;_classCallCheck(this,TeacherMedicineLog);_this=_super.call(this,props);_this.state={isLoading:true,refreshing:false,selected_request_id:'',showLoginNumberPad:false};_this.handleShowRequest=_this.handleShowRequest.bind(_assertThisInitialized(_this));_this.handleFulfillRequest=_this.handleFulfillRequest.bind(_assertThisInitialized(_this));return _this;}_createClass(TeacherMedicineLog,[{key:\"componentDidMount\",value:function componentDidMount(){var request_id=this.props.route.params.request_id;if(request_id===null){this.setState({isLoading:false});return;}this.handleShowRequest(request_id);}},{key:\"handleShowRequest\",value:function handleShowRequest(request_id){this.setState({selected_request_id:request_id,isLoading:false});}},{key:\"handleEnterPasscode\",value:function handleEnterPasscode(passcode){var teacher_id=this.props.class.passcodeTeacherId[passcode];if(teacher_id===undefined){Alert.alert('Wrong password','Please try again',[{text:'OK'}]);}else{this.setState({showLoginNumberPad:false});this.handleFulfillRequest(teacher_id);}}},{key:\"hideLoginPad\",value:function hideLoginPad(){this.setState({showLoginNumberPad:false});}},{key:\"handleFulfillRequest\",value:function handleFulfillRequest(teacher_id){var _this2=this;var selected_request_id=this.state.selected_request_id;var student_id=this.props.requests.requests[selected_request_id].student_id;var isConnected=this.props.class.isConnected;if(!isConnected){Toast.show({text:'拍謝 網路連不到! 等一下再試試看',buttonText:'Okay',position:\"top\",type:\"warning\",duration:2000});return;}fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/medicationrequest',{method:'PUT',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({request_id:selected_request_id,teacher_id:teacher_id,student_id:student_id})}).then(function(res){return res.json();}).then(function(resJson){var statusCode=resJson.statusCode,message=resJson.message,data=resJson.data;if(statusCode>200||message==='Internal server error'){Alert.alert('Error, please try again',message,[{text:'OK'}]);return;}_this2.props.fillMedRequest(selected_request_id);_this2.props.navigation.goBack();}).catch(function(err){Alert.alert('Error, please try again',err.message,[{text:'OK'}]);});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,selected_request_id=_this$state.selected_request_id,isLoading=_this$state.isLoading,showLoginNumberPad=_this$state.showLoginNumberPad;if(isLoading){return React.createElement(Reloading,null);}var requests=this.props.requests.requests;var students=this.props.class.students;var current_request=requests[selected_request_id];return React.createElement(View,{style:{flex:1}},showLoginNumberPad?React.createElement(LoginNumberPad,{handleEnterPasscode:function handleEnterPasscode(passcode){return _this3.handleEnterPasscode(passcode);},hideLoginPad:this.hideLoginPad}):null,React.createElement(ScrollView,{contentContainerStyle:{flex:1,padding:10},refreshControl:React.createElement(RefreshControl,{style:{backgroundColor:'#E0FFFF'},refreshing:this.state.refreshing,onRefresh:this.fetchFromDB,tintColor:\"#ff0000\",title:\"Loading...\",titleColor:\"#00ff00\",colors:['#ff0000','#00ff00','#0000ff'],progressBackgroundColor:\"#ffff00\"})},React.createElement(View,{style:{flex:3}},selected_request_id===''?null:React.createElement(MedRequestModal,{thumbnail:students[current_request.student_id].profile_picture,student_name:students[current_request.student_id].name,request:current_request,showLoginNumberPad:function showLoginNumberPad(){return _this3.setState({showLoginNumberPad:true});}})),React.createElement(View,{style:{flex:1}},React.createElement(ScrollView,{horizontal:true},Object.keys(requests).map(function(request_id){var student_id=requests[request_id].student_id;var _requests$request_id=requests[request_id],timestamp=_requests$request_id.timestamp,administered=_requests$request_id.administered;var time=formatHourMinute(new Date(timestamp));return React.createElement(TouchableHighlight,{key:request_id,style:styles.cardContainer,underlayColor:\"transparent\",onPress:function onPress(){return _this3.handleShowRequest(request_id);}},React.createElement(Card,{style:{flex:1,backgroundColor:administered?'#dcf3d0':'#ffe1d0'}},React.createElement(View,{style:{flex:1,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:25,textAlign:'center'}},time)),React.createElement(View,{style:{flex:2,justifyContent:'center',alignItems:'center'}},React.createElement(Image,{source:_this3.props.class.students[student_id].profile_picture===''?require(\"../../../assets/icon-thumbnail.png\"):{uri:students[student_id].profile_picture},style:styles.thumbnailImage})),React.createElement(View,{style:{flex:1,justifyContent:'center'}},React.createElement(Text,{style:{fontSize:25,textAlign:'center'}},students[student_id].name))));})))));}}]);return TeacherMedicineLog;}(React.Component);var styles=StyleSheet.create({cardContainer:{width:170,paddingRight:5},thumbnailImage:{height:110,width:110,borderRadius:55}});var mapStateToProps=function mapStateToProps(state){return{class:state.classInfo,requests:state.medicationrequests};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({initializeRequests:initializeRequests,fillMedRequest:fillMedRequest},dispatch));};export default connect(mapStateToProps,mapDispatchToProps)(TeacherMedicineLog);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/medicinelog.js"],"names":["React","Card","Toast","connect","MedRequestModal","bindActionCreators","initializeRequests","fillMedRequest","Reloading","formatHourMinute","LoginNumberPad","TeacherMedicineLog","props","state","isLoading","refreshing","selected_request_id","showLoginNumberPad","handleShowRequest","bind","handleFulfillRequest","request_id","route","params","setState","passcode","teacher_id","class","passcodeTeacherId","undefined","Alert","alert","text","student_id","requests","isConnected","show","buttonText","position","type","duration","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","statusCode","message","data","navigation","goBack","catch","err","students","current_request","flex","handleEnterPasscode","hideLoginPad","padding","backgroundColor","fetchFromDB","profile_picture","name","Object","keys","map","timestamp","administered","time","Date","styles","cardContainer","justifyContent","fontSize","textAlign","alignItems","require","uri","thumbnailImage","Component","StyleSheet","create","width","paddingRight","height","borderRadius","mapStateToProps","classInfo","medicationrequests","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, RefreshControl, StyleSheet, Image, TouchableHighlight, ScrollView, Alert } from 'react-native'\nimport { Card, Toast } from 'native-base'\nimport { connect } from 'react-redux'\nimport MedRequestModal from './medrequestmodal'\nimport { bindActionCreators } from 'redux';\nimport { initializeRequests, fillMedRequest } from '../../../redux/school/actions/index' \nimport Reloading from '../../reloading'\nimport { formatHourMinute } from '../../util'\nimport LoginNumberPad from '../loginnumberpad'\n\nclass TeacherMedicineLog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            refreshing: false,\n            selected_request_id: '',\n            showLoginNumberPad: false\n        }\n        this.handleShowRequest = this.handleShowRequest.bind(this)\n        this.handleFulfillRequest = this.handleFulfillRequest.bind(this)\n    }\n\n    componentDidMount() {\n        // if not loaded, we fetch else do nothing(teacher can fetch new requests by refreshing page)\n        const { request_id } = this.props.route.params\n        if (request_id === null) {\n            this.setState({\n                isLoading: false\n            })\n            return\n        }\n        this.handleShowRequest(request_id)\n    }\n\n    handleShowRequest(request_id) {\n        this.setState({\n            selected_request_id: request_id,\n            isLoading: false\n        })\n    }\n\n    handleEnterPasscode(passcode) {\n        const teacher_id = this.props.class.passcodeTeacherId[passcode]\n        if (teacher_id === undefined) {\n            Alert.alert(\n                'Wrong password',\n                'Please try again',\n                [{text: 'OK'}]\n            )\n        } else {\n            this.setState({ showLoginNumberPad: false })\n            this.handleFulfillRequest(teacher_id)\n        }\n    }\n    \n    hideLoginPad() {\n        this.setState({\n            showLoginNumberPad: false\n        })\n    }\n\n    handleFulfillRequest(teacher_id) {\n        const { selected_request_id } = this.state\n        // console.log(this.props.requests)\n        const { student_id } = this.props.requests.requests[selected_request_id]\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/medicationrequest', {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                request_id: selected_request_id,\n                teacher_id,\n                student_id\n            })\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const { statusCode, message, data } = resJson\n                if (statusCode > 200 || message === 'Internal server error') {\n                    Alert.alert(\n                        'Error, please try again',\n                        message,\n                        [{text: 'OK'}]\n                    )\n                    return\n                }\n                this.props.fillMedRequest(selected_request_id)\n                this.props.navigation.goBack()\n            })\n            .catch(err => {\n                Alert.alert(\n                    'Error, please try again',\n                    err.message,\n                    [{text: 'OK'}]\n                )\n            })\n    }\n\n    render() {\n        const { selected_request_id, isLoading, showLoginNumberPad } = this.state\n        if (isLoading) {\n            return (\n                <Reloading />\n            )\n        }\n        const { requests } = this.props.requests\n        const { students } = this.props.class\n        const current_request = requests[selected_request_id]\n        // console.log('current_request: ', current_request)\n        // const { administered, fever_entry, medication, note, student_id, teacher_id, timestamp } = current_request\n        return (\n            <View style={{ flex: 1 }}>\n                {showLoginNumberPad ? \n                    <LoginNumberPad\n                        handleEnterPasscode={(passcode) => this.handleEnterPasscode(passcode)}\n                        hideLoginPad={this.hideLoginPad}\n                    /> : null\n                }\n                <ScrollView\n                    contentContainerStyle={{ flex: 1, padding: 10 }}\n                    refreshControl={\n                        <RefreshControl\n                            style={{backgroundColor: '#E0FFFF'}}\n                            refreshing={this.state.refreshing}\n                            onRefresh={this.fetchFromDB}\n                            tintColor=\"#ff0000\"\n                            title=\"Loading...\"\n                            titleColor=\"#00ff00\"\n                            colors={['#ff0000', '#00ff00', '#0000ff']}\n                            progressBackgroundColor=\"#ffff00\"\n                        />\n                    }\n                >\n                    <View style={{ flex: 3 }}>\n                        {selected_request_id === '' ?\n                            null\n                        :   \n                            <MedRequestModal\n                                thumbnail={students[current_request.student_id].profile_picture}\n                                student_name={students[current_request.student_id].name}\n                                request={current_request}\n                                showLoginNumberPad={() => this.setState({ showLoginNumberPad: true })}\n                            />\n                        }\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <ScrollView horizontal={true}>\n                            {Object.keys(requests).map((request_id) => {\n                                const { student_id } = requests[request_id]\n                                const { timestamp, administered } = requests[request_id]\n                                const time = formatHourMinute(new Date(timestamp))\n                                return (\n                                    <TouchableHighlight\n                                        key={request_id}\n                                        style={styles.cardContainer}\n                                        underlayColor='transparent'\n                                        onPress={() => this.handleShowRequest(request_id)}\n                                    >\n                                        <Card \n                                            style={{ \n                                                flex: 1,\n                                                backgroundColor: administered ? '#dcf3d0' : '#ffe1d0'\n                                            }}\n                                        >\n                                            <View\n                                                style={{ flex: 1, justifyContent: 'center' }}\n                                            >\n                                                <Text style={{ fontSize: 25, textAlign: 'center' }}>{time}</Text>\n                                            </View>\n                                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>\n                                                <Image\n                                                    source={\n                                                        this.props.class.students[student_id].profile_picture === '' ?\n                                                            require('../../../assets/icon-thumbnail.png')\n                                                        : { uri: students[student_id].profile_picture }}\n                                                    style={styles.thumbnailImage}\n                                                />\n                                            </View>\n                                            <View\n                                                style={{ flex: 1, justifyContent: 'center' }}\n                                            >\n                                                <Text style={{ fontSize: 25, textAlign: 'center' }}>{students[student_id].name}</Text>\n                                            </View>\n                                        </Card>\n                                    </TouchableHighlight>\n                                )\n                            })}\n                        </ScrollView>\n                    </View>\n                </ScrollView>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    cardContainer: {\n        width: 170,\n        // backgroundColor: 'transparent',\n        paddingRight: 5\n    },\n    thumbnailImage: {\n        height: 110,\n        width: 110,\n        borderRadius: 55\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        class: state.classInfo,\n        requests: state.medicationrequests\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({ initializeRequests, fillMedRequest }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TeacherMedicineLog)"]},"metadata":{},"sourceType":"module"}