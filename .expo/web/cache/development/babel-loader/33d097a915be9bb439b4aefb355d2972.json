{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function water() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    byId: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INITIALIZE_CLASS':\n      var students = {};\n      action.students.forEach(function (student) {\n        students[student[0]] = [];\n      });\n      return {\n        byId: students\n      };\n\n    case 'ADD_WATER_RECORD':\n      if (!state.byId[action.student_id].includes(action.time)) {\n        state.byId[action.student_id].push(action.time);\n      }\n\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/school/reducers/water.js"],"names":["water","state","byId","action","type","students","forEach","student","student_id","includes","time","push"],"mappings":";;;;;;AAAA,eAAe,SAASA,KAAT,GAIJ;AAAA,MAJmBC,KAInB,uEAJ2B;AAClCC,IAAAA,IAAI,EAAE;AAD4B,GAI3B;AAAA,MAARC,MAAQ;;AACP,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,UAAIC,QAAQ,GAAG,EAAf;AACAF,MAAAA,MAAM,CAACE,QAAP,CAAgBC,OAAhB,CAAwB,UAAAC,OAAO,EAAI;AAC/BF,QAAAA,QAAQ,CAACE,OAAO,CAAC,CAAD,CAAR,CAAR,GAAuB,EAAvB;AACH,OAFD;AAGA,aAAO;AACHL,QAAAA,IAAI,EAAEG;AADH,OAAP;;AAIJ,SAAK,kBAAL;AAMI,UAAI,CAACJ,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACK,UAAlB,EAA8BC,QAA9B,CAAuCN,MAAM,CAACO,IAA9C,CAAL,EAA0D;AACtDT,QAAAA,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACK,UAAlB,EAA8BG,IAA9B,CAAmCR,MAAM,CAACO,IAA1C;AACH;;AACD,+BACOT,KADP;;AAGJ;AACI,aAAOA,KAAP;AAvBR;AAyBH","sourcesContent":["export default function water(state = {\n    byId: {\n\n    }\n}, action) {\n    switch (action.type) {\n        case 'INITIALIZE_CLASS':\n            var students = {}\n            action.students.forEach(student => {\n                students[student[0]] = []\n            })\n            return {\n                byId: students\n            }\n        \n        case 'ADD_WATER_RECORD':\n            // const d = action.date\n            // time = d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds()\n            // action.student_id_list.forEach(id => {\n            //     state.byId[id].push(time)\n            // })\n            if (!state.byId[action.student_id].includes(action.time)) {\n                state.byId[action.student_id].push(action.time)\n            }\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}