{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var initial_state={by_student_id:{},records:{by_id:{},all_id:new Set()},errorMessage:'',newDataForCreate:new Set(),oldDataForEdit:new Set(),records_with_error:new Set()};export default function sleep(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initial_state;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'INITIALIZE_CLASS':by_student_id={};action.students.forEach(function(student){var id=student.id;by_student_id[id]=[];});return _objectSpread(_objectSpread({},state),{},{by_student_id:by_student_id});case'FETCH_CLASS_SLEEP_DATA':{var _action$sleepData=action.sleepData,_by_student_id=_action$sleepData.by_student_id,records=_action$sleepData.records;return _objectSpread(_objectSpread({},state),{},{by_student_id:_objectSpread(_objectSpread({},state.by_student_id),_by_student_id),records:{by_id:_objectSpread(_objectSpread({},state.records.by_id),records.by_id),all_id:new Set([].concat(_toConsumableArray(state.records.all_id),_toConsumableArray(records.all_id)))}});}case'SET_SLEEP_TIME':{var newState=_objectSpread({},state);var student_id=action.student_id,index=action.index,sleep_time=action.sleep_time,teacher_id=action.teacher_id;var record_id_array=newState.by_student_id[student_id];var record_id=record_id_array[index];var _records=newState.records.by_id;sleep_time.setSeconds(0,0);if(index!==null){if(index>0&&sleep_time<=_records[record_id_array[index-1]].sleep_time){var _record_id_array=newState.by_student_id[student_id];var removed=_record_id_array.splice(index,1);var found=0;for(var i=0;i<_record_id_array.length-1;i++){if(_records[_record_id_array[i]].sleep_time>sleep_time){found=i;break;}}_record_id_array.splice(found,0,removed[0]);newState.by_student_id[student_id]=_record_id_array;}newState.records.by_id[record_id].sleep_time=sleep_time;newState.records.by_id[record_id].teacher_id=teacher_id;if(!newState.newDataForCreate.has(record_id)){newState.oldDataForEdit.add(record_id);}}else{var new_record_id=newState.records.all_id.size;newState.by_student_id[student_id].push(new_record_id);newState.records.by_id[new_record_id]={student_id:student_id,sleep_time:sleep_time,wake_time:null,teacher_id:teacher_id};newState.records.all_id.add(new_record_id);newState.errorMessage='';newState.newDataForCreate.add(new_record_id);}return newState;}case'SET_WAKE_TIME':{var _newState=_objectSpread({},state);var _student_id=action.student_id,_index=action.index,wake_time=action.wake_time,_teacher_id=action.teacher_id;var _record_id=_newState.by_student_id[_student_id][_index];wake_time.setSeconds(0,0);_newState.records.by_id[_record_id].wake_time=wake_time;_newState.records.by_id[_record_id].teacher_id=_teacher_id;_newState.errorMessage='';if(!_newState.newDataForCreate.has(_record_id)){_newState.oldDataForEdit.add(_record_id);}return _newState;}case'REMOVE_WAKE_TIME':{var _record_id2=action.record_id,_teacher_id2=action.teacher_id;var _newState2=_objectSpread({},state);var records_with_error=new Set(_toConsumableArray(state.records_with_error));records_with_error.delete(_record_id2);_newState2.records_with_error=records_with_error;_newState2.records.by_id[_record_id2].wake_time=null;_newState2.records.by_id[_record_id2].teacher_id=_teacher_id2;if(!_newState2.newDataForCreate.has(_record_id2)){_newState2.oldDataForEdit.add(_record_id2);}return _newState2;}case'CREATE_SLEEP_RECORD_SUCCESS':{return _objectSpread(_objectSpread({},state),{},{newDataForCreate:new Set()});}case'CREATE_SLEEP_RECORD_FAIL':{return _objectSpread(_objectSpread({},state),{},{errorMessage:action.errMessage});}case'EDIT_SLEEP_RECORD_SUCCESS':{return _objectSpread(_objectSpread({},state),{},{oldDataForEdit:new Set()});}case'EDIT_SLEEP_RECORD_FAIL':{return _objectSpread(_objectSpread({},state),{},{errorMessage:action.errMessage});}case'REMOVE_RECORD_SUCCESS':{var _record_id3=action.record_id,_student_id2=action.student_id;var student_record_ids=state.by_student_id[_student_id2];var removing_index=student_record_ids.findIndex(function(element){return element===_record_id3;});var newDataForCreate=new Set(_toConsumableArray(state.newDataForCreate));newDataForCreate.delete(_record_id3);var oldDataForEdit=new Set(_toConsumableArray(state.oldDataForEdit));oldDataForEdit.delete(_record_id3);return _objectSpread(_objectSpread({},state),{},{by_student_id:_objectSpread(_objectSpread({},state.by_student_id),{},_defineProperty({},_student_id2,[].concat(_toConsumableArray(student_record_ids.slice(0,removing_index)),_toConsumableArray(student_record_ids.slice(removing_index+1))))),newDataForCreate:newDataForCreate,oldDataForEdit:oldDataForEdit});}case'REMOVE_RECORD_FAIL':{return _objectSpread(_objectSpread({},state),{},{errorMessage:action.errorMessage});}case'MARK_RECORD_ERROR':{var _record_id_array2=action.record_id_array;return _objectSpread(_objectSpread({},state),{},{records_with_error:new Set([].concat(_toConsumableArray(state.records_with_error),_toConsumableArray(_record_id_array2)))});}case'MARK_RECORD_CORRECT':{var _record_id4=action.record_id;var _records_with_error=new Set(_toConsumableArray(state.records_with_error));_records_with_error.delete(_record_id4);return _objectSpread(_objectSpread({},state),{},{records_with_error:_records_with_error});}case'ALERT_SLEEPLOG_ERROR_MESSAGE':{var err_message=action.err_message;return _objectSpread(_objectSpread({},state),{},{errorMessage:err_message});}case'CLEAR_SLEEPLOG_ERROR_MESSAGE':{return _objectSpread(_objectSpread({},state),{},{errorMessage:''});}case'CLEAR_STATE':return{by_student_id:{},records:{by_id:{},all_id:new Set()},errorMessage:'',newDataForCreate:new Set(),oldDataForEdit:new Set(),records_with_error:new Set()};default:return state;}}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/school/reducers/sleep.js"],"names":["initial_state","by_student_id","records","by_id","all_id","Set","errorMessage","newDataForCreate","oldDataForEdit","records_with_error","sleep","state","action","type","students","forEach","student","id","sleepData","newState","student_id","index","sleep_time","teacher_id","record_id_array","record_id","setSeconds","removed","splice","found","i","length","has","add","new_record_id","size","push","wake_time","delete","errMessage","student_record_ids","removing_index","findIndex","element","slice","err_message"],"mappings":"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","sourcesContent":["var initial_state = {\n    by_student_id: {\n        /*\n        {student_id}: [{record_id}, {...}]\n        */\n    },\n    records: {\n        by_id: {\n            // { record_id }: {\n            //     student_id: '',\n            //     sleep_time: '',\n            //     wake_time: '',\n            //     teacher_id: ''\n            // }\n        },\n        all_id: new Set()\n    },\n    errorMessage: '',\n    newDataForCreate: new Set(),\n    oldDataForEdit: new Set(),\n    records_with_error: new Set()\n}\n\nexport default function sleep(state = initial_state, action) {\n    switch (action.type) {\n        case 'INITIALIZE_CLASS':\n            by_student_id = {}\n            action.students.forEach(student => {\n                const { id } = student\n                by_student_id[id] = []\n            })\n            return {\n                ...state,\n                by_student_id\n            }\n\n        case 'FETCH_CLASS_SLEEP_DATA': {\n            const { by_student_id, records } = action.sleepData\n            return {\n                ...state,\n                by_student_id: {\n                    ...state.by_student_id,\n                    ...by_student_id\n                },\n                records: {\n                    by_id: {\n                        ...state.records.by_id,\n                        ...records.by_id\n                    },\n                    all_id: new Set([\n                        ...state.records.all_id,\n                        ...records.all_id\n                    ])\n                }\n            }\n        }\n\n        case 'SET_SLEEP_TIME': {\n            const newState = { ...state }\n            const { student_id, index, sleep_time, teacher_id } = action\n            const record_id_array = newState.by_student_id[student_id]\n            const record_id = record_id_array[index]\n            const records = newState.records.by_id\n            sleep_time.setSeconds(0, 0)\n            if (index !== null) { // if index is specified, we change data\n                if (index > 0 && sleep_time <= records[record_id_array[index - 1]].sleep_time) {\n                    const record_id_array = newState.by_student_id[student_id]\n                    const removed = record_id_array.splice(index, 1)\n                    let found = 0\n                    for(var i = 0; i < record_id_array.length-1; i++) {\n                        if (records[record_id_array[i]].sleep_time > sleep_time) {\n                            found = i // index of record\n                            break\n                        }\n                    }\n                    record_id_array.splice(found, 0, removed[0])\n                    newState.by_student_id[student_id] = record_id_array\n                }\n\n                newState.records.by_id[record_id].sleep_time = sleep_time\n                newState.records.by_id[record_id].teacher_id = teacher_id\n                \n                if (!newState.newDataForCreate.has(record_id)) {\n                    newState.oldDataForEdit.add(record_id)\n                }\n            } else { // if index not specified, we push new data\n                // const record_length = record_id_array.length\n                const new_record_id = newState.records.all_id.size\n\n                // if (record_length > 0 && sleep_time <= records[record_id_array[record_length - 1]].wake_time) {\n                //     //if sleep_time <= wake time of last record\n                //     // WARNING!!!!\n                //     newState.records_with_error = new Set([...state.records_with_error, new_record_id, record_length - 1])\n                // } \n                    newState.by_student_id[student_id].push(new_record_id)\n                    newState.records.by_id[new_record_id] = {\n                        student_id,\n                        sleep_time,\n                        wake_time: null,\n                        teacher_id\n                    }\n                    newState.records.all_id.add(new_record_id)\n                    newState.errorMessage = ''\n                    newState.newDataForCreate.add(new_record_id)\n                // }\n\n            }\n            return newState\n        }\n\n        case 'SET_WAKE_TIME': {\n            const newState = { ...state }\n            const { student_id, index, wake_time, teacher_id } = action\n            const record_id = newState.by_student_id[student_id][index]\n            // const next_record_id = index + 1 < newState.by_student_id[student_id].length ?\n            //     newState.by_student_id[student_id][index + 1]\n            //     : -1\n            // const records = newState.records.by_id\n            wake_time.setSeconds(0,0)\n\n            newState.records.by_id[record_id].wake_time = wake_time\n            newState.records.by_id[record_id].teacher_id = teacher_id\n            newState.errorMessage = ''\n            if (!newState.newDataForCreate.has(record_id)) {\n                newState.oldDataForEdit.add(record_id)\n            }\n\n            return newState\n        }\n            \n        case 'REMOVE_WAKE_TIME': {\n            const { record_id, teacher_id } = action\n            const newState = { ...state }\n            const records_with_error = new Set([...state.records_with_error])\n            records_with_error.delete(record_id)\n            newState.records_with_error = records_with_error\n            newState.records.by_id[record_id].wake_time = null\n            newState.records.by_id[record_id].teacher_id = teacher_id\n            if (!newState.newDataForCreate.has(record_id)) {\n                newState.oldDataForEdit.add(record_id)\n            }\n            return newState\n        }\n        \n        case 'CREATE_SLEEP_RECORD_SUCCESS': {\n            return {\n                ...state,\n                newDataForCreate: new Set()\n            }\n        }\n\n        case 'CREATE_SLEEP_RECORD_FAIL': {\n            return {\n                ...state,\n                errorMessage: action.errMessage\n            }\n        }\n\n        case 'EDIT_SLEEP_RECORD_SUCCESS': {\n            return {\n                ...state,\n                oldDataForEdit: new Set()\n            }\n        }\n\n        case 'EDIT_SLEEP_RECORD_FAIL': {\n            return {\n                ...state,\n                errorMessage: action.errMessage\n            }\n        }\n\n        case 'REMOVE_RECORD_SUCCESS': {\n            const { record_id, student_id } = action\n            const student_record_ids = state.by_student_id[student_id]\n            const removing_index = student_record_ids.findIndex(element => element === record_id)\n\n            const newDataForCreate = new Set([...state.newDataForCreate])\n            newDataForCreate.delete(record_id)\n\n            const oldDataForEdit = new Set([...state.oldDataForEdit])\n            oldDataForEdit.delete(record_id)\n            return {\n                ...state,\n                by_student_id: {\n                    ...state.by_student_id,\n                    [student_id]: [\n                        ...student_record_ids.slice(0, removing_index),\n                        ...student_record_ids.slice(removing_index+1)\n                    ]\n                },\n                newDataForCreate,\n                oldDataForEdit\n            }\n        }\n\n        case 'REMOVE_RECORD_FAIL': {\n            return {\n                ...state,\n                errorMessage: action.errorMessage\n            }\n        }\n\n        case 'MARK_RECORD_ERROR': {\n            const { record_id_array } = action\n            return {\n                ...state,\n                records_with_error: new Set([...state.records_with_error, ...record_id_array])\n\n            }\n        }\n\n        case 'MARK_RECORD_CORRECT': {\n            const { record_id } = action\n            let records_with_error = new Set([...state.records_with_error])\n            records_with_error.delete(record_id)\n            return {\n                ...state,\n                records_with_error\n            }\n        }\n            \n        case 'ALERT_SLEEPLOG_ERROR_MESSAGE': {\n            const {err_message} = action\n            return {\n                ...state,\n                errorMessage: err_message\n            }\n        }\n            \n        case 'CLEAR_SLEEPLOG_ERROR_MESSAGE': {\n            return {\n                ...state,\n                errorMessage: ''\n            }\n        }\n\n        case 'CLEAR_STATE':\n            return {\n                by_student_id: {},\n                records: {\n                    by_id: {},\n                    all_id: new Set()\n                },\n                errorMessage: '',\n                newDataForCreate: new Set(),\n                oldDataForEdit: new Set(),\n                records_with_error: new Set()\n            }\n        \n        default:\n            return state \n    }\n}"]},"metadata":{},"sourceType":"module"}