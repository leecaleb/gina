{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import DatePicker from'react-datepicker';import\"react-datepicker/dist/react-datepicker.css\";var _Dimensions$get=Dimensions.get('window'),width=_Dimensions$get.width;var TimeModal=function(_React$Component){_inherits(TimeModal,_React$Component);var _super=_createSuper(TimeModal);function TimeModal(props){var _this;_classCallCheck(this,TimeModal);_this=_super.call(this,props);_this.onChange=function(date){console.log(date);};_this.isWeekday=function(date){var special_date=new Date('June 20, 2020');var day=date.getDay();return day!==0&&day!==6||date.toDateString()===special_date.toDateString();};_this.state={datetime:new Date(),isLoading:true};return _this;}_createClass(TimeModal,[{key:\"componentDidMount\",value:function componentDidMount(){var start_date=this.props.start_date;this.setState({datetime:start_date,isLoading:false});}},{key:\"isIOS\",value:function isIOS(){if(Platform.OS==='ios'){return true;}else return false;}},{key:\"setDate\",value:function setDate(datetime){if(this.isIOS()){this.iosSetDate(datetime);}else{this.androidSetDate(datetime);}}},{key:\"iosSetDate\",value:function iosSetDate(datetime){this.setState({datetime:datetime});}},{key:\"androidSetDate\",value:function androidSetDate(datetime){if(datetime!==undefined){this.props.selectDatetimeConfirm(datetime);}else{this.props.hideModal();}}},{key:\"selectDatetimeConfirm\",value:function selectDatetimeConfirm(date){this.props.selectDatetimeConfirm(date);this.props.hideModal();}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,datetime_type=_this$props.datetime_type,minDatetime=_this$props.minDatetime,maxDatetime=_this$props.maxDatetime,minTime=_this$props.minTime,maxTime=_this$props.maxTime,paddingVertical=_this$props.paddingVertical;var _this$state=this.state,datetime=_this$state.datetime,isLoading=_this$state.isLoading;if(isLoading){return null;}return React.createElement(TouchableHighlight,{style:{width:'100%',height:'100%',zIndex:2,position:'absolute',paddingVertical:paddingVertical,alignItems:'center',backgroundColor:'rgba(0,0,0,0.7)'}},React.createElement(View,{style:{}},datetime_type==='date'&&React.createElement(DatePicker,{onChange:function onChange(date){return _this2.selectDatetimeConfirm(date);},inline:true,selected:datetime,minDate:new Date(minDatetime),maxDate:new Date(maxDatetime),onClickOutside:function onClickOutside(){return _this2.props.hideModal();},filterDate:this.isWeekday}),datetime_type==='time'&&React.createElement(DatePicker,{onChange:function onChange(time){return _this2.selectDatetimeConfirm(time);},showTimeSelect:true,showTimeSelectOnly:true,timeIntervals:30,timeCaption:\"Time\",dateFormat:\"h:mm aa\",selected:datetime,minTime:minTime,maxTime:maxTime,onClickOutside:function onClickOutside(){return _this2.props.hideModal();}})));}}]);return TimeModal;}(React.Component);export{TimeModal as default};","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/timemodal.js"],"names":["React","DatePicker","Dimensions","get","width","TimeModal","props","onChange","date","console","log","isWeekday","special_date","Date","day","getDay","toDateString","state","datetime","isLoading","start_date","setState","Platform","OS","isIOS","iosSetDate","androidSetDate","undefined","selectDatetimeConfirm","hideModal","datetime_type","minDatetime","maxDatetime","minTime","maxTime","paddingVertical","height","zIndex","position","alignItems","backgroundColor","time","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { \n    View, \n    Text,\n    TouchableHighlight,\n    Dimensions,\n    Platform } from 'react-native'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst { width } = Dimensions.get('window')\n\nexport default class TimeModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datetime: new Date(),\n            isLoading: true\n            // max_date: (new Date()).setDate((new Date()).getDate() + 7)\n        }\n    }\n\n    componentDidMount() {\n        const { start_date } = this.props\n        this.setState({\n            datetime: start_date,\n            isLoading: false\n        })\n    }\n\n    isIOS() {\n        if (Platform.OS === 'ios') {\n          return true\n        } else return false\n      }\n\n    setDate(datetime) {\n        if (this.isIOS()) {\n            this.iosSetDate(datetime)\n        } else {\n            this.androidSetDate(datetime)\n        }\n        // if (datetime !== undefined) {\n        //     this.setState({datetime})\n        // } else {\n        //     this.props.hideModal()\n        // }\n    }\n\n    iosSetDate(datetime) {\n        this.setState({datetime})\n    }\n\n    androidSetDate(datetime) {\n        if (datetime !== undefined) {\n            this.props.selectDatetimeConfirm(datetime)\n        //     this.props.hideModal()\n        } else {\n            this.props.hideModal()\n        }\n        // this.props.hideModal()\n    }\n\n    selectDatetimeConfirm(date) {\n        // const { datetime } = this.state\n        this.props.selectDatetimeConfirm(date)\n        this.props.hideModal()\n    }\n\n    onChange = date => {\n        console.log(date)\n    }\n    \n    isWeekday = date => {\n        const special_date = new Date('June 20, 2020')\n        const day = date.getDay()\n        return (day !== 0 && day !== 6) || date.toDateString() === special_date.toDateString();\n    };\n\n    render() {\n        const { datetime_type, minDatetime, maxDatetime, minTime, maxTime, paddingVertical } = this.props\n        const { datetime, isLoading } = this.state\n        if (isLoading) {\n            return null\n        }\n        return (\n            <TouchableHighlight\n                style={{ \n                    width: '100%',\n                    height: '100%', \n                    zIndex: 2,\n                    position: 'absolute',\n                    paddingVertical,\n                    // justifyContent: 'center', \n                    alignItems: 'center', \n                    backgroundColor: 'rgba(0,0,0,0.7)' \n                }}\n                // onPress={() => this.props.hideModal()}\n            >\n                <View style={{ }}>\n                    {datetime_type === 'date' &&\n                        <DatePicker\n                            onChange={(date) => this.selectDatetimeConfirm(date)}\n                            inline\n                            selected={datetime}\n                            minDate={new Date(minDatetime)}\n                            maxDate={new Date(maxDatetime)}\n                            onClickOutside={() => this.props.hideModal()}\n                            filterDate={this.isWeekday}\n                        />\n                    }\n\n                    {datetime_type === 'time' && \n                        <DatePicker\n                            onChange={(time) => this.selectDatetimeConfirm(time)}\n                            showTimeSelect\n                            showTimeSelectOnly\n                            timeIntervals={30}\n                            timeCaption=\"Time\"\n                            dateFormat=\"h:mm aa\"\n                            selected={datetime}\n                            minTime={minTime}\n                            maxTime={maxTime}\n                            onClickOutside={() => this.props.hideModal()}\n                        />\n                    }\n                </View>\n            </TouchableHighlight>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}