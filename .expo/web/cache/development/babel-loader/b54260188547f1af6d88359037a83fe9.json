{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/qrpage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport QRCode from 'react-native-qrcode-svg';\nimport Reloading from \"../reloading\";\nimport { get } from \"../util\";\nimport { connect } from 'react-redux';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar QRPage = function (_React$Component) {\n  _inherits(QRPage, _React$Component);\n\n  var _super = _createSuper(QRPage);\n\n  function QRPage(props) {\n    var _this;\n\n    _classCallCheck(this, QRPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      data: ''\n    };\n    return _this;\n  }\n\n  _createClass(QRPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props, parent_id, isConnected, response, success, statusCode, message, data;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = this.props, parent_id = _this$props.parent_id, isConnected = _this$props.isConnected;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(get(\"/user/\" + parent_id + \"/qrcode\"));\n\n            case 3:\n              response = _context.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (isConnected) {\n                _context.next = 8;\n                break;\n              }\n\n              alert('網路連不到! 請稍後再試試看');\n              return _context.abrupt(\"return\");\n\n            case 8:\n              if (success) {\n                _context.next = 11;\n                break;\n              }\n\n              alert(\"Sorry \\u53D6\\u5F97\\u5BB6\\u9577QR Code\\u6642\\u96FB\\u8166\\u51FA\\u72C0\\u6CC1\\u4E86\\uFF01\\u8ACB\\u622A\\u5716\\u548C\\u8207\\u5DE5\\u7A0B\\u5E2B\\u806F\\u7E6B\\n\\n\" + message);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              this.setState({\n                isLoading: false,\n                data: data\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          height: height,\n          zIndex: 2,\n          width: '100%',\n          position: 'absolute',\n          backgroundColor: 'white',\n          justifyContent: 'space-evenly',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, this.state.isLoading ? React.createElement(Reloading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }) : React.createElement(QRCode, {\n        value: this.state.data,\n        size: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 32\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          padding: 15,\n          backgroundColor: '#b5e9e9'\n        },\n        onPress: function onPress() {\n          return _this2.props.hideQRCode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \"\\u8FD4\\u56DE\")))));\n    }\n  }]);\n\n  return QRPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isConnected: state.parent.isConnected\n  };\n};\n\nexport default connect(mapStateToProps)(QRPage);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/qrpage.js"],"names":["React","QRCode","Reloading","get","connect","Dimensions","width","height","QRPage","props","state","isLoading","data","parent_id","isConnected","response","success","statusCode","message","alert","setState","zIndex","position","backgroundColor","justifyContent","alignItems","flex","padding","hideQRCode","fontSize","Component","mapStateToProps","parent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableHighlight, Alert, Dimensions } from 'react-native'\nimport QRCode from 'react-native-qrcode-svg'\nimport Reloading from '../reloading'\nimport { get } from '../util'\nimport { connect } from 'react-redux'\n\nconst { width, height } = Dimensions.get('window')\n\nclass QRPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            data: ''\n        }\n    }\n\n    async componentDidMount() {\n        const { parent_id, isConnected } = this.props\n        const response = await get(`/user/${parent_id}/qrcode`)\n        const { success, statusCode, message, data } = response\n\n        if (!isConnected) {\n            alert('網路連不到! 請稍後再試試看')\n            return\n        }\n\n        if (!success) {\n            alert(`Sorry 取得家長QR Code時電腦出狀況了！請截圖和與工程師聯繫\\n\\n` + message)\n            return \n        }\n\n        this.setState({\n            isLoading: false,\n            data\n        })\n    }\n    \n    render() {\n        return (\n            <View\n                style={{\n                    height,\n                    zIndex: 2,\n                    width: '100%',\n                    // height: '100%',\n                    position: 'absolute',\n                    backgroundColor: 'white',\n                    justifyContent: 'space-evenly',\n                    alignItems: 'center'\n                }}\n            >\n                <View style={{ flex: 1 }}>\n                    <View style={{ flex: 3, justifyContent: 'center', alignItems: 'center' }}>\n                        {this.state.isLoading ? \n                            <Reloading />\n                            :  <QRCode\n                                value={this.state.data}\n                                size={300}\n                                />\n                        }\n                    </View>\n                    <View style={{ flex: 1, alignItems: 'center' }}>\n                        <TouchableHighlight\n                            style={{ padding: 15, backgroundColor: '#b5e9e9' }}\n                            onPress={() => this.props.hideQRCode()}\n                        >\n                            <Text style={{ fontSize: 30 }}>返回</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isConnected: state.parent.isConnected\n    }\n}\n\nexport default connect(mapStateToProps) (QRPage)"]},"metadata":{},"sourceType":"module"}