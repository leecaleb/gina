{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var initialState={loaded:false,fruit_name:'水果',ratings:{},updatedStudents:new Set(),err_message:''};export default function appetite(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'INITIALIZE_CLASS':{var ratings={};action.students.forEach(function(student){var id=student.id;ratings[id]={Breakfast:'0',Fruit:'0',Lunch:'0',Snack:'0',teacher_id:''};});return _objectSpread(_objectSpread({},state),{},{ratings:ratings});}case'FETCH_CLASS_APPETITE_DATA':{var fruit_name=action.fruit_name,_ratings=action.ratings;return _objectSpread(_objectSpread({},state),{},{fruit_name:fruit_name,ratings:_objectSpread(_objectSpread({},state.ratings),_ratings)});}case'EDIT_FRUIT_NAME':{var _fruit_name=action.fruit_name;return _objectSpread(_objectSpread({},state),{},{fruit_name:_fruit_name});}case'RATE_APPETITE':{var _objectSpread2;var student_id=action.student_id,mealType=action.mealType,rating=action.rating,teacher_id=action.teacher_id;var updatedStudents=state.updatedStudents;var water_drank=state.ratings[student_id][mealType].slice(-1);if(rating!==''){updatedStudents=new Set([].concat(_toConsumableArray(state.updatedStudents),[student_id]));}return _objectSpread(_objectSpread({},state),{},{ratings:_objectSpread(_objectSpread({},state.ratings),{},_defineProperty({},student_id,_objectSpread(_objectSpread({},state.ratings[student_id]),{},(_objectSpread2={},_defineProperty(_objectSpread2,mealType,rating+water_drank),_defineProperty(_objectSpread2,\"teacher_id\",teacher_id),_objectSpread2)))),updatedStudents:updatedStudents});}case'CLEAR_RATINGS':{var meal_type=action.meal_type;var newState=_objectSpread({},state);var _student_id_array=Object.keys(state.ratings);var _updatedStudents=new Set();for(var i=0;i<_student_id_array.length;i++){var _student_id=_student_id_array[i];if(state.ratings[_student_id][meal_type]!=='0'){_updatedStudents.add(_student_id);}newState.ratings[_student_id]=_objectSpread(_objectSpread({},state.ratings[_student_id]),{},_defineProperty({},meal_type,'0'));}newState.updatedStudents=_updatedStudents;return newState;}case'SET_ALL_RATINGS_TO_GREAT':{var newRatingObj={};var student_id_array=[];Object.keys(state.ratings).map(function(student_id){var _objectSpread5;student_id_array.push(student_id);var water_drank=state.ratings[student_id][action.mealType].slice(-1)==='1';newRatingObj[student_id]=_objectSpread(_objectSpread({},state.ratings[student_id]),{},(_objectSpread5={},_defineProperty(_objectSpread5,action.mealType,water_drank?'Awesome1':'Awesome0'),_defineProperty(_objectSpread5,\"teacher_id\",action.teacher_id),_objectSpread5));});return _objectSpread(_objectSpread({},state),{},{ratings:newRatingObj,updatedStudents:new Set(student_id_array)});}case'MARK_WATER_DRANK':{var _objectSpread6;var _student_id2=action.student_id,_meal_type=action.meal_type,_teacher_id=action.teacher_id;var _updatedStudents2=new Set([].concat(_toConsumableArray(state.updatedStudents),[_student_id2]));var _rating=state.ratings[_student_id2][_meal_type];var _water_drank=_rating.slice(-1)==='1';return _objectSpread(_objectSpread({},state),{},{ratings:_objectSpread(_objectSpread({},state.ratings),{},_defineProperty({},_student_id2,_objectSpread(_objectSpread({},state.ratings[_student_id2]),{},(_objectSpread6={},_defineProperty(_objectSpread6,_meal_type,_water_drank?_rating.slice(0,-1)+'0':_rating.slice(0,-1)+'1'),_defineProperty(_objectSpread6,\"teacher_id\",_teacher_id),_objectSpread6)))),updatedStudents:_updatedStudents2});}case'CLEAR_UPDATED_STUDENTS':{return _objectSpread(_objectSpread({},state),{},{updatedStudents:new Set()});}case'ON_SEND_APPETITE_SUCCESS':{return _objectSpread(_objectSpread({},state),{},{updatedStudents:new Set()});}case'ALERT_ERR_MESSAGE':{var err_message=action.err_message;return _objectSpread(_objectSpread({},state),{},{err_message:err_message});}case'CLEAR_ERR_MESSAGE':{return _objectSpread(_objectSpread({},state),{},{err_message:''});}case'ADD_STUDENT_ID_FOR_UPDATE':{var _student_id_array2=action.student_id_array;return _objectSpread(_objectSpread({},state),{},{updatedStudents:new Set([].concat(_toConsumableArray(state.updatedStudents),_toConsumableArray(_student_id_array2)))});}case'CLEAR_STATE':{return{loaded:false,fruit_name:'水果',ratings:{},updatedStudents:new Set(),err_message:''};}default:return state;}}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/school/reducers/appetite.js"],"names":["initialState","loaded","fruit_name","ratings","updatedStudents","Set","err_message","appetite","state","action","type","students","forEach","student","id","Breakfast","Fruit","Lunch","Snack","teacher_id","student_id","mealType","rating","water_drank","slice","meal_type","newState","student_id_array","Object","keys","i","length","add","newRatingObj","map","push"],"mappings":"w6BAAA,GAAIA,CAAAA,YAAY,CAAG,CACfC,MAAM,CAAE,KADO,CAEfC,UAAU,CAAE,IAFG,CAGfC,OAAO,CAAE,EAHM,CAcfC,eAAe,CAAE,GAAIC,CAAAA,GAAJ,EAdF,CAefC,WAAW,CAAE,EAfE,CAAnB,CAkBA,cAAe,SAASC,CAAAA,QAAT,EAAgD,IAA9BC,CAAAA,KAA8B,2DAAtBR,YAAsB,IAARS,CAAAA,MAAQ,2CAC3D,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,kBAAL,CAAyB,CACrB,GAAIP,CAAAA,OAAO,CAAG,EAAd,CACAM,MAAM,CAACE,QAAP,CAAgBC,OAAhB,CAAwB,SAAAC,OAAO,CAAI,IACvBC,CAAAA,EADuB,CAChBD,OADgB,CACvBC,EADuB,CAE/BX,OAAO,CAACW,EAAD,CAAP,CAAc,CACVC,SAAS,CAAE,GADD,CAEVC,KAAK,CAAE,GAFG,CAGVC,KAAK,CAAE,GAHG,CAIVC,KAAK,CAAE,GAJG,CAKVC,UAAU,CAAE,EALF,CAAd,CAOH,CATD,EAWA,sCACOX,KADP,MAEIL,OAAO,CAAPA,OAFJ,GAIH,CACD,IAAK,2BAAL,CAAkC,IACtBD,CAAAA,UADsB,CACEO,MADF,CACtBP,UADsB,CACVC,QADU,CACEM,MADF,CACVN,OADU,CAE9B,sCACOK,KADP,MAEIN,UAAU,CAAVA,UAFJ,CAGIC,OAAO,gCACAK,KAAK,CAACL,OADN,EAEAA,QAFA,CAHX,GAQH,CAED,IAAK,iBAAL,CAAwB,IACZD,CAAAA,WADY,CACGO,MADH,CACZP,UADY,CAEpB,sCACOM,KADP,MAEIN,UAAU,CAAVA,WAFJ,GAKH,CAED,IAAK,eAAL,CAAqB,uBACTkB,CAAAA,UADS,CACoCX,MADpC,CACTW,UADS,CACGC,QADH,CACoCZ,MADpC,CACGY,QADH,CACaC,MADb,CACoCb,MADpC,CACaa,MADb,CACqBH,UADrB,CACoCV,MADpC,CACqBU,UADrB,IAEXf,CAAAA,eAFW,CAESI,KAFT,CAEXJ,eAFW,CAGjB,GAAMmB,CAAAA,WAAW,CAAGf,KAAK,CAACL,OAAN,CAAciB,UAAd,EAA0BC,QAA1B,EAAoCG,KAApC,CAA0C,CAAC,CAA3C,CAApB,CACA,GAAIF,MAAM,GAAK,EAAf,CAAmB,CACflB,eAAe,CAAG,GAAIC,CAAAA,GAAJ,8BAAYG,KAAK,CAACJ,eAAlB,GAAmCgB,UAAnC,GAAlB,CACH,CACD,sCACOZ,KADP,MAEIL,OAAO,gCACAK,KAAK,CAACL,OADN,wBAEFiB,UAFE,gCAGIZ,KAAK,CAACL,OAAN,CAAciB,UAAd,CAHJ,uDAIEC,QAJF,CAIaC,MAAM,CAAGC,WAJtB,8CAKCJ,UALD,oBAFX,CAUIf,eAAe,CAAfA,eAVJ,GAYH,CAED,IAAK,eAAL,CAAsB,IACVqB,CAAAA,SADU,CACIhB,MADJ,CACVgB,SADU,CAElB,GAAMC,CAAAA,QAAQ,kBAAQlB,KAAR,CAAd,CACA,GAAMmB,CAAAA,iBAAgB,CAAGC,MAAM,CAACC,IAAP,CAAYrB,KAAK,CAACL,OAAlB,CAAzB,CACA,GAAMC,CAAAA,gBAAe,CAAG,GAAIC,CAAAA,GAAJ,EAAxB,CACA,IAAK,GAAIyB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,iBAAgB,CAACI,MAArC,CAA6CD,CAAC,EAA9C,CAAkD,CAC9C,GAAMV,CAAAA,WAAU,CAAGO,iBAAgB,CAACG,CAAD,CAAnC,CACA,GAAItB,KAAK,CAACL,OAAN,CAAciB,WAAd,EAA0BK,SAA1B,IAAyC,GAA7C,CAAkD,CAC9CrB,gBAAe,CAAC4B,GAAhB,CAAoBZ,WAApB,EACH,CACDM,QAAQ,CAACvB,OAAT,CAAiBiB,WAAjB,iCACOZ,KAAK,CAACL,OAAN,CAAciB,WAAd,CADP,wBAEKK,SAFL,CAEiB,GAFjB,GAIH,CACDC,QAAQ,CAACtB,eAAT,CAA2BA,gBAA3B,CAEA,MAAOsB,CAAAA,QAAP,CACH,CACD,IAAK,0BAAL,CAAgC,CAC5B,GAAIO,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIN,CAAAA,gBAAgB,CAAG,EAAvB,CACAC,MAAM,CAACC,IAAP,CAAYrB,KAAK,CAACL,OAAlB,EAA2B+B,GAA3B,CAA+B,SAACd,UAAD,CAAgB,oBAC3CO,gBAAgB,CAACQ,IAAjB,CAAsBf,UAAtB,EACA,GAAMG,CAAAA,WAAW,CAAGf,KAAK,CAACL,OAAN,CAAciB,UAAd,EAA0BX,MAAM,CAACY,QAAjC,EAA2CG,KAA3C,CAAiD,CAAC,CAAlD,IAAyD,GAA7E,CACAS,YAAY,CAACb,UAAD,CAAZ,gCACOZ,KAAK,CAACL,OAAN,CAAciB,UAAd,CADP,uDAEKX,MAAM,CAACY,QAFZ,CAEuBE,WAAW,CAAG,UAAH,CAAgB,UAFlD,8CAGgBd,MAAM,CAACU,UAHvB,mBAKH,CARD,EASA,sCACOX,KADP,MAEIL,OAAO,CAAE8B,YAFb,CAGI7B,eAAe,CAAE,GAAIC,CAAAA,GAAJ,CAAQsB,gBAAR,CAHrB,GAKH,CAED,IAAK,kBAAL,CAAyB,uBACbP,CAAAA,YADa,CACyBX,MADzB,CACbW,UADa,CACDK,UADC,CACyBhB,MADzB,CACDgB,SADC,CACUN,WADV,CACyBV,MADzB,CACUU,UADV,CAErB,GAAMf,CAAAA,iBAAe,CAAG,GAAIC,CAAAA,GAAJ,8BAAYG,KAAK,CAACJ,eAAlB,GAAmCgB,YAAnC,GAAxB,CACA,GAAME,CAAAA,OAAM,CAAGd,KAAK,CAACL,OAAN,CAAciB,YAAd,EAA0BK,UAA1B,CAAf,CACA,GAAMF,CAAAA,YAAW,CAAGD,OAAM,CAACE,KAAP,CAAa,CAAC,CAAd,IAAqB,GAAzC,CACA,sCACOhB,KADP,MAEIL,OAAO,gCACAK,KAAK,CAACL,OADN,wBAEFiB,YAFE,gCAGIZ,KAAK,CAACL,OAAN,CAAciB,YAAd,CAHJ,uDAIEK,UAJF,CAIcF,YAAW,CAAGD,OAAM,CAACE,KAAP,CAAa,CAAb,CAAgB,CAAC,CAAjB,EAAsB,GAAzB,CAA+BF,OAAM,CAACE,KAAP,CAAa,CAAb,CAAgB,CAAC,CAAjB,EAAsB,GAJ9E,8CAKCL,WALD,oBAFX,CAUIf,eAAe,CAAfA,iBAVJ,GAYH,CACD,IAAK,wBAAL,CAA8B,CAC1B,sCACOI,KADP,MAEIJ,eAAe,CAAE,GAAIC,CAAAA,GAAJ,EAFrB,GAIH,CACD,IAAK,0BAAL,CAAgC,CAC5B,sCACOG,KADP,MAEIJ,eAAe,CAAE,GAAIC,CAAAA,GAAJ,EAFrB,GAIH,CACD,IAAK,mBAAL,CAA0B,IACdC,CAAAA,WADc,CACEG,MADF,CACdH,WADc,CAEtB,sCACOE,KADP,MAEIF,WAAW,CAAXA,WAFJ,GAIH,CAED,IAAK,mBAAL,CAA0B,CACtB,sCACOE,KADP,MAEIF,WAAW,CAAE,EAFjB,GAIH,CAED,IAAK,2BAAL,CAAkC,IACtBqB,CAAAA,kBADsB,CACDlB,MADC,CACtBkB,gBADsB,CAE9B,sCACOnB,KADP,MAEIJ,eAAe,CAAE,GAAIC,CAAAA,GAAJ,8BAAYG,KAAK,CAACJ,eAAlB,qBAAsCuB,kBAAtC,GAFrB,GAIH,CAED,IAAK,aAAL,CAAoB,CAChB,MAAO,CACH1B,MAAM,CAAE,KADL,CAEHC,UAAU,CAAE,IAFT,CAGHC,OAAO,CAAE,EAHN,CAIHC,eAAe,CAAE,GAAIC,CAAAA,GAAJ,EAJd,CAKHC,WAAW,CAAE,EALV,CAAP,CAOH,CACD,QACI,MAAOE,CAAAA,KAAP,CAlKR,CAoKH","sourcesContent":["var initialState = {\n    loaded: false,\n    fruit_name: '水果',\n    ratings: {\n        /*\n        {student_id}: { \n            Breakfast: 'Awesome0'\n            Fruit: '0'\n            Lunch: 'Good1',\n            Snack: 'Ok1',\n            teacher_id: ''\n        }, {...}\n        */\n    },\n    updatedStudents: new Set(),\n    err_message: ''\n}\n\nexport default function appetite(state = initialState, action) {\n    switch (action.type) {\n        case 'INITIALIZE_CLASS': {\n            var ratings = {}\n            action.students.forEach(student => {\n                const { id } = student\n                ratings[id] = {\n                    Breakfast: '0',\n                    Fruit: '0',\n                    Lunch: '0',\n                    Snack: '0',\n                    teacher_id: ''\n                }\n            })\n\n            return {\n                ...state,\n                ratings\n            }\n        }\n        case 'FETCH_CLASS_APPETITE_DATA': {\n            const { fruit_name, ratings } = action\n            return {\n                ...state,\n                fruit_name,\n                ratings: {\n                    ...state.ratings,\n                    ...ratings\n                }\n            }\n        }\n\n        case 'EDIT_FRUIT_NAME': {\n            const { fruit_name } = action\n            return {\n                ...state,\n                fruit_name,\n                // loaded: false\n            }\n        }\n\n        case 'RATE_APPETITE':{\n            const { student_id, mealType, rating, teacher_id } = action\n            var { updatedStudents } = state\n            const water_drank = state.ratings[student_id][mealType].slice(-1)\n            if (rating !== '') {\n                updatedStudents = new Set([...state.updatedStudents, student_id])\n            }\n            return {\n                ...state,\n                ratings: {\n                    ...state.ratings,\n                    [student_id]: {\n                        ...state.ratings[student_id],\n                        [mealType]: rating + water_drank,\n                        teacher_id\n                    }\n                },\n                updatedStudents\n            }\n        }\n        \n        case 'CLEAR_RATINGS': {\n            const { meal_type } = action\n            const newState = { ...state }\n            const student_id_array = Object.keys(state.ratings)\n            const updatedStudents = new Set()\n            for (var i = 0; i < student_id_array.length; i++) {\n                const student_id = student_id_array[i]\n                if (state.ratings[student_id][meal_type] !== '0') {\n                    updatedStudents.add(student_id)\n                }\n                newState.ratings[student_id] = {\n                    ...state.ratings[student_id],\n                    [meal_type]: '0'\n                }\n            }\n            newState.updatedStudents = updatedStudents\n\n            return newState\n        }\n        case 'SET_ALL_RATINGS_TO_GREAT':{\n            var newRatingObj = {}\n            var student_id_array = []\n            Object.keys(state.ratings).map((student_id) => {\n                student_id_array.push(student_id)\n                const water_drank = state.ratings[student_id][action.mealType].slice(-1) === '1'\n                newRatingObj[student_id] = {\n                    ...state.ratings[student_id],\n                    [action.mealType]: water_drank ? 'Awesome1' : 'Awesome0',\n                    teacher_id: action.teacher_id\n                }\n            })\n            return {\n                ...state,\n                ratings: newRatingObj,\n                updatedStudents: new Set(student_id_array)\n            }\n        }\n        \n        case 'MARK_WATER_DRANK': {\n            const { student_id, meal_type, teacher_id } = action\n            const updatedStudents = new Set([...state.updatedStudents, student_id])\n            const rating = state.ratings[student_id][meal_type]\n            const water_drank = rating.slice(-1) === '1'\n            return {\n                ...state,\n                ratings: {\n                    ...state.ratings,\n                    [student_id]: {\n                        ...state.ratings[student_id],\n                        [meal_type]: water_drank ? rating.slice(0, -1) + '0' : rating.slice(0, -1) + '1',\n                        teacher_id\n                    }\n                },\n                updatedStudents\n            }\n        }\n        case 'CLEAR_UPDATED_STUDENTS':{\n            return {\n                ...state,\n                updatedStudents: new Set()\n            }\n        }\n        case 'ON_SEND_APPETITE_SUCCESS':{\n            return {\n                ...state,\n                updatedStudents: new Set()\n            }\n        }    \n        case 'ALERT_ERR_MESSAGE': {\n            const { err_message } = action\n            return {\n                ...state,\n                err_message\n            }\n        }\n            \n        case 'CLEAR_ERR_MESSAGE': {\n            return {\n                ...state,\n                err_message: ''\n            }\n        }\n            \n        case 'ADD_STUDENT_ID_FOR_UPDATE': {\n            const { student_id_array } = action\n            return {\n                ...state,\n                updatedStudents: new Set([...state.updatedStudents, ...student_id_array])\n            }\n        }\n        \n        case 'CLEAR_STATE': {\n            return {\n                loaded: false,\n                fruit_name: '水果',\n                ratings: {},\n                updatedStudents: new Set(),\n                err_message: ''\n            }\n        }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}