{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/pickuprequest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { formatDate, formatTime } from \"../util\";\nimport ENV from \"../../variables\";\nimport { connect } from 'react-redux';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar PickupRequest = function (_React$Component) {\n  _inherits(PickupRequest, _React$Component);\n\n  var _super = _createSuper(PickupRequest);\n\n  function PickupRequest(props) {\n    var _this;\n\n    _classCallCheck(this, PickupRequest);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      time: null,\n      provided_times: ['5', '10', '15', '20', '25'],\n      colors: ['#ffe1d0', '#ffddb7', '#fff1b5', '#dcf3d0', '#b5e9e9'],\n      hightlighted_colors: ['#fa625f', '#ff8944', '#f4d41f', '#00c07f', '#368cbf'],\n      choose_other_option: false,\n      total_height: height - 55,\n      total_width: width\n    };\n    _this.sendRequest = _this.sendRequest.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PickupRequest, [{\n    key: \"onBlur\",\n    value: function onBlur() {\n      var _this$state = this.state,\n          time = _this$state.time,\n          choose_other_option = _this$state.choose_other_option,\n          provided_times = _this$state.provided_times;\n\n      if (choose_other_option && (time === '' || provided_times.includes(time))) {\n        this.setState({\n          choose_other_option: false\n        });\n      }\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest() {\n      var _this2 = this;\n\n      var isConnected = this.props.isConnected;\n\n      if (!isConnected) {\n        alert('網路連不到! 請稍後再試試看');\n        return;\n      }\n\n      var _this$props$route$par = this.props.route.params,\n          child_id = _this$props$route$par.child_id,\n          school_id = _this$props$route$par.school_id;\n      var query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/attendance/pickup-request\";\n      var student_id = child_id;\n      var arrival_time = new Date();\n      arrival_time.setMinutes(arrival_time.getMinutes() + parseInt(this.state.time));\n      var request_body = {\n        school_id: school_id,\n        student_id: student_id,\n        arrival_time: formatDate(arrival_time) + ' ' + formatTime(arrival_time)\n      };\n      fetch(query, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request_body)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        var statusCode = resJson.statusCode,\n            message = resJson.message;\n\n        if (statusCode > 200 || message === 'Internal server error') {\n          alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫 ' + message);\n          return;\n        }\n\n        _this2.props.navigation.goBack();\n      }).catch(function (err) {\n        alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when sending pickup request');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          time = _this$state2.time,\n          provided_times = _this$state2.provided_times,\n          colors = _this$state2.colors,\n          hightlighted_colors = _this$state2.hightlighted_colors,\n          choose_other_option = _this$state2.choose_other_option,\n          total_height = _this$state2.total_height,\n          total_width = _this$state2.total_width;\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1\n        },\n        behavior: \"padding\",\n        keyboardVerticalOffset: 100,\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, provided_times.map(function (minute, index) {\n        return React.createElement(View, {\n          key: index,\n          style: {\n            width: '50%',\n            height: total_height * 0.28,\n            backgroundColor: time == minute ? hightlighted_colors[index] : colors[index],\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            width: '90%',\n            height: '90%',\n            borderWidth: time == minute ? 5 : 0,\n            borderColor: 'white',\n            backgroundColor: time == minute ? hightlighted_colors[index] : colors[index]\n          },\n          underlayColor: hightlighted_colors[index],\n          onClick: function onClick() {\n            return _this3.setState({\n              time: minute,\n              choose_other_option: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: total_width * 0.20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 45\n          }\n        }, minute), React.createElement(Text, {\n          style: {\n            fontSize: total_width * 0.09\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 45\n          }\n        }, \"\\u5206\\u9418\"))));\n      }), React.createElement(View, {\n        style: {\n          width: '50%',\n          height: total_height * 0.28,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: choose_other_option ? 'black' : 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flexDirection: 'row',\n          width: '90%',\n          height: '90%',\n          backgroundColor: choose_other_option ? 'black' : 'white',\n          borderWidth: choose_other_option ? 5 : 0,\n          borderColor: 'white',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onClick: function onClick() {\n          return _this3.setState({\n            choose_other_option: true,\n            time: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, choose_other_option ? React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 37\n        }\n      }, React.createElement(TextInput, {\n        autoFocus: true,\n        selectTextOnFocus: true,\n        onBlur: function onBlur() {\n          return _this3.onBlur();\n        },\n        keyboardType: \"numeric\",\n        value: time + '',\n        style: {\n          fontSize: total_width * 0.2,\n          color: 'white',\n          width: '100%'\n        },\n        onChangeText: function onChangeText(time) {\n          _this3.setState({\n            time: time\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: total_width * 0.09,\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 45\n        }\n      }, \"\\u5206\\u9418\")) : React.createElement(Text, {\n        style: {\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 39\n        }\n      }, \"\\u5176\\u4ED6\")))), React.createElement(View, {\n        style: {\n          height: total_height * 0.16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          backgroundColor: 'lightgrey',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onClick: function onClick() {\n          return _this3.sendRequest();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, \"\\u9001\\u51FA\")))));\n    }\n  }]);\n\n  return PickupRequest;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isConnected: state.parent.isConnected\n  };\n};\n\nexport default connect(mapStateToProps)(PickupRequest);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/pickuprequest.js"],"names":["React","formatDate","formatTime","ENV","connect","Dimensions","get","width","height","PickupRequest","props","state","time","provided_times","colors","hightlighted_colors","choose_other_option","total_height","total_width","sendRequest","bind","includes","setState","isConnected","alert","route","params","child_id","school_id","query","student_id","arrival_time","Date","setMinutes","getMinutes","parseInt","request_body","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","statusCode","message","navigation","goBack","catch","err","flex","flexDirection","flexWrap","alignItems","justifyContent","map","minute","index","backgroundColor","borderWidth","borderColor","fontSize","onBlur","color","Component","mapStateToProps","parent"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAEA,SAASC,UAAT,EAAqBC,UAArB;AACA,OAAOC,GAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;IAETC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,cAAc,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAFP;AAGTC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAHC;AAITC,MAAAA,mBAAmB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAJZ;AAKTC,MAAAA,mBAAmB,EAAE,KALZ;AAMTC,MAAAA,YAAY,EAAET,MAAM,GAAG,EANd;AAOTU,MAAAA,WAAW,EAAEX;AAPJ,KAAb;AASA,UAAKY,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAXe;AAYlB;;;;6BAEQ;AAAA,wBACiD,KAAKT,KADtD;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSI,mBADT,eACSA,mBADT;AAAA,UAC8BH,cAD9B,eAC8BA,cAD9B;;AAEL,UAAIG,mBAAmB,KAAKJ,IAAI,KAAK,EAAT,IAAeC,cAAc,CAACQ,QAAf,CAAwBT,IAAxB,CAApB,CAAvB,EAA2E;AACvE,aAAKU,QAAL,CAAc;AAAEN,UAAAA,mBAAmB,EAAE;AAAvB,SAAd;AACH;AACJ;;;kCAEa;AAAA;;AAAA,UACFO,WADE,GACc,KAAKb,KADnB,CACFa,WADE;;AAEV,UAAI,CAACA,WAAL,EAAkB;AACdC,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACH;;AALS,kCAMsB,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,MANvC;AAAA,UAMFC,QANE,yBAMFA,QANE;AAAA,UAMQC,SANR,yBAMQA,SANR;AAOV,UAAMC,KAAK,+DAA6D1B,GAA7D,+BAAX;AACA,UAAM2B,UAAU,GAAGH,QAAnB;AACA,UAAMI,YAAY,GAAG,IAAIC,IAAJ,EAArB;AACAD,MAAAA,YAAY,CAACE,UAAb,CAAwBF,YAAY,CAACG,UAAb,KAA4BC,QAAQ,CAAC,KAAKxB,KAAL,CAAWC,IAAZ,CAA5D;AACA,UAAMwB,YAAY,GAAG;AACjBR,QAAAA,SAAS,EAATA,SADiB;AAEjBE,QAAAA,UAAU,EAAVA,UAFiB;AAGjBC,QAAAA,YAAY,EAAE9B,UAAU,CAAC8B,YAAD,CAAV,GAA2B,GAA3B,GAAiC7B,UAAU,CAAC6B,YAAD;AAHxC,OAArB;AAKAM,MAAAA,KAAK,CAACR,KAAD,EAAQ;AACTS,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFA;AAMTC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,YAAf;AANG,OAAR,CAAL,CAQKQ,IARL,CAQU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OARb,EASKF,IATL,CASU,UAAAG,OAAO,EAAI;AAAA,YACLC,UADK,GACmBD,OADnB,CACLC,UADK;AAAA,YACOC,OADP,GACmBF,OADnB,CACOE,OADP;;AAEb,YAAID,UAAU,GAAG,GAAb,IAAoBC,OAAO,KAAK,uBAApC,EAA6D;AACzDzB,UAAAA,KAAK,CAAC,6BAA6ByB,OAA9B,CAAL;AACA;AACH;;AACD,QAAA,MAAI,CAACvC,KAAL,CAAWwC,UAAX,CAAsBC,MAAtB;AACH,OAhBL,EAiBKC,KAjBL,CAiBW,UAAAC,GAAG,EAAI;AACV7B,QAAAA,KAAK,CAAC,qEAAD,CAAL;AACH,OAnBL;AAoBH;;;6BAEQ;AAAA;;AAAA,yBACyG,KAAKb,KAD9G;AAAA,UACGC,IADH,gBACGA,IADH;AAAA,UACSC,cADT,gBACSA,cADT;AAAA,UACyBC,MADzB,gBACyBA,MADzB;AAAA,UACiCC,mBADjC,gBACiCA,mBADjC;AAAA,UACsDC,mBADtD,gBACsDA,mBADtD;AAAA,UAC2EC,YAD3E,gBAC2EA,YAD3E;AAAA,UACyFC,WADzF,gBACyFA,WADzF;AAEL,aACI,oBAAC,oBAAD;AACI,QAAA,KAAK,EAAE;AAAEoC,UAAAA,IAAI,EAAE;AAAR,SADX;AAEI,QAAA,QAAQ,EAAC,SAFb;AAGI,QAAA,sBAAsB,EAAE,GAH5B;AAII,QAAA,OAAO,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHA,UAAAA,IAAI,EAAE,CADH;AAEHC,UAAAA,aAAa,EAAE,KAFZ;AAGHC,UAAAA,QAAQ,EAAE,MAHP;AAIHC,UAAAA,UAAU,EAAE,QAJT;AAKHC,UAAAA,cAAc,EAAE;AALb,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASK7C,cAAc,CAAC8C,GAAf,CAAmB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACnC,eACI,oBAAC,IAAD;AACI,UAAA,GAAG,EAAEA,KADT;AAEI,UAAA,KAAK,EAAE;AACHtD,YAAAA,KAAK,EAAE,KADJ;AAEHC,YAAAA,MAAM,EAAES,YAAY,GAAC,IAFlB;AAIH6C,YAAAA,eAAe,EAAElD,IAAI,IAAIgD,MAAR,GAAiB7C,mBAAmB,CAAC8C,KAAD,CAApC,GAA8C/C,MAAM,CAAC+C,KAAD,CAJlE;AAKHJ,YAAAA,UAAU,EAAE,QALT;AAMHC,YAAAA,cAAc,EAAE;AANb,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWI,oBAAC,gBAAD;AACI,UAAA,KAAK,EAAE;AACHnD,YAAAA,KAAK,EAAE,KADJ;AAEHC,YAAAA,MAAM,EAAE,KAFL;AAGHuD,YAAAA,WAAW,EAAEnD,IAAI,IAAIgD,MAAR,GAAiB,CAAjB,GAAqB,CAH/B;AAIHI,YAAAA,WAAW,EAAE,OAJV;AAKHF,YAAAA,eAAe,EAAElD,IAAI,IAAIgD,MAAR,GAAiB7C,mBAAmB,CAAC8C,KAAD,CAApC,GAA8C/C,MAAM,CAAC+C,KAAD;AALlE,WADX;AAQI,UAAA,aAAa,EAAE9C,mBAAmB,CAAC8C,KAAD,CARtC;AASI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACvC,QAAL,CAAc;AAAEV,cAAAA,IAAI,EAAEgD,MAAR;AAAgB5C,cAAAA,mBAAmB,EAAE;AAArC,aAAd,CAAN;AAAA,WATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEsC,YAAAA,IAAI,EAAC,CAAP;AAAUC,YAAAA,aAAa,EAAC,KAAxB;AAA+BG,YAAAA,cAAc,EAAE,QAA/C;AAAyDD,YAAAA,UAAU,EAAE;AAArE,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEQ,YAAAA,QAAQ,EAAE/C,WAAW,GAAC;AAAxB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8C0C,MAA9C,CADJ,EAEI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEK,YAAAA,QAAQ,EAAE/C,WAAW,GAAC;AAAxB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CAXJ,CAXJ,CADJ;AA8BH,OA/BA,CATL,EA2CI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHX,UAAAA,KAAK,EAAE,KADJ;AAEHC,UAAAA,MAAM,EAAES,YAAY,GAAC,IAFlB;AAGHwC,UAAAA,UAAU,EAAE,QAHT;AAIHC,UAAAA,cAAc,EAAE,QAJb;AAKHI,UAAAA,eAAe,EAAE9C,mBAAmB,GAAG,OAAH,GAAa;AAL9C,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI,oBAAC,gBAAD;AACQ,QAAA,KAAK,EAAE;AACHuC,UAAAA,aAAa,EAAE,KADZ;AAEHhD,UAAAA,KAAK,EAAE,KAFJ;AAGHC,UAAAA,MAAM,EAAE,KAHL;AAIHsD,UAAAA,eAAe,EAAE9C,mBAAmB,GAAG,OAAH,GAAa,OAJ9C;AAKH+C,UAAAA,WAAW,EAAE/C,mBAAmB,GAAG,CAAH,GAAO,CALpC;AAMHgD,UAAAA,WAAW,EAAE,OANV;AAOHP,UAAAA,UAAU,EAAE,QAPT;AAQHC,UAAAA,cAAc,EAAE;AARb,SADf;AAWQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACpC,QAAL,CAAc;AAAEN,YAAAA,mBAAmB,EAAE,IAAvB;AAA6BJ,YAAAA,IAAI,EAAE;AAAnC,WAAd,CAAN;AAAA,SAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaKI,mBAAmB,GAChB,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHuC,UAAAA,aAAa,EAAE,KADZ;AAEHG,UAAAA,cAAc,EAAE,QAFb;AAGHD,UAAAA,UAAU,EAAE,QAHT;AAIHlD,UAAAA,KAAK,EAAE;AAJJ,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,SAAD;AACI,QAAA,SAAS,EAAE,IADf;AAEI,QAAA,iBAAiB,EAAE,IAFvB;AAGI,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAAC2D,MAAL,EAAN;AAAA,SAHZ;AAII,QAAA,YAAY,EAAC,SAJjB;AAKI,QAAA,KAAK,EAAEtD,IAAI,GAAG,EALlB;AAMI,QAAA,KAAK,EAAE;AACHqD,UAAAA,QAAQ,EAAE/C,WAAW,GAAC,GADnB;AAEHiD,UAAAA,KAAK,EAAE,OAFJ;AAGH5D,UAAAA,KAAK,EAAE;AAHJ,SANX;AAWI,QAAA,YAAY,EAAE,sBAACK,IAAD,EAAU;AACpB,UAAA,MAAI,CAACU,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAJA;AAAF,WAAd;AACH,SAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAuBQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEqD,UAAAA,QAAQ,EAAE/C,WAAW,GAAC,IAAxB;AAA8BiD,UAAAA,KAAK,EAAE;AAArC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvBR,CADgB,GA0Bd,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvCV,CATJ,CA3CJ,CADJ,EAiGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEzD,UAAAA,MAAM,EAAES,YAAY,GAAC;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAE;AACHqC,UAAAA,IAAI,EAAE,CADH;AAEHQ,UAAAA,eAAe,EAAE,WAFd;AAGHL,UAAAA,UAAU,EAAE,QAHT;AAIHC,UAAAA,cAAc,EAAE;AAJb,SADX;AAOI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACvC,WAAL,EAAN;AAAA,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE8C,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,CADJ,CAjGJ,CANJ,CADJ;AAwHH;;;;EAtLuBjE,KAAK,CAACoE,S;;AAyLlC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAC1D,KAAD,EAAW;AAC/B,SAAO;AACHY,IAAAA,WAAW,EAAEZ,KAAK,CAAC2D,MAAN,CAAa/C;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAenB,OAAO,CAACiE,eAAD,CAAP,CAA0B5D,aAA1B,CAAf","sourcesContent":["\nimport React from 'react'\nimport { View, Text, TouchableOpacity, TextInput, KeyboardAvoidingView, ScrollView, Alert, Dimensions } from 'react-native'\nimport { formatDate, formatTime } from '../util'\nimport ENV from '../../variables'\nimport { connect } from 'react-redux'\n\nconst { width, height } = Dimensions.get('window')\n\nclass PickupRequest extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            time: null,\n            provided_times: ['5', '10', '15', '20', '25'],\n            colors: ['#ffe1d0', '#ffddb7', '#fff1b5', '#dcf3d0', '#b5e9e9'],\n            hightlighted_colors: ['#fa625f', '#ff8944', '#f4d41f', '#00c07f', '#368cbf'],\n            choose_other_option: false,\n            total_height: height - 55,\n            total_width: width\n        }\n        this.sendRequest = this.sendRequest.bind(this)\n    }\n\n    onBlur() {\n        const { time, choose_other_option, provided_times } = this.state\n        if (choose_other_option && (time === '' || provided_times.includes(time))) {\n            this.setState({ choose_other_option: false })\n        } \n    }\n\n    sendRequest() {\n        const { isConnected } = this.props\n        if (!isConnected) {\n            alert('網路連不到! 請稍後再試試看')\n            return\n        }\n        const { child_id, school_id } = this.props.route.params\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/attendance/pickup-request`\n        const student_id = child_id\n        const arrival_time = new Date()\n        arrival_time.setMinutes(arrival_time.getMinutes() + parseInt(this.state.time))\n        const request_body = {\n            school_id,\n            student_id,\n            arrival_time: formatDate(arrival_time) + ' ' + formatTime(arrival_time)\n        }\n        fetch(query, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const { statusCode, message } = resJson\n                if (statusCode > 200 || message === 'Internal server error') {\n                    alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫 ' + message)\n                    return\n                }\n                this.props.navigation.goBack()\n            })\n            .catch(err => {\n                alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when sending pickup request')\n            })\n    }\n\n    render() {\n        const { time, provided_times, colors, hightlighted_colors, choose_other_option, total_height, total_width } = this.state\n        return (\n            <KeyboardAvoidingView\n                style={{ flex: 1 }}\n                behavior=\"padding\"\n                keyboardVerticalOffset={100}\n                enabled\n            >\n                <ScrollView>\n                    <View\n                        style={{\n                            flex: 3,\n                            flexDirection: 'row',\n                            flexWrap: 'wrap',\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        {provided_times.map((minute, index) => {\n                            return (\n                                <View\n                                    key={index}\n                                    style={{\n                                        width: '50%',\n                                        height: total_height*0.28,\n                                        // aspectRatio,\n                                        backgroundColor: time == minute ? hightlighted_colors[index] : colors[index],\n                                        alignItems: 'center',\n                                        justifyContent: 'center'\n                                    }}\n                                >\n                                    <TouchableOpacity\n                                        style={{\n                                            width: '90%',\n                                            height: '90%',\n                                            borderWidth: time == minute ? 5 : 0,\n                                            borderColor: 'white',\n                                            backgroundColor: time == minute ? hightlighted_colors[index] : colors[index]\n                                        }}\n                                        underlayColor={hightlighted_colors[index]}\n                                        onClick={() => this.setState({ time: minute, choose_other_option: false })}\n                                    >\n                                        <View style={{ flex:1, flexDirection:'row', justifyContent: 'center', alignItems: 'center' }}>\n                                            <Text style={{ fontSize: total_width*0.20 }}>{minute}</Text>\n                                            <Text style={{ fontSize: total_width*0.09 }}>分鐘</Text>\n                                        </View>\n                                    </TouchableOpacity>\n                                </View>\n                            )\n                        })}\n                        \n                        \n                        <View\n                            style={{\n                                width: '50%',\n                                height: total_height*0.28,\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                backgroundColor: choose_other_option ? 'black' : 'white'\n                            }}\n                        >\n                            <TouchableOpacity\n                                    style={{\n                                        flexDirection: 'row',\n                                        width: '90%',\n                                        height: '90%',\n                                        backgroundColor: choose_other_option ? 'black' : 'white',\n                                        borderWidth: choose_other_option ? 5 : 0,\n                                        borderColor: 'white',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                    onClick={() => this.setState({ choose_other_option: true, time: '' })}\n                            >\n                                {choose_other_option ?\n                                    <View\n                                        style={{\n                                            flexDirection: 'row',\n                                            justifyContent: 'center', \n                                            alignItems: 'center',\n                                            width: '100%'\n                                        }}\n                                    >\n                                        <TextInput\n                                            autoFocus={true}\n                                            selectTextOnFocus={true}\n                                            onBlur={() => this.onBlur()}\n                                            keyboardType='numeric'\n                                            value={time + ''}\n                                            style={{\n                                                fontSize: total_width*0.2,\n                                                color: 'white',\n                                                width: '100%'\n                                            }}\n                                            onChangeText={(time) => {\n                                                this.setState({ time })\n                                            }}\n                                        />\n                                            <Text style={{ fontSize: total_width*0.09, color: 'white' }}>分鐘</Text>                            \n                                    </View>\n                                    : <Text style={{ fontSize: 50 }}>其他</Text>\n                                }\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={{ height: total_height*0.16 }}>\n                        <TouchableOpacity\n                            style={{\n                                flex: 1,\n                                backgroundColor: 'lightgrey',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}\n                            onClick={() => this.sendRequest()}\n                        >\n                            <Text style={{ fontSize: 50 }}>送出</Text>\n                        </TouchableOpacity>\n                    </View>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isConnected: state.parent.isConnected\n    }\n}\n\nexport default connect(mapStateToProps) (PickupRequest)"]},"metadata":{},"sourceType":"module"}