{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export default function medicationrequests(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{requests:{},unfinished:[],finished:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'INITIALIZE_REQUESTS':{var requests=action.requests,finished=action.finished,unfinished=action.unfinished;return _objectSpread(_objectSpread({},state),{},{requests:requests,finished:finished,unfinished:unfinished});}case'FILL_MED_REQUEST':{var newState=_objectSpread({},state);var _unfinished=state.unfinished;var new_unfinished=[];newState.requests[action.request_id].administered=true;newState.finished=[].concat(_toConsumableArray(state.finished),[action.request_id]);for(var i=0;i<_unfinished.length;i++){if(_unfinished[i]!==action.request_id){new_unfinished.push(_unfinished[i]);}}newState.unfinished=new_unfinished;return newState;}case'CLEAR_STATE':{return{requests:{},unfinished:[],finished:[]};}default:return state;}}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/school/reducers/medicationrequests.js"],"names":["medicationrequests","state","requests","unfinished","finished","action","type","newState","new_unfinished","request_id","administered","i","length","push"],"mappings":"w6BAAA,cAAe,SAASA,CAAAA,kBAAT,EAkBJ,IAlBgCC,CAAAA,KAkBhC,2DAlBwC,CAC/CC,QAAQ,CAAE,EADqC,CAgB/CC,UAAU,CAAE,EAhBmC,CAiB/CC,QAAQ,CAAE,EAjBqC,CAkBxC,IAARC,CAAAA,MAAQ,2CACP,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,qBAAL,CAA2B,IACfJ,CAAAA,QADe,CACmBG,MADnB,CACfH,QADe,CACLE,QADK,CACmBC,MADnB,CACLD,QADK,CACKD,UADL,CACmBE,MADnB,CACKF,UADL,CAEvB,sCACOF,KADP,MAEIC,QAAQ,CAARA,QAFJ,CAGIE,QAAQ,CAARA,QAHJ,CAIID,UAAU,CAAVA,UAJJ,GAMH,CAED,IAAK,kBAAL,CAAwB,CACpB,GAAMI,CAAAA,QAAQ,kBAAQN,KAAR,CAAd,CADoB,GAEZE,CAAAA,WAFY,CAEGF,KAFH,CAEZE,UAFY,CAGpB,GAAIK,CAAAA,cAAc,CAAG,EAArB,CACAD,QAAQ,CAACL,QAAT,CAAkBG,MAAM,CAACI,UAAzB,EAAqCC,YAArC,CAAoD,IAApD,CACAH,QAAQ,CAACH,QAAT,8BAAwBH,KAAK,CAACG,QAA9B,GAAwCC,MAAM,CAACI,UAA/C,GAEA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGR,WAAU,CAACS,MAA/B,CAAuCD,CAAC,EAAxC,CAA4C,CACxC,GAAIR,WAAU,CAACQ,CAAD,CAAV,GAAkBN,MAAM,CAACI,UAA7B,CAAyC,CACrCD,cAAc,CAACK,IAAf,CAAoBV,WAAU,CAACQ,CAAD,CAA9B,EACH,CACJ,CACDJ,QAAQ,CAACJ,UAAT,CAAsBK,cAAtB,CACA,MAAOD,CAAAA,QAAP,CACH,CAED,IAAK,aAAL,CAAoB,CAChB,MAAO,CACHL,QAAQ,CAAE,EADP,CAEHC,UAAU,CAAE,EAFT,CAGHC,QAAQ,CAAE,EAHP,CAAP,CAKH,CAED,QACI,MAAOH,CAAAA,KAAP,CApCR,CAsCH","sourcesContent":["export default function medicationrequests(state = {\n    requests: {\n        // [request_id]: {\n        //     'student_id': student_id,\n        //     'timestamp': timestamp.strftime('%B %d, %Y %H:%M:%S'),\n        //     'medication': {\n        //         '藥粉': None if 藥粉 == 'None' else 藥粉,\n        //         'need_refrigeration': need_refrigeration == 'True',\n        //         '藥水': None if 藥水 == 'None' else 藥水,\n        //         '藥膏': None if 藥膏 == 'None' else 藥膏\n        //     },\n        //     'note': note,\n        //     'administered': administered,\n        //     'teacher_id': teacher_id\n        // }, {...}\n    },\n    unfinished: [],\n    finished: []\n}, action) {\n    switch (action.type) {\n        case 'INITIALIZE_REQUESTS':{\n            const { requests, finished, unfinished} = action\n            return {\n                ...state,\n                requests,\n                finished,\n                unfinished\n            }\n        }\n        \n        case 'FILL_MED_REQUEST':{\n            const newState = { ...state }\n            const { unfinished } = state\n            var new_unfinished = []\n            newState.requests[action.request_id].administered = true\n            newState.finished = [...state.finished, action.request_id]\n\n            for (var i = 0; i < unfinished.length; i++) {\n                if (unfinished[i] !== action.request_id) {\n                    new_unfinished.push(unfinished[i])\n                }\n            }\n            newState.unfinished = new_unfinished\n            return newState\n        }\n        \n        case 'CLEAR_STATE': {\n            return {\n                requests: {},\n                unfinished: [],\n                finished: []\n            }\n        }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}