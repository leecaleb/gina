{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/milkcard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card } from 'native-base';\nimport { formatDate, fetchData as _fetchData, formatTime } from \"../util\";\nimport Reloading from \"../reloading\";\n\nvar MilkCard = function (_React$Component) {\n  _inherits(MilkCard, _React$Component);\n\n  var _super = _createSuper(MilkCard);\n\n  function MilkCard(props) {\n    var _this;\n\n    _classCallCheck(this, MilkCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true\n    };\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MilkCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var date = this.props.date;\n      this.fetchData(this.props.child_id, new Date(date.getTime()));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.date !== prevProps.date) {\n        this.setState({\n          isLoading: true\n        });\n        this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n      } else if (this.props.child_id !== prevProps.child_id) {\n        this.setState({\n          isLoading: true\n        });\n        this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n      }\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(child_id, date) {\n      var start_date, end_date, milkIntakeData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(date.getHours() < 17)) {\n                _context.next = 3;\n                break;\n              }\n\n              this.setState({\n                isLoading: false\n              });\n              return _context.abrupt(\"return\");\n\n            case 3:\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(_fetchData('milkintake', child_id, start_date, end_date));\n\n            case 8:\n              milkIntakeData = _context.sent;\n              this.setState({\n                milkIntakeData: milkIntakeData,\n                isLoading: false\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          milkIntakeData = _this$state.milkIntakeData,\n          isLoading = _this$state.isLoading;\n      var today = formatDate(this.props.date);\n      return React.createElement(Card, {\n        style: {\n          width: '93%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 56,\n          height: 56,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icon-milk.png\"),\n        style: {\n          width: 48,\n          height: 48\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \"\\u559D\\u5976\")), isLoading ? React.createElement(Reloading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }) : milkIntakeData && milkIntakeData[today] ? React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          paddingBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '25%',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }\n      }, \"\\u6642\\u9593\")), React.createElement(View, {\n        style: {\n          width: '28%',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      }, \"\\u91CF\")), React.createElement(View, {\n        style: {\n          width: '28%',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, \"\\u4E73\\u54C1\")), React.createElement(View, {\n        style: {\n          width: '19%',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#606060'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }\n      }, \"\\u8001\\u5E2B\"))), milkIntakeData[today].map(function (record, index) {\n        var time = record.time,\n            amount = record.amount,\n            milk_type = record.milk_type,\n            teacher_name = record.teacher_name;\n        return React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '25%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 27\n          }\n        }, time)), React.createElement(View, {\n          style: {\n            width: '28%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }\n        }, amount, \" c.c.\")), React.createElement(View, {\n          style: {\n            width: '28%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 27\n          }\n        }, milk_type)), React.createElement(View, {\n          style: {\n            width: '19%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            textAlign: 'center',\n            color: '#404040'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 27\n          }\n        }, teacher_name !== null && teacher_name.slice(1))));\n      })) : React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 17\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, \"\\u6C92\\u6709\\u65B0\\u7D00\\u9304\")))));\n    }\n  }]);\n\n  return MilkCard;\n}(React.Component);\n\nexport { MilkCard as default };","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/milkcard.js"],"names":["React","Card","formatDate","fetchData","formatTime","Reloading","MilkCard","props","state","isLoading","bind","date","child_id","Date","getTime","prevProps","setState","getHours","start_date","setDate","getDate","end_date","milkIntakeData","today","width","flex","flexDirection","height","justifyContent","alignItems","require","paddingTop","fontSize","paddingVertical","paddingBottom","textAlign","color","map","record","index","time","amount","milk_type","teacher_name","slice","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, Image } from 'react-native'\nimport { Card } from 'native-base'\nimport { formatDate, fetchData, formatTime } from '../util';\nimport Reloading from '../reloading';\n\nexport default class MilkCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n    this.fetchData = this.fetchData.bind(this)\n  }\n\n  componentDidMount() {\n    const { date } = this.props\n    this.fetchData(this.props.child_id, new Date(date.getTime()))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    } else if (this.props.child_id !== prevProps.child_id) {\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    }\n  }\n\n  async fetchData(child_id, date) {\n    if (date.getHours() < 17) {\n      this.setState({\n        isLoading: false\n      })\n      return\n    }\n    const start_date = formatDate(date)\n    date.setDate(date.getDate() + 1)\n    const end_date = formatDate(date)\n    const milkIntakeData = await fetchData('milkintake', child_id, start_date, end_date)\n    this.setState({\n      milkIntakeData,\n      isLoading: false\n    })\n  }\n\n  render() {\n    const { milkIntakeData, isLoading } = this.state\n    // console.log('milkIntakeData: ', milkIntakeData)\n    const today = formatDate(this.props.date)\n    return (\n      <Card style={{ width: '93%' }}>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ width: 56, height: 56, justifyContent: 'center', alignItems: 'center'}}>\n            <Image\n              source={require('../../assets/icon-milk.png')}\n              style={{\n                  width: 48,\n                  height: 48\n              }}\n            />\n          </View>\n          <View style={{ flex: 1 }}>\n            <View style={{ paddingTop: 8 }}>\n              <Text style={{ fontSize: 20 }}>喝奶</Text>\n            </View>\n            {isLoading ? \n              <Reloading />\n            : milkIntakeData && milkIntakeData[today] ?\n                <View style={{ flex: 1, paddingVertical: 8 }}>\n                  <View\n                    style={{ flexDirection: 'row', paddingBottom: 5 }}\n                  >\n                    <View style={{ width: '25%', justifyContent: 'center' }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>時間</Text>\n                    </View>\n                    <View style={{ width: '28%', justifyContent: 'center' }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>量</Text>\n                    </View>\n                    <View style={{ width: '28%', justifyContent: 'center' }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>乳品</Text>\n                    </View>\n                    <View style={{ width: '19%', justifyContent: 'center' }}>\n                      <Text style={{ fontSize: 15, textAlign: 'center', color: '#606060' }}>老師</Text>\n                    </View>\n                  </View>\n                  {milkIntakeData[today].map((record, index) => {\n                    const { time, amount, milk_type, teacher_name } = record\n                    return (\n                      <View key={index}\n                        style={{ flexDirection: 'row' }}\n                      >\n                        <View style={{ width: '25%' }}>\n                          <Text style={{ fontSize: 20, textAlign: 'center', color: '#404040' }}>{time}</Text>\n                        </View>\n                        <View style={{ width: '28%' }}>\n                          <Text style={{ fontSize: 20, textAlign: 'center', color: '#404040' }}>{amount} c.c.</Text>\n                        </View>\n                        <View style={{ width: '28%' }}>\n                          <Text style={{ fontSize: 20, textAlign: 'center', color: '#404040' }}>{milk_type}</Text>\n                        </View>\n                        <View style={{ width: '19%' }}>\n                          <Text style={{fontSize: 20, textAlign: 'center', color: '#404040' }}>{teacher_name !== null && teacher_name.slice(1)}</Text>\n                        </View>\n                      </View>\n                    )\n                  })}\n                </View>\n              : <View style={{ flex: 1, paddingVertical: 8  }}>\n                  <Text style={{ fontSize: 17 }}>沒有新紀錄</Text>\n                </View>\n            }\n          </View>\n        </View>\n      </Card>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}