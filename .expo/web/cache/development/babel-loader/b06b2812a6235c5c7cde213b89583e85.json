{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/logs/sleeplog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Content, Text, View, Card, Toast } from 'native-base';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setSleepTime, setWakeTime, fetchClassSleepData, clearPendingSleepUpdate, createSleepRecordSuccess, createSleepRecordFail, editSleepRecordSuccess, editSleepRecordFail, removeSleepRecord, removeSleepRecordSuccess, removeSleepRecordFail, alertSleeplogErrorMessage, clearSleeplogErrorMessage, removeWakeTime, markRecordError, markRecordCorrect } from \"../../../redux/school/actions/index\";\nimport { formatDate, formatTime, fetchClassData as _fetchClassData } from \"../../util\";\nimport Reloading from \"../../reloading\";\nimport TimeModal from \"../../parent/timemodal\";\n\nvar TeacherSleepLog = function (_React$Component) {\n  _inherits(TeacherSleepLog, _React$Component);\n\n  var _super = _createSuper(TeacherSleepLog);\n\n  function TeacherSleepLog(props) {\n    var _this;\n\n    _classCallCheck(this, TeacherSleepLog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      date: new Date(),\n      showIOSDatePicker: false,\n      student_id: '',\n      index: -1,\n      recordType: '',\n      teacher_id: '',\n      confirmDelete: false,\n      showDateTimeModal: false\n    };\n    _this.handleOnClick = _this.handleOnClick.bind(_assertThisInitialized(_this));\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_this));\n    _this.updateReducerTime = _this.updateReducerTime.bind(_assertThisInitialized(_this));\n    _this.setTime = _this.setTime.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TeacherSleepLog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$sleep = this.props.sleep,\n          newDataForCreate = _this$props$sleep.newDataForCreate,\n          oldDataForEdit = _this$props$sleep.oldDataForEdit;\n      var isConnected = this.props.class.isConnected;\n      var teacher_id = this.props.route.params.teacher_id;\n      this.setState({\n        teacher_id: teacher_id\n      });\n\n      if (newDataForCreate.size + oldDataForEdit.size === 0 && isConnected) {\n        this.fetchClassData();\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n      }\n    }\n  }, {\n    key: \"fetchClassData\",\n    value: function fetchClassData() {\n      var date, start_date, end_date, sleepData;\n      return _regeneratorRuntime.async(function fetchClassData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              date = new Date();\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(_fetchClassData('sleep', this.props.class.class_id, start_date, end_date));\n\n            case 6:\n              sleepData = _context.sent;\n              this.denormalize(sleepData);\n              this.props.fetchClassSleepData(sleepData.data);\n              this.setState({\n                isLoading: false\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"denormalize\",\n    value: function denormalize(sleepData) {\n      if (!sleepData.data.records.all_id.length) {\n        return;\n      }\n\n      var by_id = sleepData.data.records.by_id;\n\n      for (var record_id in by_id) {\n        by_id[record_id].sleep_time = new Date(by_id[record_id].sleep_time);\n        by_id[record_id].wake_time = by_id[record_id].wake_time === null ? null : new Date(by_id[record_id].wake_time);\n      }\n\n      sleepData.data.records.by_id = by_id;\n    }\n  }, {\n    key: \"hasUnsentRecord\",\n    value: function hasUnsentRecord(student_id) {\n      var _this$props$sleep2 = this.props.sleep,\n          newDataForCreate = _this$props$sleep2.newDataForCreate,\n          oldDataForEdit = _this$props$sleep2.oldDataForEdit,\n          by_student_id = _this$props$sleep2.by_student_id;\n      record_id_array = by_student_id[student_id];\n      var hasUnsentRecord = false;\n\n      for (var i = 0; i < record_id_array.length; i++) {\n        if (newDataForCreate.has(record_id_array[i]) || oldDataForEdit.has(record_id_array[i])) {\n          hasUnsentRecord = true;\n          break;\n        }\n      }\n\n      return hasUnsentRecord;\n    }\n  }, {\n    key: \"handleOnClick\",\n    value: function handleOnClick(student_id) {\n      var record_id_array = this.props.sleep.by_student_id[student_id];\n      var records = this.props.sleep.records.by_id;\n      var last_record = record_id_array.length > 0 ? records[record_id_array[record_id_array.length - 1]] : null;\n      var current_wake_time = last_record ? last_record.wake_time : null;\n\n      if (!record_id_array.length || current_wake_time) {\n        this.props.setSleepTime(student_id, null, new Date(), this.state.teacher_id);\n      } else {\n        this.props.setWakeTime(student_id, record_id_array.length - 1, new Date(), this.state.teacher_id);\n      }\n\n      this.checkLastRecord(student_id, records, record_id_array);\n    }\n  }, {\n    key: \"checkLastRecord\",\n    value: function checkLastRecord(student_id, records, record_id_array) {\n      var n = record_id_array.length;\n      var last_record_id = record_id_array[record_id_array.length - 1];\n      var last_record = records[last_record_id];\n\n      if (last_record.wake_time !== null && last_record.sleep_time.getTime() >= last_record.wake_time.getTime()) {\n        this.props.markRecordError([last_record_id]);\n      }\n\n      if (n > 1) {\n        var last_second_record_id = record_id_array[record_id_array.length - 2];\n        var last_second_record = records[last_second_record_id];\n\n        if (last_record.sleep_time >= last_second_record.sleep_time && last_record.sleep_time <= last_second_record.wake_time) {\n          this.props.markRecordError([last_record_id]);\n        }\n      }\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime(recordType, student_id, index, start_time) {\n      this.setState({\n        student_id: student_id,\n        index: index,\n        recordType: recordType,\n        showDateTimeModal: true,\n        start_time: start_time ? start_time : new Date()\n      });\n    }\n  }, {\n    key: \"updateReducerTime\",\n    value: function updateReducerTime(index, time) {\n      this.setState({\n        showDateTimeModal: false\n      });\n\n      if (this.state.recordType === 'sleep') {\n        this.props.setSleepTime(this.state.student_id, index, time, this.state.teacher_id);\n      } else {\n        this.props.setWakeTime(this.state.student_id, index, time, this.state.teacher_id);\n      }\n\n      this.checkRecord(this.state.student_id, index);\n    }\n  }, {\n    key: \"checkRecord\",\n    value: function checkRecord(student_id, index) {\n      var record_id_array = this.props.sleep.by_student_id[student_id];\n      var records = this.props.sleep.records.by_id;\n      var record_id = record_id_array[index];\n      var record = records[record_id];\n      var records_with_error = this.props.sleep.records_with_error;\n      var prev_record_id = null;\n      var next_record_id = null;\n\n      if (index < 0 || index > record_id_array.length - 1) {\n        return;\n      }\n\n      if (record.wake_time !== null) {\n        if (record.sleep_time.getTime() >= record.wake_time.getTime()) {\n          this.props.markRecordError([record_id]);\n          return;\n        }\n      }\n\n      if (index > 0) {\n        prev_record_id = record_id_array[index - 1];\n        var prev_record = records[prev_record_id];\n\n        if (prev_record.wake_time !== null && record.sleep_time.getTime() <= prev_record.wake_time.getTime()) {\n          this.props.markRecordError([record_id]);\n          return;\n        }\n      }\n\n      if (index < record_id_array.length - 1) {\n        next_record_id = record_id_array[index + 1];\n        var next_record = records[next_record_id];\n\n        if (record.wake_time >= next_record.sleep_time) {\n          this.props.markRecordError([record_id]);\n          return;\n        }\n      }\n\n      this.props.markRecordCorrect(record_id);\n\n      if (prev_record_id !== null && records_with_error.has(prev_record_id)) {\n        this.checkRecord(student_id, index - 1);\n      }\n\n      if (next_record_id !== null && records_with_error.has(next_record_id)) {\n        this.checkRecord(student_id, index + 1);\n      }\n    }\n  }, {\n    key: \"confirmToRemoveWakeTime\",\n    value: function confirmToRemoveWakeTime(record_id, index, student_id) {\n      var _this2 = this;\n\n      var record_id_array = this.props.sleep.by_student_id[student_id];\n\n      if (index !== record_id_array.length - 1) {\n        this.props.alertSleeplogErrorMessage('這個睡眠記錄並不能刪除，只能改選');\n        return;\n      }\n\n      Alert.alert('確定要刪除?', '', [{\n        text: 'Yes',\n        onPress: function onPress() {\n          return _this2.props.removeWakeTime(record_id, _this2.state.teacher_id);\n        }\n      }, {\n        text: 'Cancel',\n        style: 'cancel'\n      }]);\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      var isConnected, _this$props$sleep3, newDataForCreate, oldDataForEdit, createSleepRecordRes, editSleepRecordRes;\n\n      return _regeneratorRuntime.async(function handleSend$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              isConnected = this.props.class.isConnected;\n\n              if (isConnected) {\n                _context2.next = 4;\n                break;\n              }\n\n              Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n              });\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              this.setState({\n                isLoading: true\n              });\n              _this$props$sleep3 = this.props.sleep, newDataForCreate = _this$props$sleep3.newDataForCreate, oldDataForEdit = _this$props$sleep3.oldDataForEdit;\n\n              if (!newDataForCreate.size) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(this.createRecord());\n\n            case 9:\n              createSleepRecordRes = _context2.sent;\n\n              if (!createSleepRecordRes.success) {\n                _context2.next = 14;\n                break;\n              }\n\n              this.props.createSleepRecordSuccess();\n              _context2.next = 16;\n              break;\n\n            case 14:\n              this.props.createSleepRecordFail();\n              return _context2.abrupt(\"return\");\n\n            case 16:\n              if (!oldDataForEdit.size) {\n                _context2.next = 26;\n                break;\n              }\n\n              _context2.next = 19;\n              return _regeneratorRuntime.awrap(this.editRecord());\n\n            case 19:\n              editSleepRecordRes = _context2.sent;\n\n              if (!editSleepRecordRes.success) {\n                _context2.next = 24;\n                break;\n              }\n\n              this.props.editSleepRecordSuccess();\n              _context2.next = 26;\n              break;\n\n            case 24:\n              this.props.editSleepRecordFail();\n              return _context2.abrupt(\"return\");\n\n            case 26:\n              this.props.navigation.goBack();\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"createRecord\",\n    value: function createRecord() {\n      var _this$props$sleep4, newDataForCreate, records, data_objs, request_body, createSleepRecordRes;\n\n      return _regeneratorRuntime.async(function createRecord$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props$sleep4 = this.props.sleep, newDataForCreate = _this$props$sleep4.newDataForCreate, records = _this$props$sleep4.records;\n              data_objs = [];\n              newDataForCreate.forEach(function (record_id) {\n                data_objs.push(_objectSpread({}, records.by_id[record_id]));\n              });\n              this.normalize(data_objs);\n              request_body = {\n                date: formatDate(this.state.date),\n                data_objs: data_objs\n              };\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/sleep', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                if (resJson['statusCode'] > 200) {\n                  return {\n                    success: false,\n                    status_code: resJson['statusCode'],\n                    data: resJson.message\n                  };\n                }\n\n                return {\n                  success: true,\n                  status_code: 200,\n                  data: resJson\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  data: err\n                };\n              }));\n\n            case 7:\n              createSleepRecordRes = _context3.sent;\n              return _context3.abrupt(\"return\", createSleepRecordRes);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"editRecord\",\n    value: function editRecord() {\n      var _this$props$sleep5, oldDataForEdit, records, data_objs, request_body, editRecordRes;\n\n      return _regeneratorRuntime.async(function editRecord$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props$sleep5 = this.props.sleep, oldDataForEdit = _this$props$sleep5.oldDataForEdit, records = _this$props$sleep5.records;\n              data_objs = [];\n              oldDataForEdit.forEach(function (record_id) {\n                data_objs.push(_objectSpread({\n                  record_id: record_id\n                }, records.by_id[record_id]));\n              });\n              this.normalize(data_objs);\n              request_body = {\n                date: formatDate(new Date()),\n                data_objs: data_objs\n              };\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/sleep', {\n                method: 'PUT',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                if (resJson['statusCode'] > 200) {\n                  return {\n                    success: false,\n                    status_code: resJson['statusCode'],\n                    data: resJson.message\n                  };\n                }\n\n                return {\n                  success: true,\n                  status_code: 200,\n                  data: resJson\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  data: err\n                };\n              }));\n\n            case 7:\n              editRecordRes = _context4.sent;\n              return _context4.abrupt(\"return\", editRecordRes);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"confirmToRemoveRecord\",\n    value: function confirmToRemoveRecord(record_id, student_id) {\n      var _this3 = this;\n\n      Alert.alert('確定要刪除？', '', [{\n        text: 'Yes',\n        onPress: function onPress() {\n          return _this3.removeRecord(record_id, student_id);\n        }\n      }, {\n        text: 'Cancel',\n        style: 'cancel'\n      }]);\n    }\n  }, {\n    key: \"removeRecord\",\n    value: function removeRecord(record_id, student_id) {\n      var _this4 = this;\n\n      var newDataForCreate = this.props.sleep.newDataForCreate;\n      var isConnected = this.props.class.isConnected;\n\n      if (newDataForCreate.has(record_id)) {\n        this.props.removeSleepRecordSuccess(record_id, student_id);\n        return;\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n        return;\n      }\n\n      var query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/sleep\";\n      fetch(query, {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          record_id: record_id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        var statusCode = resJson.statusCode,\n            message = resJson.message;\n\n        if (statusCode > 200 || message === 'Internal Server Error') {\n          _this4.props.removeSleepRecordFail(message);\n\n          return {\n            success: false,\n            statusCode: statusCode,\n            message: message\n          };\n        }\n\n        _this4.props.removeSleepRecordSuccess(record_id, student_id);\n\n        return {\n          success: true,\n          statusCode: statusCode,\n          message: message\n        };\n      }).catch(function (err) {\n        _this4.props.removeSleepRecordFail(err);\n\n        return {\n          success: false,\n          message: err\n        };\n      });\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(data_objs) {\n      for (var i = 0; i < data_objs.length; i++) {\n        data_objs[i].sleep_time = formatTime(data_objs[i].sleep_time);\n        data_objs[i].wake_time = data_objs[i].wake_time === null ? null : formatTime(data_objs[i].wake_time);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.props.sleep.errorMessage !== '') {\n        Alert.alert('Add new record fail', this.props.sleep.errorMessage, [{\n          text: 'OK',\n          onPress: function onPress() {\n            return _this5.props.clearSleeplogErrorMessage();\n          }\n        }]);\n      }\n\n      var records_with_error = this.props.sleep.records_with_error;\n      var _this$state = this.state,\n          showDateTimeModal = _this$state.showDateTimeModal,\n          start_time = _this$state.start_time,\n          date = _this$state.date;\n\n      if (this.state.isLoading) {\n        return React.createElement(Reloading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }\n      }, showDateTimeModal ? React.createElement(TimeModal, {\n        start_date: start_time,\n        datetime_type: 'time',\n        hideModal: function hideModal() {\n          return _this5.setState({\n            showDateTimeModal: false\n          });\n        },\n        selectDatetimeConfirm: function selectDatetimeConfirm(time) {\n          return _this5.updateReducerTime(_this5.state.index, time);\n        },\n        minDatetime: null,\n        maxDatetime: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }\n      }) : null, React.createElement(View, {\n        style: styles.subHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }\n      }, date.getFullYear() + '.' + (date.getMonth() + 1) + '.' + date.getDate())), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          alignSelf: 'flex-end',\n          backgroundColor: '#dcf3d0',\n          padding: 10,\n          marginRight: 50\n        },\n        onPress: this.handleSend,\n        underlayColor: \"#00c07f\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          color: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 29\n        }\n      }, \"\\u9001\\u51FA\")))), React.createElement(Content, {\n        contentContainerStyle: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 17\n        }\n      }, Object.keys(this.props.class.students).map(function (student_id) {\n        var record_id_array = _this5.props.sleep.by_student_id[student_id];\n        var records = _this5.props.sleep.records.by_id;\n        var last_record = record_id_array.length > 0 ? records[record_id_array[record_id_array.length - 1]] : null;\n        var current_sleep_time = last_record ? last_record.sleep_time : null;\n        var current_wake_time = last_record ? last_record.wake_time : null;\n        return React.createElement(View, {\n          key: student_id,\n          style: {\n            width: '98%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          style: {\n            flex: 1,\n            paddingVertical: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 33\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 41\n          }\n        }, React.createElement(TouchableHighlight, {\n          key: student_id,\n          style: styles.thumbnail,\n          onPress: function onPress() {\n            return _this5.handleOnClick(student_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 45\n          }\n        }, React.createElement(Image, {\n          source: _this5.props.class.students[student_id].profile_picture === '' ? require(\"../../../assets/icon-thumbnail.png\") : {\n            uri: _this5.props.class.students[student_id].profile_picture\n          },\n          style: {\n            width: 140,\n            height: 140,\n            borderRadius: 70,\n            borderWidth: 8,\n            borderColor: current_sleep_time !== null ? current_wake_time === null ? '#ffe1d0' : '#dcf3d0' : '#dcf3d0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 49\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 53\n          }\n        }, _this5.props.class.students[student_id].name)), React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'flex-end'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 49\n          }\n        }, _this5.hasUnsentRecord(student_id) ? React.createElement(Text, {\n          style: {\n            color: 'red',\n            fontSize: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 57\n          }\n        }, \"\\u672A\\u9001\\u51FA\") : null)), React.createElement(View, {\n          style: styles.cardBody,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '40%',\n            height: '100%',\n            paddingLeft: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 53\n          }\n        }, \"\\u5F9E\")), React.createElement(View, {\n          style: {\n            width: '40%',\n            height: '100%',\n            paddingLeft: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 53\n          }\n        }, \"\\u5230\"))), record_id_array.map(function (record_id, index) {\n          var _records$record_id = records[record_id],\n              sleep_time = _records$record_id.sleep_time,\n              wake_time = _records$record_id.wake_time;\n          return React.createElement(View, {\n            key: record_id,\n            style: _objectSpread(_objectSpread({}, styles.cardBody), {}, {\n              borderWidth: 2,\n              borderColor: records_with_error.has(record_id) ? 'red' : 'white'\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 53\n            }\n          }, React.createElement(View, {\n            style: {\n              width: '35%',\n              marginRight: '3%',\n              height: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 57\n            }\n          }, React.createElement(TouchableHighlight, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              backgroundColor: '#fef6dd',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this5.setTime('sleep', student_id, index, sleep_time);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 61\n            }\n          }, sleep_time === null ? React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 69\n            }\n          }, \"\\u9078\\u64C7\\u6642\\u9593\") : React.createElement(Text, {\n            style: {\n              fontSize: 35,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 69\n            }\n          }, sleep_time.getHours() + ':' + sleep_time.getMinutes()))), React.createElement(View, {\n            style: {\n              width: '35%',\n              marginRight: '3%',\n              height: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 57\n            }\n          }, React.createElement(TouchableHighlight, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              backgroundColor: '#fef6dd',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this5.setTime('wake', student_id, index, wake_time);\n            },\n            onLongPress: function onLongPress() {\n              return _this5.confirmToRemoveWakeTime(record_id, index, student_id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 61\n            }\n          }, wake_time === null ? React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 69\n            }\n          }, \"\\u9078\\u64C7\\u6642\\u9593\") : React.createElement(Text, {\n            style: {\n              fontSize: 35,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 69\n            }\n          }, wake_time.getHours() + ':' + wake_time.getMinutes()))), React.createElement(View, {\n            style: {\n              width: '20%',\n              marginRight: '4%',\n              height: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 57\n            }\n          }, React.createElement(TouchableHighlight, {\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              backgroundColor: '#ffe1d0',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this5.confirmToRemoveRecord(record_id, student_id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 65\n            }\n          }, \"\\u79FB\\u9664\"))));\n        })))));\n      })));\n    }\n  }]);\n\n  return TeacherSleepLog;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  thumbnail: {},\n  subHeading: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  cardBody: {\n    flex: 1,\n    flexDirection: 'row',\n    marginVertical: 6\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    class: state.classInfo,\n    sleep: state.sleep\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    setSleepTime: setSleepTime,\n    setWakeTime: setWakeTime,\n    fetchClassSleepData: fetchClassSleepData,\n    clearPendingSleepUpdate: clearPendingSleepUpdate,\n    createSleepRecordSuccess: createSleepRecordSuccess,\n    createSleepRecordFail: createSleepRecordFail,\n    editSleepRecordSuccess: editSleepRecordSuccess,\n    editSleepRecordFail: editSleepRecordFail,\n    removeSleepRecord: removeSleepRecord,\n    removeSleepRecordSuccess: removeSleepRecordSuccess,\n    removeSleepRecordFail: removeSleepRecordFail,\n    alertSleeplogErrorMessage: alertSleeplogErrorMessage,\n    clearSleeplogErrorMessage: clearSleeplogErrorMessage,\n    removeWakeTime: removeWakeTime,\n    markRecordError: markRecordError,\n    markRecordCorrect: markRecordCorrect\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSleepLog);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/sleeplog.js"],"names":["React","Container","Content","Text","View","Card","Toast","connect","bindActionCreators","setSleepTime","setWakeTime","fetchClassSleepData","clearPendingSleepUpdate","createSleepRecordSuccess","createSleepRecordFail","editSleepRecordSuccess","editSleepRecordFail","removeSleepRecord","removeSleepRecordSuccess","removeSleepRecordFail","alertSleeplogErrorMessage","clearSleeplogErrorMessage","removeWakeTime","markRecordError","markRecordCorrect","formatDate","formatTime","fetchClassData","Reloading","TimeModal","TeacherSleepLog","props","state","isLoading","date","Date","showIOSDatePicker","student_id","index","recordType","teacher_id","confirmDelete","showDateTimeModal","handleOnClick","bind","handleSend","updateReducerTime","setTime","sleep","newDataForCreate","oldDataForEdit","isConnected","class","route","params","setState","size","show","text","buttonText","position","type","duration","start_date","setDate","getDate","end_date","class_id","sleepData","denormalize","data","records","all_id","length","by_id","record_id","sleep_time","wake_time","by_student_id","record_id_array","hasUnsentRecord","i","has","last_record","current_wake_time","checkLastRecord","n","last_record_id","getTime","last_second_record_id","last_second_record","start_time","time","checkRecord","record","records_with_error","prev_record_id","next_record_id","prev_record","next_record","Alert","alert","onPress","style","createRecord","createSleepRecordRes","success","editRecord","editSleepRecordRes","navigation","goBack","data_objs","forEach","push","normalize","request_body","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","status_code","message","catch","err","editRecordRes","removeRecord","query","statusCode","errorMessage","styles","subHeading","flex","alignItems","fontSize","getFullYear","getMonth","justifyContent","alignSelf","backgroundColor","padding","marginRight","color","Object","keys","students","map","current_sleep_time","width","paddingVertical","flexDirection","thumbnail","profile_picture","require","uri","height","borderRadius","borderWidth","borderColor","name","cardBody","paddingLeft","textAlign","getHours","getMinutes","confirmToRemoveWakeTime","confirmToRemoveRecord","Component","StyleSheet","create","marginVertical","mapStateToProps","classInfo","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CC,KAA/C,QAA2D,aAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,mBAHJ,EAIIC,uBAJJ,EAKIC,wBALJ,EAMIC,qBANJ,EAOIC,sBAPJ,EAQIC,mBARJ,EASIC,iBATJ,EAUIC,wBAVJ,EAWIC,qBAXJ,EAYIC,yBAZJ,EAaIC,yBAbJ,EAcIC,cAdJ,EAeIC,eAfJ,EAgBIC,iBAhBJ;AAkBA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,cAAc,IAAdA,eAAjC;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;;IAGMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFG;AAGTC,MAAAA,iBAAiB,EAAE,KAHV;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,KAAK,EAAE,CAAC,CALC;AAMTC,MAAAA,UAAU,EAAE,EANH;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,aAAa,EAAE,KARN;AASTC,MAAAA,iBAAiB,EAAE;AATV,KAAb;AAWA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,+BAAzB;AACA,UAAKG,OAAL,GAAe,MAAKA,OAAL,CAAaH,IAAb,+BAAf;AAhBe;AAiBlB;;;;wCAEmB;AAAA,8BAC6B,KAAKb,KAAL,CAAWiB,KADxC;AAAA,UACRC,gBADQ,qBACRA,gBADQ;AAAA,UACUC,cADV,qBACUA,cADV;AAAA,UAERC,WAFQ,GAEQ,KAAKpB,KAAL,CAAWqB,KAFnB,CAERD,WAFQ;AAAA,UAGRX,UAHQ,GAGO,KAAKT,KAAL,CAAWsB,KAAX,CAAiBC,MAHxB,CAGRd,UAHQ;AAIhB,WAAKe,QAAL,CAAc;AAAEf,QAAAA,UAAU,EAAVA;AAAF,OAAd;;AACA,UAAKS,gBAAgB,CAACO,IAAjB,GAAwBN,cAAc,CAACM,IAAvC,KAAgD,CAAjD,IAAuDL,WAA3D,EAAwE;AACpE,aAAKxB,cAAL;AACH,OAFD,MAGK;AACD,aAAK4B,QAAL,CAAc;AACVtB,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;;AAED,UAAI,CAACkB,WAAL,EAAkB;AACd7C,QAAAA,KAAK,CAACmD,IAAN,CAAW;AACPC,UAAAA,IAAI,EAAE,mBADC;AAEPC,UAAAA,UAAU,EAAE,MAFL;AAGPC,UAAAA,QAAQ,EAAE,KAHH;AAIPC,UAAAA,IAAI,EAAE,SAJC;AAKPC,UAAAA,QAAQ,EAAE;AALH,SAAX;AAOH;AACJ;;;;;;;;;AAGS5B,cAAAA,I,GAAO,IAAIC,IAAJ,E;AACP4B,cAAAA,U,GAAatC,UAAU,CAACS,IAAD,C;AAC7BA,cAAAA,IAAI,CAAC8B,OAAL,CAAa9B,IAAI,CAAC+B,OAAL,KAAiB,CAA9B;AACMC,cAAAA,Q,GAAWzC,UAAU,CAACS,IAAD,C;;+CACHP,eAAc,CAAC,OAAD,EAAU,KAAKI,KAAL,CAAWqB,KAAX,CAAiBe,QAA3B,EAAqCJ,UAArC,EAAiDG,QAAjD,C;;;AAAhCE,cAAAA,S;AACN,mBAAKC,WAAL,CAAiBD,SAAjB;AACA,mBAAKrC,KAAL,CAAWpB,mBAAX,CAA+ByD,SAAS,CAACE,IAAzC;AACA,mBAAKf,QAAL,CAAc;AACVtB,gBAAAA,SAAS,EAAE;AADD,eAAd;;;;;;;;;;;gCAKQmC,S,EAAW;AACnB,UAAI,CAACA,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,MAAnC,EAA2C;AACvC;AACH;;AAHkB,UAIXC,KAJW,GAIDN,SAAS,CAACE,IAAV,CAAeC,OAJd,CAIXG,KAJW;;AAKnB,WAAK,IAAIC,SAAT,IAAsBD,KAAtB,EAA6B;AACzBA,QAAAA,KAAK,CAACC,SAAD,CAAL,CAAiBC,UAAjB,GAA8B,IAAIzC,IAAJ,CAASuC,KAAK,CAACC,SAAD,CAAL,CAAiBC,UAA1B,CAA9B;AACAF,QAAAA,KAAK,CAACC,SAAD,CAAL,CAAiBE,SAAjB,GAA6BH,KAAK,CAACC,SAAD,CAAL,CAAiBE,SAAjB,KAA+B,IAA/B,GAAsC,IAAtC,GAA6C,IAAI1C,IAAJ,CAASuC,KAAK,CAACC,SAAD,CAAL,CAAiBE,SAA1B,CAA1E;AACH;;AACDT,MAAAA,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuBG,KAAvB,GAA+BA,KAA/B;AACH;;;oCAEerC,U,EAAY;AAAA,+BACoC,KAAKN,KAAL,CAAWiB,KAD/C;AAAA,UAChBC,gBADgB,sBAChBA,gBADgB;AAAA,UACEC,cADF,sBACEA,cADF;AAAA,UACkB4B,aADlB,sBACkBA,aADlB;AAExBC,MAAAA,eAAe,GAAGD,aAAa,CAACzC,UAAD,CAA/B;AACA,UAAI2C,eAAe,GAAG,KAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACN,MAApC,EAA4CQ,CAAC,EAA7C,EAAiD;AAC7C,YAAIhC,gBAAgB,CAACiC,GAAjB,CAAqBH,eAAe,CAACE,CAAD,CAApC,KAA4C/B,cAAc,CAACgC,GAAf,CAAmBH,eAAe,CAACE,CAAD,CAAlC,CAAhD,EAAwF;AACpFD,UAAAA,eAAe,GAAG,IAAlB;AACA;AACH;AACJ;;AACD,aAAOA,eAAP;AACH;;;kCAEa3C,U,EAAY;AACtB,UAAM0C,eAAe,GAAG,KAAKhD,KAAL,CAAWiB,KAAX,CAAiB8B,aAAjB,CAA+BzC,UAA/B,CAAxB;AACA,UAAMkC,OAAO,GAAG,KAAKxC,KAAL,CAAWiB,KAAX,CAAiBuB,OAAjB,CAAyBG,KAAzC;AACA,UAAMS,WAAW,GAAGJ,eAAe,CAACN,MAAhB,GAAyB,CAAzB,GAA6BF,OAAO,CAACQ,eAAe,CAACA,eAAe,CAACN,MAAhB,GAAyB,CAA1B,CAAhB,CAApC,GAAoF,IAAxG;AACA,UAAMW,iBAAiB,GAAGD,WAAW,GAAGA,WAAW,CAACN,SAAf,GAA2B,IAAhE;;AAEA,UAAI,CAACE,eAAe,CAACN,MAAjB,IAA2BW,iBAA/B,EAAkD;AAC9C,aAAKrD,KAAL,CAAWtB,YAAX,CAAwB4B,UAAxB,EAAoC,IAApC,EAA0C,IAAIF,IAAJ,EAA1C,EAAsD,KAAKH,KAAL,CAAWQ,UAAjE;AACH,OAFD,MAEO;AACH,aAAKT,KAAL,CAAWrB,WAAX,CAAuB2B,UAAvB,EAAmC0C,eAAe,CAACN,MAAhB,GAAyB,CAA5D,EAA+D,IAAItC,IAAJ,EAA/D,EAA2E,KAAKH,KAAL,CAAWQ,UAAtF;AACH;;AACD,WAAK6C,eAAL,CAAqBhD,UAArB,EAAiCkC,OAAjC,EAA0CQ,eAA1C;AACH;;;oCAEe1C,U,EAAYkC,O,EAASQ,e,EAAiB;AAClD,UAAMO,CAAC,GAAGP,eAAe,CAACN,MAA1B;AACA,UAAMc,cAAc,GAAGR,eAAe,CAACA,eAAe,CAACN,MAAhB,GAAyB,CAA1B,CAAtC;AACA,UAAMU,WAAW,GAAGZ,OAAO,CAACgB,cAAD,CAA3B;;AACA,UAAIJ,WAAW,CAACN,SAAZ,KAA0B,IAA1B,IAAkCM,WAAW,CAACP,UAAZ,CAAuBY,OAAvB,MAAoCL,WAAW,CAACN,SAAZ,CAAsBW,OAAtB,EAA1E,EAA2G;AACvG,aAAKzD,KAAL,CAAWR,eAAX,CAA2B,CAACgE,cAAD,CAA3B;AACH;;AAED,UAAID,CAAC,GAAG,CAAR,EAAW;AACP,YAAMG,qBAAqB,GAAGV,eAAe,CAACA,eAAe,CAACN,MAAhB,GAAyB,CAA1B,CAA7C;AACA,YAAMiB,kBAAkB,GAAGnB,OAAO,CAACkB,qBAAD,CAAlC;;AACA,YAAIN,WAAW,CAACP,UAAZ,IAA0Bc,kBAAkB,CAACd,UAA7C,IAA2DO,WAAW,CAACP,UAAZ,IAA0Bc,kBAAkB,CAACb,SAA5G,EAAuH;AACnH,eAAK9C,KAAL,CAAWR,eAAX,CAA2B,CAACgE,cAAD,CAA3B;AACH;AACJ;AACJ;;;4BAEOhD,U,EAAYF,U,EAAYC,K,EAAOqD,U,EAAY;AAC/C,WAAKpC,QAAL,CAAc;AACVlB,QAAAA,UAAU,EAAVA,UADU;AAEVC,QAAAA,KAAK,EAALA,KAFU;AAGVC,QAAAA,UAAU,EAAVA,UAHU;AAIVG,QAAAA,iBAAiB,EAAE,IAJT;AAKViD,QAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAH,GAAgB,IAAIxD,IAAJ;AAL5B,OAAd;AAOH;;;sCAEiBG,K,EAAOsD,I,EAAM;AAC3B,WAAKrC,QAAL,CAAc;AAAEb,QAAAA,iBAAiB,EAAE;AAArB,OAAd;;AACA,UAAI,KAAKV,KAAL,CAAWO,UAAX,KAA0B,OAA9B,EAAuC;AACnC,aAAKR,KAAL,CAAWtB,YAAX,CAAwB,KAAKuB,KAAL,CAAWK,UAAnC,EAA+CC,KAA/C,EAAsDsD,IAAtD,EAA4D,KAAK5D,KAAL,CAAWQ,UAAvE;AACH,OAFD,MAEO;AACH,aAAKT,KAAL,CAAWrB,WAAX,CAAuB,KAAKsB,KAAL,CAAWK,UAAlC,EAA8CC,KAA9C,EAAqDsD,IAArD,EAA2D,KAAK5D,KAAL,CAAWQ,UAAtE;AACH;;AACD,WAAKqD,WAAL,CAAiB,KAAK7D,KAAL,CAAWK,UAA5B,EAAwCC,KAAxC;AACH;;;gCAEWD,U,EAAYC,K,EAAO;AAC3B,UAAMyC,eAAe,GAAG,KAAKhD,KAAL,CAAWiB,KAAX,CAAiB8B,aAAjB,CAA+BzC,UAA/B,CAAxB;AACA,UAAMkC,OAAO,GAAG,KAAKxC,KAAL,CAAWiB,KAAX,CAAiBuB,OAAjB,CAAyBG,KAAzC;AACA,UAAMC,SAAS,GAAGI,eAAe,CAACzC,KAAD,CAAjC;AACA,UAAMwD,MAAM,GAAGvB,OAAO,CAACI,SAAD,CAAtB;AAJ2B,UAKnBoB,kBALmB,GAKI,KAAKhE,KAAL,CAAWiB,KALf,CAKnB+C,kBALmB;AAM3B,UAAIC,cAAc,GAAG,IAArB;AACA,UAAIC,cAAc,GAAG,IAArB;;AAEA,UAAI3D,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGyC,eAAe,CAACN,MAAhB,GAAyB,CAAlD,EAAqD;AACjD;AACH;;AAED,UAAIqB,MAAM,CAACjB,SAAP,KAAqB,IAAzB,EAA+B;AAC3B,YAAGiB,MAAM,CAAClB,UAAP,CAAkBY,OAAlB,MAA+BM,MAAM,CAACjB,SAAP,CAAiBW,OAAjB,EAAlC,EAA8D;AAC1D,eAAKzD,KAAL,CAAWR,eAAX,CAA2B,CAACoD,SAAD,CAA3B;AACA;AACH;AACJ;;AAED,UAAIrC,KAAK,GAAG,CAAZ,EAAe;AACX0D,QAAAA,cAAc,GAAGjB,eAAe,CAACzC,KAAK,GAAC,CAAP,CAAhC;AACA,YAAM4D,WAAW,GAAG3B,OAAO,CAACyB,cAAD,CAA3B;;AACA,YACIE,WAAW,CAACrB,SAAZ,KAA0B,IAA1B,IACAiB,MAAM,CAAClB,UAAP,CAAkBY,OAAlB,MAA+BU,WAAW,CAACrB,SAAZ,CAAsBW,OAAtB,EAFnC,EAEoE;AAChE,eAAKzD,KAAL,CAAWR,eAAX,CAA2B,CAACoD,SAAD,CAA3B;AACA;AACH;AACJ;;AAED,UAAIrC,KAAK,GAAGyC,eAAe,CAACN,MAAhB,GAAyB,CAArC,EAAwC;AACpCwB,QAAAA,cAAc,GAAGlB,eAAe,CAACzC,KAAK,GAAC,CAAP,CAAhC;AACA,YAAM6D,WAAW,GAAG5B,OAAO,CAAC0B,cAAD,CAA3B;;AACA,YAAIH,MAAM,CAACjB,SAAP,IAAoBsB,WAAW,CAACvB,UAApC,EAAgD;AAC5C,eAAK7C,KAAL,CAAWR,eAAX,CAA2B,CAACoD,SAAD,CAA3B;AACA;AACH;AACJ;;AAED,WAAK5C,KAAL,CAAWP,iBAAX,CAA6BmD,SAA7B;;AAEA,UAAIqB,cAAc,KAAK,IAAnB,IAA2BD,kBAAkB,CAACb,GAAnB,CAAuBc,cAAvB,CAA/B,EAAuE;AACnE,aAAKH,WAAL,CAAiBxD,UAAjB,EAA6BC,KAAK,GAAC,CAAnC;AAEH;;AAED,UAAI2D,cAAc,KAAK,IAAnB,IAA2BF,kBAAkB,CAACb,GAAnB,CAAuBe,cAAvB,CAA/B,EAAuE;AAEnE,aAAKJ,WAAL,CAAiBxD,UAAjB,EAA6BC,KAAK,GAAC,CAAnC;AACH;AACJ;;;4CAEuBqC,S,EAAWrC,K,EAAOD,U,EAAY;AAAA;;AAClD,UAAM0C,eAAe,GAAG,KAAKhD,KAAL,CAAWiB,KAAX,CAAiB8B,aAAjB,CAA+BzC,UAA/B,CAAxB;;AACA,UAAIC,KAAK,KAAKyC,eAAe,CAACN,MAAhB,GAAyB,CAAvC,EAA0C;AAEtC,aAAK1C,KAAL,CAAWX,yBAAX,CAAqC,kBAArC;AACA;AACH;;AACDgF,MAAAA,KAAK,CAACC,KAAN,CACI,QADJ,EAEI,EAFJ,EAGI,CACI;AAAE3C,QAAAA,IAAI,EAAE,KAAR;AAAe4C,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACvE,KAAL,CAAWT,cAAX,CAA0BqD,SAA1B,EAAqC,MAAI,CAAC3C,KAAL,CAAWQ,UAAhD,CAAN;AAAA;AAAxB,OADJ,EAEI;AAAEkB,QAAAA,IAAI,EAAE,QAAR;AAAkB6C,QAAAA,KAAK,EAAE;AAAzB,OAFJ,CAHJ;AAOH;;;;;;;;;;AAGWpD,cAAAA,W,GAAgB,KAAKpB,KAAL,CAAWqB,K,CAA3BD,W;;kBACHA,W;;;;;AACD7C,cAAAA,KAAK,CAACmD,IAAN,CAAW;AACPC,gBAAAA,IAAI,EAAE,mBADC;AAEPC,gBAAAA,UAAU,EAAE,MAFL;AAGPC,gBAAAA,QAAQ,EAAE,KAHH;AAIPC,gBAAAA,IAAI,EAAE,SAJC;AAKPC,gBAAAA,QAAQ,EAAE;AALH,eAAX;;;;AASJ,mBAAKP,QAAL,CAAc;AACVtB,gBAAAA,SAAS,EAAE;AADD,eAAd;mCAG6C,KAAKF,KAAL,CAAWiB,K,EAAhDC,gB,sBAAAA,gB,EAAkBC,c,sBAAAA,c;;mBAEtBD,gBAAgB,CAACO,I;;;;;;+CACkB,KAAKgD,YAAL,E;;;AAA7BC,cAAAA,oB;;mBACFA,oBAAoB,CAACC,O;;;;;AAErB,mBAAK3E,KAAL,CAAWlB,wBAAX;;;;;AAEA,mBAAKkB,KAAL,CAAWjB,qBAAX;;;;mBAKJoC,cAAc,CAACM,I;;;;;;+CACkB,KAAKmD,UAAL,E;;;AAA3BC,cAAAA,kB;;mBACFA,kBAAkB,CAACF,O;;;;;AACnB,mBAAK3E,KAAL,CAAWhB,sBAAX;;;;;AAEA,mBAAKgB,KAAL,CAAWf,mBAAX;;;;AAKR,mBAAKe,KAAL,CAAW8E,UAAX,CAAsBC,MAAtB;;;;;;;;;;;;;;;;;;mCAIsC,KAAK/E,KAAL,CAAWiB,K,EAAzCC,gB,sBAAAA,gB,EAAkBsB,O,sBAAAA,O;AAEpBwC,cAAAA,S,GAAY,E;AAClB9D,cAAAA,gBAAgB,CAAC+D,OAAjB,CAAyB,UAAArC,SAAS,EAAI;AAClCoC,gBAAAA,SAAS,CAACE,IAAV,mBACO1C,OAAO,CAACG,KAAR,CAAcC,SAAd,CADP;AAGH,eAJD;AAMA,mBAAKuC,SAAL,CAAeH,SAAf;AAEII,cAAAA,Y,GAAe;AACfjF,gBAAAA,IAAI,EAAET,UAAU,CAAC,KAAKO,KAAL,CAAWE,IAAZ,CADD;AAEf6E,gBAAAA,SAAS,EAATA;AAFe,e;;+CAKgBK,KAAK,CAAC,kEAAD,EAAqE;AACzGC,gBAAAA,MAAM,EAAE,MADiG;AAEzGC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,MAAM,EAAE,kBADH;AAEL,kCAAgB;AAFX,iBAFgG;AAMzGC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,YAAf;AANmG,eAArE,CAAL,CAQ9BQ,IAR8B,CAQzB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eARsB,EAS9BF,IAT8B,CASzB,UAAAG,OAAO,EAAI;AAEb,oBAAIA,OAAO,CAAC,YAAD,CAAP,GAAwB,GAA5B,EAAiC;AAC7B,yBAAO;AACHpB,oBAAAA,OAAO,EAAE,KADN;AAEHqB,oBAAAA,WAAW,EAAED,OAAO,CAAC,YAAD,CAFjB;AAGHxD,oBAAAA,IAAI,EAAEwD,OAAO,CAACE;AAHX,mBAAP;AAKH;;AACD,uBAAO;AACHtB,kBAAAA,OAAO,EAAE,IADN;AAEHqB,kBAAAA,WAAW,EAAE,GAFV;AAGHzD,kBAAAA,IAAI,EAAEwD;AAHH,iBAAP;AAKH,eAvB8B,EAwB9BG,KAxB8B,CAwBxB,UAAAC,GAAG,EAAI;AACV,uBAAO;AACHxB,kBAAAA,OAAO,EAAE,KADN;AAEHqB,kBAAAA,WAAW,EAAE,GAFV;AAGHzD,kBAAAA,IAAI,EAAE4D;AAHH,iBAAP;AAKH,eA9B8B,C;;;AAA7BzB,cAAAA,oB;gDA+BCA,oB;;;;;;;;;;;;;;;;;;mCAI6B,KAAK1E,KAAL,CAAWiB,K,EAAvCE,c,sBAAAA,c,EAAgBqB,O,sBAAAA,O;AAClBwC,cAAAA,S,GAAY,E;AAClB7D,cAAAA,cAAc,CAAC8D,OAAf,CAAuB,UAAArC,SAAS,EAAI;AAChCoC,gBAAAA,SAAS,CAACE,IAAV;AACItC,kBAAAA,SAAS,EAATA;AADJ,mBAEOJ,OAAO,CAACG,KAAR,CAAcC,SAAd,CAFP;AAIH,eALD;AAOA,mBAAKuC,SAAL,CAAeH,SAAf;AAEMI,cAAAA,Y,GAAe;AACjBjF,gBAAAA,IAAI,EAAET,UAAU,CAAC,IAAIU,IAAJ,EAAD,CADC;AAEjB4E,gBAAAA,SAAS,EAATA;AAFiB,e;;+CAKOK,KAAK,CAAC,kEAAD,EAAqE;AAClGC,gBAAAA,MAAM,EAAE,KAD0F;AAElGC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,MAAM,EAAE,kBADH;AAEL,kCAAgB;AAFX,iBAFyF;AAMlGC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,YAAf;AAN4F,eAArE,CAAL,CAOzBQ,IAPyB,CAOpB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAPiB,EAQ3BF,IAR2B,CAQtB,UAAAG,OAAO,EAAI;AACb,oBAAIA,OAAO,CAAC,YAAD,CAAP,GAAwB,GAA5B,EAAiC;AAC7B,yBAAO;AACHpB,oBAAAA,OAAO,EAAE,KADN;AAEHqB,oBAAAA,WAAW,EAAED,OAAO,CAAC,YAAD,CAFjB;AAGHxD,oBAAAA,IAAI,EAAEwD,OAAO,CAACE;AAHX,mBAAP;AAKH;;AACD,uBAAO;AACHtB,kBAAAA,OAAO,EAAE,IADN;AAEHqB,kBAAAA,WAAW,EAAE,GAFV;AAGHzD,kBAAAA,IAAI,EAAEwD;AAHH,iBAAP;AAKH,eArB2B,EAsB3BG,KAtB2B,CAsBrB,UAAAC,GAAG,EAAI;AACV,uBAAO;AACHxB,kBAAAA,OAAO,EAAE,KADN;AAEHqB,kBAAAA,WAAW,EAAE,GAFV;AAGHzD,kBAAAA,IAAI,EAAE4D;AAHH,iBAAP;AAKH,eA5B2B,C;;;AAAtBC,cAAAA,a;gDA6BCA,a;;;;;;;;;;;0CAGWxD,S,EAAWtC,U,EAAY;AAAA;;AACzC+D,MAAAA,KAAK,CAACC,KAAN,CACI,QADJ,EAEI,EAFJ,EAGI,CACI;AAAE3C,QAAAA,IAAI,EAAE,KAAR;AAAe4C,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC8B,YAAL,CAAkBzD,SAAlB,EAA6BtC,UAA7B,CAAN;AAAA;AAAxB,OADJ,EAEI;AAAEqB,QAAAA,IAAI,EAAE,QAAR;AAAkB6C,QAAAA,KAAK,EAAE;AAAzB,OAFJ,CAHJ;AAQH;;;iCAEY5B,S,EAAWtC,U,EAAY;AAAA;;AAAA,UACxBY,gBADwB,GACH,KAAKlB,KAAL,CAAWiB,KADR,CACxBC,gBADwB;AAAA,UAExBE,WAFwB,GAER,KAAKpB,KAAL,CAAWqB,KAFH,CAExBD,WAFwB;;AAIhC,UAAIF,gBAAgB,CAACiC,GAAjB,CAAqBP,SAArB,CAAJ,EAAqC;AACjC,aAAK5C,KAAL,CAAWb,wBAAX,CAAoCyD,SAApC,EAA+CtC,UAA/C;AACA;AACH;;AAED,UAAI,CAACc,WAAL,EAAkB;AACd7C,QAAAA,KAAK,CAACmD,IAAN,CAAW;AACPC,UAAAA,IAAI,EAAE,mBADC;AAEPC,UAAAA,UAAU,EAAE,MAFL;AAGPC,UAAAA,QAAQ,EAAE,KAHH;AAIPC,UAAAA,IAAI,EAAE,SAJC;AAKPC,UAAAA,QAAQ,EAAE;AALH,SAAX;AAOA;AACH;;AAED,UAAMuE,KAAK,qEAAX;AACAjB,MAAAA,KAAK,CAACiB,KAAD,EAAQ;AACThB,QAAAA,MAAM,EAAE,QADC;AAETC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFA;AAMTC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB/C,UAAAA,SAAS,EAATA;AADiB,SAAf;AANG,OAAR,CAAL,CAUKgD,IAVL,CAUU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVb,EAWKF,IAXL,CAWU,UAAAG,OAAO,EAAI;AAAA,YACLQ,UADK,GACmBR,OADnB,CACLQ,UADK;AAAA,YACON,OADP,GACmBF,OADnB,CACOE,OADP;;AAEb,YAAIM,UAAU,GAAG,GAAb,IAAoBN,OAAO,KAAK,uBAApC,EAA6D;AACzD,UAAA,MAAI,CAACjG,KAAL,CAAWZ,qBAAX,CAAiC6G,OAAjC;;AACA,iBAAO;AACHtB,YAAAA,OAAO,EAAE,KADN;AAEH4B,YAAAA,UAAU,EAAVA,UAFG;AAGHN,YAAAA,OAAO,EAAPA;AAHG,WAAP;AAKH;;AACD,QAAA,MAAI,CAACjG,KAAL,CAAWb,wBAAX,CAAoCyD,SAApC,EAA+CtC,UAA/C;;AACA,eAAO;AACHqE,UAAAA,OAAO,EAAE,IADN;AAEH4B,UAAAA,UAAU,EAAVA,UAFG;AAGHN,UAAAA,OAAO,EAAPA;AAHG,SAAP;AAKH,OA3BL,EA4BKC,KA5BL,CA4BW,UAAAC,GAAG,EAAI;AACV,QAAA,MAAI,CAACnG,KAAL,CAAWZ,qBAAX,CAAiC+G,GAAjC;;AACA,eAAO;AACHxB,UAAAA,OAAO,EAAE,KADN;AAEHsB,UAAAA,OAAO,EAAEE;AAFN,SAAP;AAIP,OAlCD;AAmCH;;;8BAESnB,S,EAAW;AACjB,WAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,SAAS,CAACtC,MAA9B,EAAsCQ,CAAC,EAAvC,EAA2C;AACvC8B,QAAAA,SAAS,CAAC9B,CAAD,CAAT,CAAaL,UAAb,GAA0BlD,UAAU,CAACqF,SAAS,CAAC9B,CAAD,CAAT,CAAaL,UAAd,CAApC;AACAmC,QAAAA,SAAS,CAAC9B,CAAD,CAAT,CAAaJ,SAAb,GAAyBkC,SAAS,CAAC9B,CAAD,CAAT,CAAaJ,SAAb,KAA2B,IAA3B,GAAkC,IAAlC,GAAyCnD,UAAU,CAACqF,SAAS,CAAC9B,CAAD,CAAT,CAAaJ,SAAd,CAA5E;AACH;AACJ;;;6BAEQ;AAAA;;AACL,UAAI,KAAK9C,KAAL,CAAWiB,KAAX,CAAiBuF,YAAjB,KAAkC,EAAtC,EAAyC;AACrCnC,QAAAA,KAAK,CAACC,KAAN,CACI,qBADJ,EAEI,KAAKtE,KAAL,CAAWiB,KAAX,CAAiBuF,YAFrB,EAGI,CAAC;AAAC7E,UAAAA,IAAI,EAAE,IAAP;AAAa4C,UAAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACvE,KAAL,CAAWV,yBAAX,EAAN;AAAA;AAAtB,SAAD,CAHJ;AAKH;;AAPI,UAQG0E,kBARH,GAQ0B,KAAKhE,KAAL,CAAWiB,KARrC,CAQG+C,kBARH;AAAA,wBAS2C,KAAK/D,KAThD;AAAA,UASGU,iBATH,eASGA,iBATH;AAAA,UASsBiD,UATtB,eASsBA,UATtB;AAAA,UASkCzD,IATlC,eASkCA,IATlC;;AAYL,UAAI,KAAKF,KAAL,CAAWC,SAAf,EAA0B;AACtB,eAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKS,iBAAiB,GACd,oBAAC,SAAD;AACI,QAAA,UAAU,EAAEiD,UADhB;AAEI,QAAA,aAAa,EAAE,MAFnB;AAGI,QAAA,SAAS,EAAE;AAAA,iBAAM,MAAI,CAACpC,QAAL,CAAc;AAAEb,YAAAA,iBAAiB,EAAE;AAArB,WAAd,CAAN;AAAA,SAHf;AAII,QAAA,qBAAqB,EAAE,+BAACkD,IAAD;AAAA,iBAAU,MAAI,CAAC9C,iBAAL,CAAuB,MAAI,CAACd,KAAL,CAAWM,KAAlC,EAAyCsD,IAAzC,CAAV;AAAA,SAJ3B;AAKI,QAAA,WAAW,EAAE,IALjB;AAMI,QAAA,WAAW,EAAE,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc,GASZ,IAVV,EAYI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE4C,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC1G,IAAI,CAAC2G,WAAL,KAAqB,GAArB,IAA4B3G,IAAI,CAAC4G,QAAL,KAAgB,CAA5C,IAAiD,GAAjD,GAAuD5G,IAAI,CAAC+B,OAAL,EAAvF,CADJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEyE,UAAAA,IAAI,EAAE,CAAR;AAAWK,UAAAA,cAAc,EAAE;AAA3B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,kBAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,UAAb;AAAyBC,UAAAA,eAAe,EAAE,SAA1C;AAAqDC,UAAAA,OAAO,EAAE,EAA9D;AAAkEC,UAAAA,WAAW,EAAE;AAA/E,SADX;AAEI,QAAA,OAAO,EAAE,KAAKtG,UAFlB;AAGI,QAAA,aAAa,EAAC,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE+F,UAAAA,QAAQ,EAAE,EAAZ;AAAgBQ,UAAAA,KAAK,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,CADJ,CALJ,CAZJ,EA2BI,oBAAC,OAAD;AAAS,QAAA,qBAAqB,EAAE;AAAET,UAAAA,UAAU,EAAE;AAAd,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKU,MAAM,CAACC,IAAP,CAAY,KAAKvH,KAAL,CAAWqB,KAAX,CAAiBmG,QAA7B,EAAuCC,GAAvC,CAA2C,UAACnH,UAAD,EAAgB;AACxD,YAAM0C,eAAe,GAAG,MAAI,CAAChD,KAAL,CAAWiB,KAAX,CAAiB8B,aAAjB,CAA+BzC,UAA/B,CAAxB;AACA,YAAMkC,OAAO,GAAG,MAAI,CAACxC,KAAL,CAAWiB,KAAX,CAAiBuB,OAAjB,CAAyBG,KAAzC;AACA,YAAMS,WAAW,GAAGJ,eAAe,CAACN,MAAhB,GAAyB,CAAzB,GAA6BF,OAAO,CAACQ,eAAe,CAACA,eAAe,CAACN,MAAhB,GAAyB,CAA1B,CAAhB,CAApC,GAAoF,IAAxG;AACA,YAAMgF,kBAAkB,GAAGtE,WAAW,GAAGA,WAAW,CAACP,UAAf,GAA4B,IAAlE;AACA,YAAMQ,iBAAiB,GAAGD,WAAW,GAAGA,WAAW,CAACN,SAAf,GAA2B,IAAhE;AACA,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAExC,UAAX;AAAuB,UAAA,KAAK,EAAE;AAAEqH,YAAAA,KAAK,EAAE;AAAT,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEhB,YAAAA,IAAI,EAAE,CAAR;AAAWiB,YAAAA,eAAe,EAAE;AAA5B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEjB,YAAAA,IAAI,EAAE,CAAR;AAAWkB,YAAAA,aAAa,EAAE;AAA1B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAElB,YAAAA,IAAI,EAAE,CAAR;AAAWK,YAAAA,cAAc,EAAE,QAA3B;AAAqCJ,YAAAA,UAAU,EAAE;AAAjD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,kBAAD;AACI,UAAA,GAAG,EAAEtG,UADT;AAEI,UAAA,KAAK,EAAEmG,MAAM,CAACqB,SAFlB;AAGI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAClH,aAAL,CAAmBN,UAAnB,CAAN;AAAA,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII,oBAAC,KAAD;AACI,UAAA,MAAM,EACF,MAAI,CAACN,KAAL,CAAWqB,KAAX,CAAiBmG,QAAjB,CAA0BlH,UAA1B,EAAsCyH,eAAtC,KAA0D,EAA1D,GACIC,OAAO,sCADX,GAEM;AAACC,YAAAA,GAAG,EAAE,MAAI,CAACjI,KAAL,CAAWqB,KAAX,CAAiBmG,QAAjB,CAA0BlH,UAA1B,EAAsCyH;AAA5C,WAJd;AAMI,UAAA,KAAK,EAAE;AACHJ,YAAAA,KAAK,EAAE,GADJ;AAEHO,YAAAA,MAAM,EAAE,GAFL;AAGHC,YAAAA,YAAY,EAAE,EAHX;AAIHC,YAAAA,WAAW,EAAE,CAJV;AAKHC,YAAAA,WAAW,EAAEX,kBAAkB,KAAK,IAAvB,GAA+BrE,iBAAiB,KAAK,IAAtB,GAA6B,SAA7B,GAAyC,SAAxE,GAAqF;AAL/F,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,CADJ,CADJ,EAqBI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEsD,YAAAA,IAAI,EAAE;AAAR,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEA,YAAAA,IAAI,EAAE,CAAR;AAAWkB,YAAAA,aAAa,EAAE,KAA1B;AAAiCV,YAAAA,OAAO,EAAE;AAA1C,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAER,YAAAA,IAAI,EAAE;AAAR,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgC,MAAI,CAAC7G,KAAL,CAAWqB,KAAX,CAAiBmG,QAAjB,CAA0BlH,UAA1B,EAAsCgI,IAAtE,CADJ,CADJ,EAII,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE3B,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,UAAU,EAAE;AAAvB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAI,CAAC3D,eAAL,CAAqB3C,UAArB,IACG,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE+G,YAAAA,KAAK,EAAE,KAAT;AAAgBR,YAAAA,QAAQ,EAAE;AAA1B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADH,GAEC,IAHN,CAJJ,CADJ,EAWI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAAC8B,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEZ,YAAAA,KAAK,EAAE,KAAT;AAAgBO,YAAAA,MAAM,EAAE,MAAxB;AAAgCM,YAAAA,WAAW,EAAE;AAA7C,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE3B,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEc,YAAAA,KAAK,EAAE,KAAT;AAAgBO,YAAAA,MAAM,EAAE,MAAxB;AAAgCM,YAAAA,WAAW,EAAE;AAA7C,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE3B,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAJJ,CAXJ,EAmBK7D,eAAe,CAACyE,GAAhB,CAAoB,UAAC7E,SAAD,EAAYrC,KAAZ,EAAsB;AAAA,mCACPiC,OAAO,CAACI,SAAD,CADA;AAAA,cACjCC,UADiC,sBACjCA,UADiC;AAAA,cACrBC,SADqB,sBACrBA,SADqB;AAEvC,iBACI,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEF,SAAX;AAAsB,YAAA,KAAK,kCACpB6D,MAAM,CAAC8B,QADa;AAEvBH,cAAAA,WAAW,EAAE,CAFU;AAGvBC,cAAAA,WAAW,EAAErE,kBAAkB,CAACb,GAAnB,CAAuBP,SAAvB,IAAoC,KAApC,GAA4C;AAHlC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKI,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAE+E,cAAAA,KAAK,EAAE,KAAT;AAAgBP,cAAAA,WAAW,EAAE,IAA7B;AAAmCc,cAAAA,MAAM,EAAE;AAA3C,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,kBAAD;AACI,YAAA,KAAK,EAAE;AAAEvB,cAAAA,IAAI,EAAE,CAAR;AAAWK,cAAAA,cAAc,EAAE,QAA3B;AAAqCE,cAAAA,eAAe,EAAE,SAAtD;AAAiEiB,cAAAA,YAAY,EAAE;AAA/E,aADX;AAEI,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACnH,OAAL,CAAa,OAAb,EAAsBV,UAAtB,EAAkCC,KAAlC,EAAyCsC,UAAzC,CAAN;AAAA,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIKA,UAAU,KAAK,IAAf,GACG,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEgE,cAAAA,QAAQ,EAAE,EAAZ;AAAgB4B,cAAAA,SAAS,EAAE;AAA3B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADH,GAEG,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAE5B,cAAAA,QAAQ,EAAE,EAAZ;AAAgB4B,cAAAA,SAAS,EAAE;AAA3B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK5F,UAAU,CAAC6F,QAAX,KAAwB,GAAxB,GAA8B7F,UAAU,CAAC8F,UAAX,EADnC,CANR,CADJ,CALJ,EAiBI,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEhB,cAAAA,KAAK,EAAE,KAAT;AAAgBP,cAAAA,WAAW,EAAE,IAA7B;AAAmCc,cAAAA,MAAM,EAAE;AAA3C,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,kBAAD;AACI,YAAA,KAAK,EAAE;AAAEvB,cAAAA,IAAI,EAAE,CAAR;AAAWK,cAAAA,cAAc,EAAE,QAA3B;AAAqCE,cAAAA,eAAe,EAAE,SAAtD;AAAiEiB,cAAAA,YAAY,EAAE;AAA/E,aADX;AAEI,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACnH,OAAL,CAAa,MAAb,EAAqBV,UAArB,EAAiCC,KAAjC,EAAwCuC,SAAxC,CAAN;AAAA,aAFb;AAGI,YAAA,WAAW,EAAE;AAAA,qBAAM,MAAI,CAAC8F,uBAAL,CAA6BhG,SAA7B,EAAwCrC,KAAxC,EAA+CD,UAA/C,CAAN;AAAA,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKKwC,SAAS,KAAK,IAAd,GACG,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAE+D,cAAAA,QAAQ,EAAE,EAAZ;AAAgB4B,cAAAA,SAAS,EAAE;AAA3B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADH,GAEG,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAE5B,cAAAA,QAAQ,EAAE,EAAZ;AAAgB4B,cAAAA,SAAS,EAAE;AAA3B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK3F,SAAS,CAAC4F,QAAV,KAAuB,GAAvB,GAA6B5F,SAAS,CAAC6F,UAAV,EADlC,CAPR,CADJ,CAjBJ,EA8BI,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEhB,cAAAA,KAAK,EAAE,KAAT;AAAgBP,cAAAA,WAAW,EAAE,IAA7B;AAAmCc,cAAAA,MAAM,EAAE;AAA3C,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,kBAAD;AACI,YAAA,KAAK,EAAE;AAAEvB,cAAAA,IAAI,EAAE,CAAR;AAAWK,cAAAA,cAAc,EAAE,QAA3B;AAAqCE,cAAAA,eAAe,EAAE,SAAtD;AAAiEiB,cAAAA,YAAY,EAAE;AAA/E,aADX;AAEI,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACU,qBAAL,CAA2BjG,SAA3B,EAAsCtC,UAAtC,CAAN;AAAA,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAII,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEuG,cAAAA,QAAQ,EAAE,EAAZ;AAAgB4B,cAAAA,SAAS,EAAE;AAA3B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,CADJ,CA9BJ,CADJ;AAyCH,SA3CA,CAnBL,CArBJ,CADJ,CADJ,CADJ;AA4FH,OAlGA,CADL,CA3BJ,CADJ;AA2IH;;;;EA9jByBxK,KAAK,CAAC6K,S;;AAikBpC,IAAMrC,MAAM,GAAGsC,UAAU,CAACC,MAAX,CAAkB;AAC7BlB,EAAAA,SAAS,EAAE,EADkB;AAQ7BpB,EAAAA,UAAU,EAAE;AAKRmB,IAAAA,aAAa,EAAE,KALP;AAMRjB,IAAAA,UAAU,EAAE;AANJ,GARiB;AAiB7B2B,EAAAA,QAAQ,EAAE;AACN5B,IAAAA,IAAI,EAAE,CADA;AAENkB,IAAAA,aAAa,EAAE,KAFT;AAGNoB,IAAAA,cAAc,EAAE;AAHV;AAjBmB,CAAlB,CAAf;;AAwBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACjJ,KAAD,EAAW;AAC/B,SAAO;AACHoB,IAAAA,KAAK,EAAEpB,KAAK,CAACkJ,SADV;AAEHlI,IAAAA,KAAK,EAAEhB,KAAK,CAACgB;AAFV,GAAP;AAIH,CALD;;AAOA,IAAMmI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,2BACO5K,kBAAkB,CAAC;AAClBC,IAAAA,YAAY,EAAZA,YADkB;AAElBC,IAAAA,WAAW,EAAXA,WAFkB;AAGlBC,IAAAA,mBAAmB,EAAnBA,mBAHkB;AAIlBC,IAAAA,uBAAuB,EAAvBA,uBAJkB;AAKlBC,IAAAA,wBAAwB,EAAxBA,wBALkB;AAMlBC,IAAAA,qBAAqB,EAArBA,qBANkB;AAOlBC,IAAAA,sBAAsB,EAAtBA,sBAPkB;AAQlBC,IAAAA,mBAAmB,EAAnBA,mBARkB;AASlBC,IAAAA,iBAAiB,EAAjBA,iBATkB;AAUlBC,IAAAA,wBAAwB,EAAxBA,wBAVkB;AAWlBC,IAAAA,qBAAqB,EAArBA,qBAXkB;AAYlBC,IAAAA,yBAAyB,EAAzBA,yBAZkB;AAalBC,IAAAA,yBAAyB,EAAzBA,yBAbkB;AAclBC,IAAAA,cAAc,EAAdA,cAdkB;AAelBC,IAAAA,eAAe,EAAfA,eAfkB;AAgBlBC,IAAAA,iBAAiB,EAAjBA;AAhBkB,GAAD,EAiBlB4J,QAjBkB,CADzB;AAoBH,CArBD;;AAuBA,eAAe7K,OAAO,CAAC0K,eAAD,EAAkBE,kBAAlB,CAAP,CAA8CrJ,eAA9C,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Image, TouchableHighlight, Alert } from 'react-native'\nimport { Container, Content, Text, View, Card, Toast} from 'native-base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {\n    setSleepTime,\n    setWakeTime,\n    fetchClassSleepData,\n    clearPendingSleepUpdate,\n    createSleepRecordSuccess,\n    createSleepRecordFail,\n    editSleepRecordSuccess,\n    editSleepRecordFail,\n    removeSleepRecord,\n    removeSleepRecordSuccess,\n    removeSleepRecordFail,\n    alertSleeplogErrorMessage,\n    clearSleeplogErrorMessage,\n    removeWakeTime,\n    markRecordError,\n    markRecordCorrect\n} from '../../../redux/school/actions/index'\nimport { formatDate, formatTime, fetchClassData } from '../../util'\nimport Reloading from '../../reloading'\nimport TimeModal from '../../parent/timemodal'\n\n\nclass TeacherSleepLog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            date: new Date(),\n            showIOSDatePicker: false,\n            student_id: '',\n            index: -1,\n            recordType: '',\n            teacher_id: '',\n            confirmDelete: false,\n            showDateTimeModal: false\n        }\n        this.handleOnClick = this.handleOnClick.bind(this)\n        this.handleSend = this.handleSend.bind(this)\n        this.updateReducerTime = this.updateReducerTime.bind(this)\n        this.setTime = this.setTime.bind(this)\n    }\n\n    componentDidMount() {\n        const { newDataForCreate, oldDataForEdit } = this.props.sleep\n        const { isConnected } = this.props.class\n        const { teacher_id } = this.props.route.params\n        this.setState({ teacher_id })\n        if ((newDataForCreate.size + oldDataForEdit.size === 0) && isConnected) {\n            this.fetchClassData()\n        }\n        else {\n            this.setState({\n                isLoading: false\n            })\n        }\n\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n        }\n    }\n\n    async fetchClassData() {\n        const date = new Date()\n        const start_date = formatDate(date)\n        date.setDate(date.getDate() + 1)\n        const end_date = formatDate(date)\n        const sleepData = await fetchClassData('sleep', this.props.class.class_id, start_date, end_date)\n        this.denormalize(sleepData)\n        this.props.fetchClassSleepData(sleepData.data)\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    denormalize(sleepData) {\n        if (!sleepData.data.records.all_id.length) {\n            return\n        }\n        const { by_id } = sleepData.data.records\n        for (var record_id in by_id) {\n            by_id[record_id].sleep_time = new Date(by_id[record_id].sleep_time)\n            by_id[record_id].wake_time = by_id[record_id].wake_time === null ? null : new Date(by_id[record_id].wake_time)\n        }\n        sleepData.data.records.by_id = by_id\n    }\n\n    hasUnsentRecord(student_id) {\n        const { newDataForCreate, oldDataForEdit, by_student_id } = this.props.sleep\n        record_id_array = by_student_id[student_id]\n        var hasUnsentRecord = false\n        for (var i = 0; i < record_id_array.length; i++) {\n            if (newDataForCreate.has(record_id_array[i]) || oldDataForEdit.has(record_id_array[i])) {\n                hasUnsentRecord = true\n                break\n            }\n        }\n        return hasUnsentRecord\n    }\n\n    handleOnClick(student_id) {\n        const record_id_array = this.props.sleep.by_student_id[student_id]\n        const records = this.props.sleep.records.by_id\n        const last_record = record_id_array.length > 0 ? records[record_id_array[record_id_array.length - 1]] : null\n        const current_wake_time = last_record ? last_record.wake_time : null\n\n        if (!record_id_array.length || current_wake_time) {\n            this.props.setSleepTime(student_id, null, new Date(), this.state.teacher_id)\n        } else {\n            this.props.setWakeTime(student_id, record_id_array.length - 1, new Date(), this.state.teacher_id)\n        }\n        this.checkLastRecord(student_id, records, record_id_array)\n    }\n\n    checkLastRecord(student_id, records, record_id_array) {\n        const n = record_id_array.length\n        const last_record_id = record_id_array[record_id_array.length - 1]\n        const last_record = records[last_record_id]\n        if (last_record.wake_time !== null && last_record.sleep_time.getTime() >= last_record.wake_time.getTime()) {\n            this.props.markRecordError([last_record_id])\n        } \n        \n        if (n > 1) {\n            const last_second_record_id = record_id_array[record_id_array.length - 2]\n            const last_second_record = records[last_second_record_id]\n            if (last_record.sleep_time >= last_second_record.sleep_time && last_record.sleep_time <= last_second_record.wake_time) {\n                this.props.markRecordError([last_record_id])\n            }\n        }\n    }\n\n    setTime(recordType, student_id, index, start_time) {\n        this.setState({\n            student_id,\n            index,\n            recordType,\n            showDateTimeModal: true,\n            start_time: start_time ? start_time : new Date()\n        })\n    }\n\n    updateReducerTime(index, time) {\n        this.setState({ showDateTimeModal: false })\n        if (this.state.recordType === 'sleep') {\n            this.props.setSleepTime(this.state.student_id, index, time, this.state.teacher_id)\n        } else {\n            this.props.setWakeTime(this.state.student_id, index, time, this.state.teacher_id)\n        }\n        this.checkRecord(this.state.student_id, index)\n    }\n\n    checkRecord(student_id, index) {\n        const record_id_array = this.props.sleep.by_student_id[student_id]\n        const records = this.props.sleep.records.by_id\n        const record_id = record_id_array[index]\n        const record = records[record_id]\n        const { records_with_error } = this.props.sleep\n        let prev_record_id = null\n        let next_record_id = null\n\n        if (index < 0 || index > record_id_array.length - 1) {\n            return\n        }\n\n        if (record.wake_time !== null) {\n            if(record.sleep_time.getTime() >= record.wake_time.getTime()) {\n                this.props.markRecordError([record_id])\n                return\n            }\n        }\n\n        if (index > 0) {\n            prev_record_id = record_id_array[index-1]\n            const prev_record = records[prev_record_id]\n            if (//record.sleep_time.getTime() >= prev_record.sleep_time.getTime() && \n                prev_record.wake_time !== null &&\n                record.sleep_time.getTime() <= prev_record.wake_time.getTime()) {\n                this.props.markRecordError([record_id])\n                return\n            }\n        }\n\n        if (index < record_id_array.length - 1) {\n            next_record_id = record_id_array[index+1]\n            const next_record = records[next_record_id]\n            if (record.wake_time >= next_record.sleep_time) {\n                this.props.markRecordError([record_id])\n                return\n            }\n        }\n\n        this.props.markRecordCorrect(record_id)\n\n        if (prev_record_id !== null && records_with_error.has(prev_record_id)) {\n            this.checkRecord(student_id, index-1)\n            // console.log('records_with_error.has(prev_record_id: ', records_with_error.has(prev_record_id))\n        }\n\n        if (next_record_id !== null && records_with_error.has(next_record_id)) {\n            // console.log('records_with_error.has(next_record_id: ', records_with_error.has(next_record_id))\n            this.checkRecord(student_id, index+1)\n        }\n    }\n\n    confirmToRemoveWakeTime(record_id, index, student_id) {\n        const record_id_array = this.props.sleep.by_student_id[student_id]\n        if (index !== record_id_array.length - 1) {\n            // cannot remove wake time if it is not the most recent record\n            this.props.alertSleeplogErrorMessage('這個睡眠記錄並不能刪除，只能改選')\n            return\n        }\n        Alert.alert(\n            '確定要刪除?',\n            '',\n            [\n                { text: 'Yes', onPress: () => this.props.removeWakeTime(record_id, this.state.teacher_id) },\n                { text: 'Cancel', style: 'cancel'}]\n        )\n    }\n\n    async handleSend() {\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        this.setState({\n            isLoading: true\n        })\n        const { newDataForCreate, oldDataForEdit } = this.props.sleep\n        \n        if (newDataForCreate.size) {\n            const createSleepRecordRes = await this.createRecord()\n            if (createSleepRecordRes.success) {\n                // console.log('SUCCESS')\n                this.props.createSleepRecordSuccess()\n            } else {\n                this.props.createSleepRecordFail()\n                return\n            }\n        }\n\n        if (oldDataForEdit.size) {\n            const editSleepRecordRes = await this.editRecord()\n            if (editSleepRecordRes.success) {\n                this.props.editSleepRecordSuccess()\n            } else {\n                this.props.editSleepRecordFail()\n                return\n            }\n        }\n\n        this.props.navigation.goBack()\n    }\n\n    async createRecord() {\n        const { newDataForCreate, records } = this.props.sleep\n        \n        const data_objs = []\n        newDataForCreate.forEach(record_id => {\n            data_objs.push({\n                ...records.by_id[record_id]\n            })\n        })\n\n        this.normalize(data_objs)\n\n        var request_body = {\n            date: formatDate(this.state.date),\n            data_objs\n        }\n\n        const createSleepRecordRes = await fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/sleep', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                // console.log('sleep resJson: ', resJson)\n                if (resJson['statusCode'] > 200) {\n                    return {\n                        success: false,\n                        status_code: resJson['statusCode'],\n                        data: resJson.message\n                    }\n                }\n                return {\n                    success: true,\n                    status_code: 200,\n                    data: resJson\n                }\n            })\n            .catch(err => {\n                return {\n                    success: false,\n                    status_code: 500,\n                    data: err\n                }\n            })\n        return createSleepRecordRes\n    }\n\n    async editRecord() {\n        const { oldDataForEdit, records } = this.props.sleep\n        const data_objs = []\n        oldDataForEdit.forEach(record_id => {\n            data_objs.push({\n                record_id,\n                ...records.by_id[record_id]\n            })\n        })\n\n        this.normalize(data_objs)\n\n        const request_body = {\n            date: formatDate(new Date()),\n            data_objs\n        }\n\n        const editRecordRes = await fetch('https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/sleep', {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        }).then(res => res.json())\n        .then(resJson => {\n            if (resJson['statusCode'] > 200) {\n                return {\n                    success: false,\n                    status_code: resJson['statusCode'],\n                    data: resJson.message\n                }\n            }\n            return {\n                success: true,\n                status_code: 200,\n                data: resJson\n            }\n        })\n        .catch(err => {\n            return {\n                success: false,\n                status_code: 500,\n                data: err\n            }\n        })\n        return editRecordRes\n    }\n\n    confirmToRemoveRecord(record_id, student_id) {\n        Alert.alert(\n            '確定要刪除？',\n            '',\n            [\n                { text: 'Yes', onPress: () => this.removeRecord(record_id, student_id) },\n                { text: 'Cancel', style: 'cancel' }\n            ]\n        )\n    }\n\n    removeRecord(record_id, student_id) {\n        const { newDataForCreate } = this.props.sleep\n        const { isConnected } = this.props.class\n\n        if (newDataForCreate.has(record_id)) {\n            this.props.removeSleepRecordSuccess(record_id, student_id)\n            return\n        }\n\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/sleep`\n        fetch(query, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                record_id\n            })\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const { statusCode, message } = resJson\n                if (statusCode > 200 || message === 'Internal Server Error') {\n                    this.props.removeSleepRecordFail(message)\n                    return {\n                        success: false,\n                        statusCode,\n                        message\n                    }\n                }\n                this.props.removeSleepRecordSuccess(record_id, student_id)\n                return {\n                    success: true,\n                    statusCode,\n                    message\n                }\n            })\n            .catch(err => {\n                this.props.removeSleepRecordFail(err)\n                return {\n                    success: false,\n                    message: err\n            }\n        })\n    }\n\n    normalize(data_objs) {\n        for (var i = 0; i < data_objs.length; i++) {\n            data_objs[i].sleep_time = formatTime(data_objs[i].sleep_time)\n            data_objs[i].wake_time = data_objs[i].wake_time === null ? null : formatTime(data_objs[i].wake_time)\n        }\n    }\n\n    render() {\n        if (this.props.sleep.errorMessage !== ''){\n            Alert.alert(\n                'Add new record fail',\n                this.props.sleep.errorMessage,\n                [{text: 'OK', onPress: () => this.props.clearSleeplogErrorMessage()}]\n            )\n        }\n        const { records_with_error } = this.props.sleep\n        const { showDateTimeModal, start_time, date } = this.state\n        // console.log('records_with_error: ', records_with_error)\n        // console.log('showDateTimeModal: ', showDateTimeModal)\n        if (this.state.isLoading) {\n            return <Reloading />\n        }\n        return (\n            <Container>\n                {showDateTimeModal ?\n                    <TimeModal\n                        start_date={start_time}\n                        datetime_type={'time'}\n                        hideModal={() => this.setState({ showDateTimeModal: false })}\n                        selectDatetimeConfirm={(time) => this.updateReducerTime(this.state.index, time)}\n                        minDatetime={null}\n                        maxDatetime={null}\n                    />\n                    : null\n                }\n                <View style={styles.subHeading}>\n                    <View style={{ flex: 1, alignItems: 'center' }}>\n                        <Text style={{ fontSize: 40 }}>{date.getFullYear() + '.' + (date.getMonth()+1) + '.' + date.getDate()}</Text>\n                    </View>\n                    \n                    <View style={{ flex: 1, justifyContent: 'center' }}>\n                        <TouchableHighlight\n                            style={{ alignSelf: 'flex-end', backgroundColor: '#dcf3d0', padding: 10, marginRight: 50 }}\n                            onPress={this.handleSend}\n                            underlayColor=\"#00c07f\"\n                        >\n                            <Text style={{ fontSize: 40, color: 'grey' }}>送出</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n                <Content contentContainerStyle={{ alignItems: 'center' }}>\n                    {Object.keys(this.props.class.students).map((student_id) => {\n                        const record_id_array = this.props.sleep.by_student_id[student_id] // [record_id, ...]\n                        const records = this.props.sleep.records.by_id\n                        const last_record = record_id_array.length > 0 ? records[record_id_array[record_id_array.length - 1]] : null\n                        const current_sleep_time = last_record ? last_record.sleep_time : null\n                        const current_wake_time = last_record ? last_record.wake_time : null\n                        return(\n                            <View key={student_id} style={{ width: '98%' }}>\n                                <Card style={{ flex: 1, paddingVertical: 15 }}>\n                                    <View style={{ flex: 1, flexDirection: 'row' }}>\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                                            <TouchableHighlight\n                                                key={student_id}\n                                                style={styles.thumbnail}\n                                                onPress={() => this.handleOnClick(student_id)}>\n                                                <Image\n                                                    source={\n                                                        this.props.class.students[student_id].profile_picture === '' ?\n                                                            require('../../../assets/icon-thumbnail.png')\n                                                            : {uri: this.props.class.students[student_id].profile_picture}\n                                                    }\n                                                    style={{\n                                                        width: 140,\n                                                        height: 140,\n                                                        borderRadius: 70,\n                                                        borderWidth: 8,\n                                                        borderColor: current_sleep_time !== null ? (current_wake_time === null ? '#ffe1d0' : '#dcf3d0') : '#dcf3d0'\n                                                    }} />\n                                            </TouchableHighlight>\n                                        </View>\n                                        <View style={{ flex: 3 }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', padding: 10 }}>\n                                                <View style={{ flex: 1 }}>\n                                                    <Text style={{ fontSize: 30 }}>{this.props.class.students[student_id].name}</Text>\n                                                </View>\n                                                <View style={{ flex: 1, alignItems: 'flex-end' }}>\n                                                    {this.hasUnsentRecord(student_id) ? \n                                                        <Text style={{ color: 'red', fontSize: 15 }}>未送出</Text>\n                                                    : null}\n                                                </View>\n                                            </View>\n                                            <View style={styles.cardBody}>\n                                                <View style={{ width: '40%', height: '100%', paddingLeft: 5 }}>\n                                                    <Text style={{ fontSize: 20 }}>從</Text>\n                                                </View>\n                                                <View style={{ width: '40%', height: '100%', paddingLeft: 5 }}>\n                                                    <Text style={{ fontSize: 20 }}>到</Text>\n                                                </View>\n                                            </View>\n                                            {record_id_array.map((record_id, index) => {\n                                                let { sleep_time, wake_time } = records[record_id]\n                                                return (\n                                                    <View key={record_id} style={{\n                                                        ...styles.cardBody, \n                                                        borderWidth: 2, \n                                                        borderColor: records_with_error.has(record_id) ? 'red' : 'white'\n                                                    }}>\n                                                        <View style={{ width: '35%', marginRight: '3%', height: '100%' }}>\n                                                            <TouchableHighlight\n                                                                style={{ flex: 1, justifyContent: 'center', backgroundColor: '#fef6dd', borderRadius: 10}}\n                                                                onPress={() => this.setTime('sleep', student_id, index, sleep_time)}\n                                                            >\n                                                                {sleep_time === null ?\n                                                                    <Text style={{ fontSize: 30, textAlign: 'center' }}>選擇時間</Text> :\n                                                                    <Text style={{ fontSize: 35, textAlign: 'center' }}>\n                                                                        {sleep_time.getHours() + ':' + sleep_time.getMinutes()}\n                                                                    </Text>}\n                                                            </TouchableHighlight>\n                                                        </View>\n                                                        <View style={{ width: '35%', marginRight: '3%', height: '100%' }}>\n                                                            <TouchableHighlight\n                                                                style={{ flex: 1, justifyContent: 'center', backgroundColor: '#fef6dd', borderRadius: 10 }}\n                                                                onPress={() => this.setTime('wake', student_id, index, wake_time)}\n                                                                onLongPress={() => this.confirmToRemoveWakeTime(record_id, index, student_id)}\n                                                            >\n                                                                {wake_time === null ?\n                                                                    <Text style={{ fontSize: 30, textAlign: 'center' }}>選擇時間</Text> :\n                                                                    <Text style={{ fontSize: 35, textAlign: 'center' }}>\n                                                                        {wake_time.getHours() + ':' + wake_time.getMinutes()}\n                                                                    </Text>}\n                                                            </TouchableHighlight>\n                                                        </View>\n                                                        <View style={{ width: '20%', marginRight: '4%', height: '100%' }}>\n                                                            <TouchableHighlight\n                                                                style={{ flex: 1, justifyContent: 'center', backgroundColor: '#ffe1d0', borderRadius: 10 }}\n                                                                onPress={() => this.confirmToRemoveRecord(record_id, student_id)}\n                                                            >\n                                                                <Text style={{ fontSize: 30, textAlign: 'center' }}>移除</Text>\n                                                            </TouchableHighlight>\n                                                        </View>\n                                                    </View>\n                                                )\n                                            })}\n                                        </View>\n                                    </View>\n                                </Card>\n                            </View>\n                        )\n                    })}\n                </Content>\n                {/* {this.state.showIOSDatePicker ?\n                    <View style={{ height: 200, justifyContent: 'center'}}>\n                        <DatePickerIOS\n                            mode={'time'}\n                            date={new Date()}\n                            onDateChange={(time) => this.updateReducerTime(this.state.index, time)}\n                        />\n                    </View> : null} */}\n            </Container>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    thumbnail: {\n        // width: 100,\n        // height: 100,\n        // borderRadius: 50,\n        // backgroundColor: 'transparent',\n        // marginLeft: -7,\n    },\n    subHeading: {\n        // width: 355,\n        // height: 45,\n        // marginTop: 10,\n        // padding: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        // justifyContent: 'space-between',\n    },\n    cardBody: {\n        flex: 1,\n        flexDirection: 'row',\n        marginVertical: 6\n    },\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        class: state.classInfo,\n        sleep: state.sleep\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            setSleepTime,\n            setWakeTime,\n            fetchClassSleepData,\n            clearPendingSleepUpdate,\n            createSleepRecordSuccess,\n            createSleepRecordFail,\n            editSleepRecordSuccess,\n            editSleepRecordFail,\n            removeSleepRecord,\n            removeSleepRecordSuccess,\n            removeSleepRecordFail,\n            alertSleeplogErrorMessage,\n            clearSleeplogErrorMessage,\n            removeWakeTime,\n            markRecordError,\n            markRecordCorrect\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TeacherSleepLog)"]},"metadata":{},"sourceType":"module"}