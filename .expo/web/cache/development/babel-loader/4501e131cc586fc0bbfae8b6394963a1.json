{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/logs/pooentry.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Card, Toast } from 'native-base';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { formatDate, formatTime, fetchClassData, beautifyDate } from \"../../util\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateDiaperAmount, addDiaperRecord, editDiaperTime, switchPeeOrPoo, editPooCondition, removeDiaperRecordSuccess, removeDiaperRecordFail, fetchClassDiaperData, createDiaperRecordSuccess, createDiaperRecordFail, editDiaperRecordSuccess, editDiaperRecordFail, editDiaperAmountSuccess, editDiaperAmountFail, clearDiaperlogErrorMessage } from \"../../../redux/school/actions/index\";\nimport PickerComponent from \"../../picker\";\nimport PooTextInput from \"./pootextinput\";\n\nvar PooEntry = function (_React$Component) {\n  _inherits(PooEntry, _React$Component);\n\n  var _super = _createSuper(PooEntry);\n\n  function PooEntry(props) {\n    var _this;\n\n    _classCallCheck(this, PooEntry);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selected_other: false,\n      other_option: ''\n    };\n    return _this;\n  }\n\n  _createClass(PooEntry, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"editPooCondition\",\n    value: function editPooCondition(record_id, condition) {\n      var teacher_id = this.props.teacher_id;\n\n      if (condition === '取消編輯') {\n        return;\n      } else if (condition === '其他') {\n        this.setState({\n          selected_other: true,\n          other_option: ' '\n        });\n      } else {\n        console.log('editPooCondition: ', record_id, condition, teacher_id);\n        this.setState({\n          selected_other: false,\n          other_option: condition\n        });\n        this.props.editPooCondition(record_id, condition, teacher_id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          record_id = _this$props.record_id,\n          record = _this$props.record;\n      var _this$state = this.state,\n          selected_other = _this$state.selected_other,\n          other_option = _this$state.other_option;\n      return React.createElement(View, {\n        style: {\n          width: '23%',\n          height: '100%',\n          justifyContent: 'center',\n          backgroundColor: '#fef6dd',\n          borderRadius: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, selected_other ? React.createElement(TextInput, {\n        style: {\n          fontSize: 30,\n          textAlign: 'center'\n        },\n        keyboardType: \"default\",\n        autoFocus: selected_other,\n        selectTextOnFocus: true,\n        value: other_option,\n        onChangeText: function onChangeText(condition) {\n          return _this2.setState({\n            other_option: condition\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.editPooCondition(record_id, other_option);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }) : React.createElement(PickerComponent, {\n        style: {\n          alignItems: 'center',\n          padding: 5\n        },\n        selectedValue: other_option || record.poo_condition,\n        options: [\"正常\", \"硬\", \"軟糊\", \"稀水\", \"其他\", \"取消編輯\"],\n        textStyle: {\n          fontSize: 30\n        },\n        handleOnClick: function handleOnClick() {},\n        handleSelectValue: function handleSelectValue(condition) {\n          return _this2.editPooCondition(record_id, condition);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }));\n    }\n  }]);\n\n  return PooEntry;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    diaper_records: state.diaper,\n    class: state.classInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    editPooCondition: editPooCondition\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PooEntry);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/pooentry.js"],"names":["React","Card","Toast","DateTimePicker","formatDate","formatTime","fetchClassData","beautifyDate","bindActionCreators","connect","updateDiaperAmount","addDiaperRecord","editDiaperTime","switchPeeOrPoo","editPooCondition","removeDiaperRecordSuccess","removeDiaperRecordFail","fetchClassDiaperData","createDiaperRecordSuccess","createDiaperRecordFail","editDiaperRecordSuccess","editDiaperRecordFail","editDiaperAmountSuccess","editDiaperAmountFail","clearDiaperlogErrorMessage","PickerComponent","PooTextInput","PooEntry","props","state","selected_other","other_option","record_id","condition","teacher_id","setState","console","log","record","width","height","justifyContent","backgroundColor","borderRadius","fontSize","textAlign","alignItems","padding","poo_condition","Component","mapStateToProps","diaper_records","diaper","class","classInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Toast } from 'native-base'\nimport { View, ScrollView, Text, Image, TouchableHighlight, StyleSheet, TextInput, KeyboardAvoidingView, Alert } from 'react-native'\nimport DateTimePicker from '@react-native-community/datetimepicker'\nimport { formatDate, formatTime, fetchClassData, beautifyDate } from '../../util'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n    updateDiaperAmount,\n    addDiaperRecord,\n    editDiaperTime,\n    switchPeeOrPoo,\n    editPooCondition,\n    removeDiaperRecordSuccess,\n    removeDiaperRecordFail,\n    fetchClassDiaperData,\n    createDiaperRecordSuccess,\n    createDiaperRecordFail,\n    editDiaperRecordSuccess,\n    editDiaperRecordFail,\n    editDiaperAmountSuccess,\n    editDiaperAmountFail,\n    clearDiaperlogErrorMessage\n} from '../../../redux/school/actions/index'\nimport PickerComponent from '../../picker'\nimport PooTextInput from './pootextinput'\n\nclass PooEntry extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected_other: false,\n            other_option: ''\n        }\n    }\n\n    componentDidMount() {\n       \n    }\n\n    editPooCondition(record_id, condition) {\n        // console.log('editPooCondition: ', record_id, condition, teacher_id)\n        const { teacher_id } = this.props\n        if (condition === '取消編輯') {\n            return \n        } else if (condition === '其他') {\n            this.setState({\n                selected_other: true,\n                other_option: ' '\n            })\n            \n        } else {\n            console.log('editPooCondition: ', record_id, condition, teacher_id)\n            this.setState({\n                selected_other: false,\n                other_option: condition\n            })\n            this.props.editPooCondition(record_id, condition, teacher_id)\n        }\n    }\n\n    render() {\n        // TODO: Provide some options for poo condition\n        // if (this.props.diaper_records.err_message !== ''){\n        //     Alert.alert(\n        //         'Error!',\n        //         this.props.diaper_records.err_message,\n        //         [{text: 'OK', onPress: () => this.props.clearDiaperlogErrorMessage()}]\n        //     )\n        // }\n        const { record_id, record } = this.props\n        const { selected_other,other_option } = this.state\n        // const { by_student_id, records } = this.props.diaper_records\n        // const { students } = this.props.class\n        // const date = this.state.date\n        // console.log('record_id: ', record_id)\n        return (\n            <View\n                style={{\n                    width: '23%',\n                    // marginRight: '3%',\n                    height: '100%',\n                    justifyContent: 'center',\n                    backgroundColor: '#fef6dd',\n                    borderRadius: 10\n                }}\n            >\n                {selected_other ?\n                    <TextInput\n                        style={{ fontSize: 30, textAlign: 'center' }}\n                        keyboardType='default'\n                        autoFocus={selected_other}\n                        // showSoftInputOnFocus={true}\n                        selectTextOnFocus={true}\n                        // scrollEnabled={false}\n                        value={other_option}\n                        onChangeText={(condition) => this.setState({ other_option: condition})}\n                        // onFocus={() => }\n                        onBlur={() => this.editPooCondition(record_id, other_option)}\n                    />\n\n                    // <PooTextInput\n                    //     editPooCondition={(other_option) => this.editPooCondition(record_id, other_option)}\n                    // />\n\n                    : <PickerComponent\n                        style={{\n                            // height: 20,\n                            // width: '50%',\n                            // marginLeft: 25\n                            alignItems: 'center',\n                            padding: 5\n                        }}\n                        selectedValue={other_option || record.poo_condition}\n                        options={[\n                            \"正常\",\n                            \"硬\",\n                            \"軟糊\",\n                            \"稀水\",\n                            \"其他\",\n                            \"取消編輯\"\n                        ]}\n                        textStyle={{ fontSize: 30 }}\n                        handleOnClick={() => { }}\n                        handleSelectValue={(condition) => this.editPooCondition(record_id, condition)}\n                    />\n                }\n            </View>\n        )\n    }\n}\n\n// const styles = StyleSheet.create({\n//     thumbnailImage: {\n//         width: 140,\n//         height: 140,\n//         borderRadius: 70\n//     }\n// })\n\nconst mapStateToProps = (state) => {\n    return {\n        diaper_records: state.diaper,\n        class: state.classInfo\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            editPooCondition\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (PooEntry)"]},"metadata":{},"sourceType":"module"}