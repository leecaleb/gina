{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initial_state = {\n  by_student_id: {},\n  records: {\n    by_id: {},\n    all_id: []\n  },\n  all_dispatched: true,\n  students_pending_amount_update: new Set(),\n  data_to_update: [],\n  new_data_for_create: new Set(),\n  old_data_for_edit: new Set(),\n  err_message: ''\n};\nexport default function diaper() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial_state;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INITIALIZE_CLASS':\n      {\n        by_student_id = {};\n        action.students.forEach(function (student) {\n          var id = student.id;\n          by_student_id[id] = {\n            amount: '',\n            records: []\n          };\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          by_student_id: by_student_id\n        });\n      }\n\n    case 'FETCH_CLASS_DIAPER_DATA':\n      {\n        return _objectSpread(_objectSpread({}, state), action.diaperData);\n      }\n\n    case 'ADD_DIAPER_RECORD':\n      {\n        var student_id = action.student_id,\n            time = action.time,\n            cloth_diaper = action.cloth_diaper,\n            teacher_id = action.teacher_id;\n\n        var newState = _objectSpread({}, state);\n\n        var id = newState.records.all_id.length;\n        newState.by_student_id[student_id].records.push(id);\n\n        if (!cloth_diaper) {\n          newState.by_student_id[student_id].amount -= 1;\n          newState.students_pending_amount_update.add(student_id);\n        }\n\n        newState.records.by_id[id] = {\n          student_id: student_id,\n          time: time,\n          cloth_diaper: cloth_diaper,\n          pee_or_poo: '小便',\n          poo_condition: '正常',\n          teacher_id: teacher_id\n        };\n        newState.records.all_id.push(id);\n        newState.all_dispatched = false;\n        newState.new_data_for_create.add(id);\n        return newState;\n      }\n\n    case 'EDIT_DIAPER_TIME':\n      {\n        var record_id = action.record_id,\n            _time = action.time,\n            _teacher_id = action.teacher_id;\n        var new_data_for_create = state.new_data_for_create;\n\n        var _newState = _objectSpread({}, state);\n\n        _newState.records.by_id[record_id].time = _time;\n        _newState.records.by_id[record_id].teacher_id = _teacher_id;\n\n        if (!new_data_for_create.has(record_id)) {\n          _newState.old_data_for_edit.add(record_id);\n        }\n\n        return _newState;\n      }\n\n    case 'SWITCH_PEE_OR_POO':\n      {\n        var _record_id = action.record_id,\n            _teacher_id2 = action.teacher_id;\n        var _new_data_for_create = state.new_data_for_create;\n\n        var _newState2 = _objectSpread({}, state);\n\n        var current_pee_or_poo = _newState2.records.by_id[_record_id].pee_or_poo;\n        _newState2.records.by_id[_record_id].pee_or_poo = current_pee_or_poo === '小便' ? '大便' : '小便';\n        _newState2.records.by_id[_record_id].teacher_id = _teacher_id2;\n\n        if (current_pee_or_poo === '小便') {\n          _newState2.records.by_id[_record_id].poo_condition = '正常';\n        }\n\n        if (!_new_data_for_create.has(_record_id)) {\n          _newState2.old_data_for_edit.add(_record_id);\n        }\n\n        return _newState2;\n      }\n\n    case 'EDIT_POO_CONDITION':\n      {\n        var _record_id2 = action.record_id,\n            condition = action.condition,\n            _teacher_id3 = action.teacher_id;\n        var _new_data_for_create2 = state.new_data_for_create;\n\n        var _newState3 = _objectSpread({}, state);\n\n        console.log('EDIT_POO_CONDITION: ', _record_id2, condition, _teacher_id3);\n        _newState3.records.by_id[_record_id2].poo_condition = condition;\n        _newState3.records.by_id[_record_id2].teacher_id = _teacher_id3;\n\n        if (!_new_data_for_create2.has(_record_id2)) {\n          _newState3.old_data_for_edit.add(_record_id2);\n        }\n\n        return _newState3;\n      }\n\n    case 'REMOVE_DIAPER_RECORD_SUCCESS':\n      {\n        var _student_id = action.student_id,\n            _record_id3 = action.record_id;\n\n        var _newState4 = _objectSpread({}, state);\n\n        var new_records = [];\n        var records = state.by_student_id[_student_id].records;\n\n        if (!state.records.by_id[_record_id3].cloth_diaper) {\n          _newState4.by_student_id[_student_id].amount += 1;\n        }\n\n        for (var i = 0; i < records.length; i++) {\n          if (records[i] !== _record_id3) {\n            new_records.push(records[i]);\n          }\n        }\n\n        _newState4.by_student_id[_student_id].records = new_records;\n\n        var _new_data_for_create3 = new Set(_toConsumableArray(state.new_data_for_create));\n\n        _new_data_for_create3.delete(_record_id3);\n\n        _newState4.new_data_for_create = _new_data_for_create3;\n        var old_data_for_edit = new Set(_toConsumableArray(state.old_data_for_edit));\n        old_data_for_edit.delete(_record_id3);\n        _newState4.old_data_for_edit = old_data_for_edit;\n        return _newState4;\n      }\n\n    case 'REMOVE_DIAPER_RECORD_FAIL':\n      {\n        var err_message = action.err_message;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          err_message: err_message\n        });\n      }\n\n    case 'UPDATE_DIAPER_AMOUNT':\n      {\n        var _student_id2 = action.student_id,\n            amount = action.amount;\n        var students_pending_amount_update = new Set([].concat(_toConsumableArray(state.students_pending_amount_update), [_student_id2]));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          by_student_id: _objectSpread(_objectSpread({}, state.by_student_id), {}, _defineProperty({}, _student_id2, _objectSpread(_objectSpread({}, state.by_student_id[_student_id2]), {}, {\n            amount: amount\n          }))),\n          students_pending_amount_update: students_pending_amount_update\n        });\n      }\n\n    case 'CREATE_DIAPER_RECORD_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          new_data_for_create: new Set(),\n          old_data_for_edit: new Set()\n        });\n      }\n\n    case 'CREATE_DIAPER_RECORD_FAIL':\n      {\n        var _err_message = action.err_message;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          err_message: _err_message\n        });\n      }\n\n    case 'EDIT_DIAPER_RECORD_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          old_data_for_edit: new Set()\n        });\n      }\n\n    case 'EDIT_DIAPER_RECORD_FAIL':\n      {\n        var _err_message2 = action.err_message;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          err_message: _err_message2\n        });\n      }\n\n    case 'EDIT_DIAPER_AMOUNT_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          students_pending_amount_update: new Set()\n        });\n      }\n\n    case 'EDIT_DIAPER_AMOUNT_FAIL':\n      {\n        var _err_message3 = action.err_message;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          err_message: _err_message3\n        });\n      }\n\n    case 'CLEAR_ERR_MESSAGE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          err_message: ''\n        });\n      }\n\n    case 'CLEAR_STATE':\n      {\n        return {\n          by_student_id: {},\n          records: {\n            by_id: {},\n            all_id: []\n          },\n          all_dispatched: true,\n          students_pending_amount_update: new Set(),\n          data_to_update: [],\n          new_data_for_create: new Set(),\n          old_data_for_edit: new Set(),\n          err_message: ''\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/school/reducers/diaper.js"],"names":["initial_state","by_student_id","records","by_id","all_id","all_dispatched","students_pending_amount_update","Set","data_to_update","new_data_for_create","old_data_for_edit","err_message","diaper","state","action","type","students","forEach","student","id","amount","diaperData","student_id","time","cloth_diaper","teacher_id","newState","length","push","add","pee_or_poo","poo_condition","record_id","has","current_pee_or_poo","condition","console","log","new_records","i","delete"],"mappings":"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","sourcesContent":["var initial_state = {\n  by_student_id: {\n    /*\n    {student_id}: {\n      amount: 16,\n      records: [{record_id}, {...}]\n    }\n    */\n  },\n  records: {\n    by_id: {\n      /*\n      {record_id}: {\n        student_id,\n        time: {Datetime},\n        cloth_diaper: true/false,\n        pee_or_poo: {小便/大便},\n        poo_condition: {varchar(4)}\n        teacher_id\n      }\n      */\n    },\n    all_id: []\n  },\n  all_dispatched: true,\n  students_pending_amount_update: new Set(),\n  data_to_update: [],\n  new_data_for_create: new Set(),\n  old_data_for_edit: new Set(),\n  err_message: ''\n}\n\nexport default function diaper(state = initial_state, action) {\n  switch (action.type) {\n    case 'INITIALIZE_CLASS': {\n      by_student_id = {}\n      action.students.forEach(student => {\n        const { id } = student\n        by_student_id[id] = {\n          amount: '',\n          records: []\n        }\n      })\n      // initial_state = {\n      //   ...state,\n      //   by_student_id\n      // }\n      return {\n        ...state,\n        by_student_id\n      }\n    }\n    case 'FETCH_CLASS_DIAPER_DATA': { // TODO: fix bug\n      return {\n        ...state,\n        ...action.diaperData\n      }\n    }\n    case 'ADD_DIAPER_RECORD': {\n      const { student_id, time, cloth_diaper, teacher_id } = action\n      const newState = { ...state }\n      const id = newState.records.all_id.length\n      newState.by_student_id[student_id].records.push(id)\n      if (!cloth_diaper) {\n        newState.by_student_id[student_id].amount -= 1\n        newState.students_pending_amount_update.add(student_id)\n      }\n\n      newState.records.by_id[id] = {\n        student_id,\n        time,\n        cloth_diaper,\n        pee_or_poo: '小便',\n        poo_condition: '正常',\n        teacher_id\n      }\n      newState.records.all_id.push(id)\n      newState.all_dispatched = false\n      newState.new_data_for_create.add(id)\n      return newState\n    }\n      \n    case 'EDIT_DIAPER_TIME': {\n      const { record_id, time, teacher_id } = action\n      const { new_data_for_create } = state\n      const newState = { ...state }\n      newState.records.by_id[record_id].time = time\n      newState.records.by_id[record_id].teacher_id = teacher_id\n      if (!new_data_for_create.has(record_id)) {\n        newState.old_data_for_edit.add(record_id)\n      }\n      return newState\n    }\n    \n    case 'SWITCH_PEE_OR_POO': {\n      const { record_id, teacher_id } = action\n      const { new_data_for_create } = state\n      const newState = { ...state }\n      const current_pee_or_poo = newState.records.by_id[record_id].pee_or_poo\n      newState.records.by_id[record_id].pee_or_poo = current_pee_or_poo === '小便' ? '大便' : '小便'\n      newState.records.by_id[record_id].teacher_id = teacher_id\n      if (current_pee_or_poo === '小便') {\n        newState.records.by_id[record_id].poo_condition = '正常'\n      }\n      if (!new_data_for_create.has(record_id)) {\n        newState.old_data_for_edit.add(record_id)\n      }\n      return newState\n    }\n\n    case 'EDIT_POO_CONDITION': {\n      const { record_id, condition, teacher_id } = action\n      const { new_data_for_create } = state\n      const newState = { ...state }\n\n      console.log('EDIT_POO_CONDITION: ', record_id, condition, teacher_id)\n      newState.records.by_id[record_id].poo_condition = condition\n      newState.records.by_id[record_id].teacher_id = teacher_id\n      if (!new_data_for_create.has(record_id)) {\n        newState.old_data_for_edit.add(record_id)\n      }\n      return newState\n    }\n      \n    case 'REMOVE_DIAPER_RECORD_SUCCESS': {\n      const { student_id, record_id } = action\n      const newState = { ...state }\n      const new_records = []\n      \n      const records = state.by_student_id[student_id].records\n      if(!state.records.by_id[record_id].cloth_diaper) {\n        newState.by_student_id[student_id].amount += 1\n      }\n\n      for (var i = 0; i < records.length; i++){\n        if (records[i] !== record_id) {\n          new_records.push(records[i])\n        }\n      }\n      newState.by_student_id[student_id].records = new_records\n\n      const new_data_for_create = new Set([...state.new_data_for_create])\n      new_data_for_create.delete(record_id)\n      newState.new_data_for_create = new_data_for_create\n\n      const old_data_for_edit = new Set([...state.old_data_for_edit])\n      old_data_for_edit.delete(record_id)\n      newState.old_data_for_edit = old_data_for_edit\n\n      return newState\n    }\n    \n    case 'REMOVE_DIAPER_RECORD_FAIL': {\n      const { err_message } = action\n      return {\n        ...state,\n        err_message\n      }\n    }\n\n    case 'UPDATE_DIAPER_AMOUNT': {\n      const { student_id, amount } = action\n      const students_pending_amount_update = new Set([...state.students_pending_amount_update, student_id])\n      return {\n        ...state,\n        by_student_id: {\n          ...state.by_student_id,\n          [student_id]: {\n            ...state.by_student_id[student_id],\n            amount\n          }\n        },\n        students_pending_amount_update\n      }\n    }\n    \n    case 'CREATE_DIAPER_RECORD_SUCCESS': {\n      return {\n        ...state,\n        new_data_for_create: new Set(),\n        old_data_for_edit: new Set()\n      }\n    }\n      \n    case 'CREATE_DIAPER_RECORD_FAIL': {\n      const { err_message } = action\n      return {\n        ...state,\n        err_message\n      }\n    }\n\n    case 'EDIT_DIAPER_RECORD_SUCCESS': {\n      return {\n        ...state,\n        old_data_for_edit: new Set()\n      }\n    }\n\n    case 'EDIT_DIAPER_RECORD_FAIL': {\n      const { err_message } = action\n      return {\n        ...state,\n        err_message\n      }\n    }\n\n    case 'EDIT_DIAPER_AMOUNT_SUCCESS': {\n      return {\n        ...state,\n        students_pending_amount_update: new Set()\n      }\n    }\n      \n    case 'EDIT_DIAPER_AMOUNT_FAIL': {\n      const { err_message } = action\n      return {\n        ...state,\n        err_message\n      }\n    }\n      \n    case 'CLEAR_ERR_MESSAGE': {\n      return {\n        ...state,\n        err_message: ''\n      }\n    }\n      \n    case 'CLEAR_STATE': {\n      return {\n        by_student_id: {},\n        records: {\n          by_id: {},\n          all_id: []\n        },\n        all_dispatched: true,\n        students_pending_amount_update: new Set(),\n        data_to_update: [],\n        new_data_for_create: new Set(),\n        old_data_for_edit: new Set(),\n        err_message: ''\n      }\n    }\n\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}