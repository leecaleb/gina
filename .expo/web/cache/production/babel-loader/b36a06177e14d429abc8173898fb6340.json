{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var initial_state={initialized:false,present:new Set(),absent:new Set(),unmarked:new Set(),attendance:{}};export default function attendance(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initial_state;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'MAKR_DISMISS':return _objectSpread(_objectSpread({},state),{},{attendance:_objectSpread(_objectSpread({},state.attendance),{},_defineProperty({},action.student_id,_objectSpread(_objectSpread({},state.attendance[action.student_id]),{},{present:false,out_time:action.out_time})))});case'MARK_ABSENT':state.unmarked.delete(action.student_id);return _objectSpread(_objectSpread({},state),{},{absent:new Set([].concat(_toConsumableArray(state.absent),[action.student_id])),unmarked:state.unmarked,attendance:_objectSpread(_objectSpread({},state.attendance),{},_defineProperty({},action.student_id,_objectSpread(_objectSpread({},state.attendance[action.student_id]),{},{excuse_type:action.excuse_type})))});case'CLEAR_STATE':return{initialized:false,present:new Set(),absent:new Set(),unmarked:new Set(),attendance:{}};default:return state;}}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/school/reducers/attendance.js"],"names":["initial_state","initialized","present","Set","absent","unmarked","attendance","state","action","type","student_id","out_time","delete","excuse_type"],"mappings":"w6BAAA,GAAIA,CAAAA,aAAa,CAAG,CAChBC,WAAW,CAAE,KADG,CAEhBC,OAAO,CAAE,GAAIC,CAAAA,GAAJ,EAFO,CAGhBC,MAAM,CAAE,GAAID,CAAAA,GAAJ,EAHQ,CAIhBE,QAAQ,CAAE,GAAIF,CAAAA,GAAJ,EAJM,CAKhBG,UAAU,CAAE,EALI,CAApB,CAoBA,cAAe,SAASA,CAAAA,UAAT,EAAmD,IAA/BC,CAAAA,KAA+B,2DAAvBP,aAAuB,IAARQ,CAAAA,MAAQ,2CAC9D,OAAQA,MAAM,CAACC,IAAf,EAkCI,IAAK,cAAL,CACI,sCACOF,KADP,MAEID,UAAU,gCACHC,KAAK,CAACD,UADH,wBAELE,MAAM,CAACE,UAFF,gCAGCH,KAAK,CAACD,UAAN,CAAiBE,MAAM,CAACE,UAAxB,CAHD,MAIFR,OAAO,CAAE,KAJP,CAKFS,QAAQ,CAAEH,MAAM,CAACG,QALf,IAFd,GAYJ,IAAK,aAAL,CAEIJ,KAAK,CAACF,QAAN,CAAeO,MAAf,CAAsBJ,MAAM,CAACE,UAA7B,EACA,sCACOH,KADP,MAEIH,MAAM,CAAE,GAAID,CAAAA,GAAJ,8BAAYI,KAAK,CAACH,MAAlB,GAA0BI,MAAM,CAACE,UAAjC,GAFZ,CAGIL,QAAQ,CAAEE,KAAK,CAACF,QAHpB,CAIIC,UAAU,gCACHC,KAAK,CAACD,UADH,wBAELE,MAAM,CAACE,UAFF,gCAGCH,KAAK,CAACD,UAAN,CAAiBE,MAAM,CAACE,UAAxB,CAHD,MAIFG,WAAW,CAAEL,MAAM,CAACK,WAJlB,IAJd,GAaJ,IAAK,aAAL,CACI,MAAO,CACHZ,WAAW,CAAE,KADV,CAEHC,OAAO,CAAE,GAAIC,CAAAA,GAAJ,EAFN,CAGHC,MAAM,CAAE,GAAID,CAAAA,GAAJ,EAHL,CAIHE,QAAQ,CAAE,GAAIF,CAAAA,GAAJ,EAJP,CAKHG,UAAU,CAAE,EALT,CAAP,CAOJ,QACI,MAAOC,CAAAA,KAAP,CAxER,CA0EH","sourcesContent":["var initial_state = {\n    initialized: false,\n    present: new Set(),// student_A_id\n    absent: new Set(), // student_B_id\n    unmarked: new Set(),\n    attendance: {\n        /*\n        {student_A_id}: {\n            present: true,\n            in_time: [Date],\n            out_time: [Date]\n        },\n        {student_B_id}: {\n            present: false,\n            excuse_type: \"fever\"\n        }\n        */\n    }\n}\n\nexport default function attendance(state = initial_state, action) {\n    switch (action.type) {\n        // case 'INITIALIZE_CLASS':\n        //     var attendance = {}\n        //     var unmarked = new Set()\n        //     action.students.forEach(student => {\n        //         const { id } = student\n        //         unmarked.add(id)\n        //         attendance[id] = {\n        //             present: false\n        //         }\n        //     })\n        //     return {\n        //         ...state,\n        //         initialized: true,\n        //         unmarked: unmarked,\n        //         attendance: attendance\n        //     }\n\n        // case 'MARK_PRESENT':\n        //     // student_id, in_time\n        //     state.unmarked.delete(action.student_id)\n        //     return {\n        //         ...state,\n        //         present: new Set([...state.present, action.student_id]),\n        //         unmarked: state.unmarked,\n        //         attendance: {\n        //             ...state.attendance,\n        //             [action.student_id]: {\n        //                 present: true,\n        //                 in_time: action.in_time\n        //             }\n        //         }\n        //     }\n        \n        case 'MAKR_DISMISS':\n            return {\n                ...state,\n                attendance: {\n                    ...state.attendance,\n                    [action.student_id]: {\n                        ...state.attendance[action.student_id],\n                        present: false,\n                        out_time: action.out_time\n                    }\n                }\n            }\n        \n        case 'MARK_ABSENT':\n            // student_id, excuse_type\n            state.unmarked.delete(action.student_id)\n            return {\n                ...state,\n                absent: new Set([...state.absent, action.student_id]),\n                unmarked: state.unmarked,\n                attendance: {\n                    ...state.attendance,\n                    [action.student_id]: {\n                        ...state.attendance[action.student_id],\n                        excuse_type: action.excuse_type\n                    }\n                }\n            }\n    \n        case 'CLEAR_STATE':\n            return {\n                initialized: false,\n                present: new Set(),\n                absent: new Set(),\n                unmarked: new Set(),\n                attendance: {}\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}