{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Alert from\"react-native-web/dist/exports/Alert\";import Image from\"react-native-web/dist/exports/Image\";import{Card,CardItem,Toast}from'native-base';import{connect}from'react-redux';import{get,formatDate}from\"../util\";import{bindActionCreators}from'redux';import{fetchTeacherAttendanceSuccess,fetchStudentAttendanceSuccess}from\"../../redux/school/actions/index\";import LoginNumberPad from\"./loginnumberpad\";import Modal from\"./modal\";var AttendancePage=function(_React$Component){_inherits(AttendancePage,_React$Component);var _super=_createSuper(AttendancePage);function AttendancePage(props){var _this;_classCallCheck(this,AttendancePage);_this=_super.call(this,props);_this.state={isLoading:true,display_list:[],students_or_teachers:'students',selected_class_id:'all',showLoginNumberPad:false,showModal:false,modalStudentId:'',teacherClicked:'',teacher_id:'',pageClicked:''};return _this;}_createClass(AttendancePage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props$school=this.props.school,students=_this$props$school.students,teacherOnDuty=_this$props$school.teacherOnDuty,teachers=_this$props$school.teachers;var display_list=Object.keys(students);this.setState({display_list:display_list});this.fetchTeacherAttendance();this.fetchStudentAttendance();if(teacherOnDuty!==''){var name=teachers[teacherOnDuty].name;this.props.navigation.setOptions({headerRight:function headerRight(){return React.createElement(View,{style:{paddingRight:20}},React.createElement(Text,{style:{fontSize:30}},\"\\u503C\\u73ED\\u8001\\u5E2B\\uFF1A\"+name));}});}}},{key:\"selectPersonType\",value:function selectPersonType(type){var classes=this.props.school.classes;var selected_class_id=this.state.selected_class_id;if(selected_class_id==='all'){this.setState({display_list:Object.keys(this.props.school[type]),students_or_teachers:type});return;}this.setState({display_list:classes[selected_class_id][type],students_or_teachers:type});}},{key:\"selectClass\",value:function selectClass(class_id){var classes=this.props.school.classes;var students_or_teachers=this.state.students_or_teachers;this.setState({display_list:classes[class_id][students_or_teachers],selected_class_id:class_id});}},{key:\"selectAttendanceType\",value:function selectAttendanceType(attendanceType){var classes=this.props.school.classes;var _this$state=this.state,students_or_teachers=_this$state.students_or_teachers,selected_class_id=_this$state.selected_class_id;var display_list=[];var all_id_list=[];if(selected_class_id==='all'){all_id_list=Object.keys(this.props.school[students_or_teachers]);}else{all_id_list=classes[selected_class_id][students_or_teachers];}for(var i=0;i<all_id_list.length;i++){if(this.props.school[\"student_\"+attendanceType].has(all_id_list[i])||this.props.school[\"teacher_\"+attendanceType].has(all_id_list[i])){display_list.push(all_id_list[i]);}}this.setState({display_list:display_list});}},{key:\"fetchTeacherAttendance\",value:function fetchTeacherAttendance(){var school_id,date,response,success,statusCode,message,data,attendance,teachers;return _regeneratorRuntime.async(function fetchTeacherAttendance$(_context){while(1){switch(_context.prev=_context.next){case 0:school_id=this.props.route.params.school_id;date=formatDate(new Date());_context.next=4;return _regeneratorRuntime.awrap(get(\"/staff-attendance?school_id=\"+school_id+\"&date=\"+date));case 4:response=_context.sent;success=response.success,statusCode=response.statusCode,message=response.message,data=response.data;if(success){_context.next=9;break;}alert('Sorry 取得教師出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n'+message);return _context.abrupt(\"return\");case 9:attendance=data.attendance,teachers=data.teachers;this.props.fetchTeacherAttendanceSuccess(attendance,teachers);case 11:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"fetchStudentAttendance\",value:function fetchStudentAttendance(){var school_id,date,response,success,statusCode,message,data,attendance,students,present,absent;return _regeneratorRuntime.async(function fetchStudentAttendance$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:school_id=this.props.route.params.school_id;date=formatDate(new Date());_context2.next=4;return _regeneratorRuntime.awrap(get(\"/attendance?school_id=\"+school_id+\"&date=\"+date));case 4:response=_context2.sent;success=response.success,statusCode=response.statusCode,message=response.message,data=response.data;if(success){_context2.next=9;break;}alert('Sorry 取得學生出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n'+message);return _context2.abrupt(\"return\");case 9:attendance=data.attendance,students=data.students,present=data.present,absent=data.absent;this.props.fetchStudentAttendanceSuccess(attendance,students,present,absent);case 11:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"handleOnClick\",value:function handleOnClick(person_id){var teacherOnDuty=this.props.teacherOnDuty;var students_or_teachers=this.state.students_or_teachers;if(students_or_teachers==='students'){if(teacherOnDuty===''){this.setState({showLoginNumberPad:true,pageClicked:'student_modal',modalStudentId:person_id});return;}this.showModal(person_id);}else{this.setState({showLoginNumberPad:true,teacherClicked:person_id});}}},{key:\"showModal\",value:function showModal(student_id){this.setState({modalStudentId:student_id,showModal:true});}},{key:\"handleEnterPasscode\",value:function handleEnterPasscode(passcode){var passcodeTeacherId=this.props.school.passcodeTeacherId;var _this$props=this.props,passcodeAdminId=_this$props.passcodeAdminId,teachers=_this$props.teachers;var _this$state2=this.state,pageClicked=_this$state2.pageClicked,teacherClicked=_this$state2.teacherClicked;var teacher_id=passcodeTeacherId[passcode];var admin_id=passcodeAdminId[passcode];if(admin_id!==undefined){this.setState({teacher_id:admin_id,pageClicked:'',showModal:true,showLoginNumberPad:false});}else if(pageClicked==='student_modal'&&teacher_id!==undefined){this.setState({teacher_id:teacher_id,pageClicked:'',showModal:true,showLoginNumberPad:false});}else if(teacher_id===undefined||teacher_id!==teacherClicked){Toast.show({text:'Wrong password!',buttonText:'Okay',position:\"top\",type:\"warning\",duration:3000});}else{this.setState({showModal:true,showLoginNumberPad:false});}}},{key:\"hideLoginPad\",value:function hideLoginPad(){this.setState({showLoginNumberPad:false,modalStudentId:''});}},{key:\"hideModal\",value:function hideModal(){this.setState({showModal:false,modalStudentId:'',teacher_id:''});}},{key:\"render\",value:function render(){var _this2=this;var school_id=this.props.route.params.school_id;var _this$props2=this.props,school=_this$props2.school,teacherOnDuty=_this$props2.teacherOnDuty;var student_present=school.student_present,student_unmarked=school.student_unmarked,student_absent=school.student_absent,teacher_present=school.teacher_present,teacher_unmarked=school.teacher_unmarked,teacher_absent=school.teacher_absent;var _this$state3=this.state,display_list=_this$state3.display_list,students_or_teachers=_this$state3.students_or_teachers,selected_class_id=_this$state3.selected_class_id,modalStudentId=_this$state3.modalStudentId,teacherClicked=_this$state3.teacherClicked,teacher_id=_this$state3.teacher_id,showLoginNumberPad=_this$state3.showLoginNumberPad;return React.createElement(View,{style:{flex:1}},showLoginNumberPad?React.createElement(LoginNumberPad,{handleEnterPasscode:function handleEnterPasscode(passcode){return _this2.handleEnterPasscode(passcode);},hideLoginPad:function hideLoginPad(){return _this2.hideLoginPad();}}):null,React.createElement(Modal,{show:this.state.showModal,student_id:modalStudentId,teacher_id:teacherClicked,teacherOnDuty:teacherOnDuty||teacher_id,class_id:selected_class_id,school_id:school_id,navigation:this.props.navigation,fetchStudentAttendance:function fetchStudentAttendance(){return _this2.fetchStudentAttendance();},fetchTeacherAttendance:function fetchTeacherAttendance(){return _this2.fetchTeacherAttendance();},hideModal:function hideModal(){return _this2.hideModal();}}),React.createElement(View,{style:{flex:1,flexDirection:'row',backgroundColor:'white'}},React.createElement(View,{style:{flex:1,padding:10}},React.createElement(TouchableHighlight,{style:{flex:1,backgroundColor:students_or_teachers==='students'?'lightgrey':'white',justifyContent:'center'},onPress:function onPress(){return _this2.selectPersonType('students');}},React.createElement(Text,{style:{fontSize:40,textAlign:'center'}},\"\\u5B78\\u751F\"))),React.createElement(View,{style:{flex:1,padding:10}},React.createElement(TouchableHighlight,{style:{flex:1,backgroundColor:students_or_teachers==='teachers'?'lightgrey':'white',justifyContent:'center'},onPress:function onPress(){return _this2.selectPersonType('teachers');}},React.createElement(Text,{style:{fontSize:40,textAlign:'center'}},\"\\u6559\\u5E2B\")))),React.createElement(View,{style:{flex:1,flexDirection:'row',backgroundColor:'white'}},Object.keys(school.classes).map(function(class_id){if(class_id==='all'){return null;}return React.createElement(View,{key:class_id,style:{flex:1,padding:10}},React.createElement(TouchableHighlight,{style:{flex:1,backgroundColor:selected_class_id===class_id?'lightgrey':'white',justifyContent:'center'},onPress:function onPress(){return _this2.selectClass(class_id);}},React.createElement(Text,{style:{fontSize:40,textAlign:'center'}},school.classes[class_id].name)));})),React.createElement(View,{style:{flex:1,flexDirection:'row',backgroundColor:'white'}},React.createElement(View,{style:{flex:1,padding:10}},React.createElement(TouchableHighlight,{style:{flex:1,backgroundColor:'#ffe1d0',justifyContent:'center'},onPress:function onPress(){return _this2.selectAttendanceType('absent');}},React.createElement(Text,{style:{fontSize:40,textAlign:'center'}},\"\\u7F3A\\u5E2D\"))),React.createElement(View,{style:{flex:1,padding:10}},React.createElement(TouchableHighlight,{style:{flex:1,backgroundColor:'#fff1b5',justifyContent:'center'},onPress:function onPress(){return _this2.selectAttendanceType('unmarked');}},React.createElement(Text,{style:{fontSize:40,textAlign:'center'}},\"\\u672A\\u77E5\"))),React.createElement(View,{style:{flex:1,padding:10}},React.createElement(TouchableHighlight,{style:{flex:1,backgroundColor:'#dcf3d0',justifyContent:'center'},onPress:function onPress(){return _this2.selectAttendanceType('present');}},React.createElement(Text,{style:{fontSize:40,textAlign:'center'}},\"\\u51FA\\u5E2D\")))),React.createElement(View,{style:{flex:9,backgroundColor:'lightgrey'}},React.createElement(ScrollView,{contentContainerStyle:{flexDirection:'row',flexWrap:'wrap',backgroundColor:'transparent'}},display_list.map(function(person_id){var person=school[students_or_teachers][person_id];return React.createElement(TouchableHighlight,{key:person_id,style:{height:300,width:'33.3%',padding:5},onPress:function onPress(){return _this2.handleOnClick(person_id);}},React.createElement(Card,{style:{flex:1,padding:10,backgroundColor:'white'}},React.createElement(CardItem,{style:{justifyContent:'center'}},React.createElement(Image,{source:person.profile_picture===''&&students_or_teachers==='students'?require(\"../../assets/icon-thumbnail.png\"):person.profile_picture===''&&students_or_teachers==='teachers'?require(\"../../assets/icon-teacher-thumbnail.png\"):{uri:person.profile_picture},style:{height:200,width:200,borderRadius:100,borderWidth:10,borderColor:student_present.has(person_id)||teacher_present.has(person_id)?'#dcf3d0':student_unmarked.has(person_id)||teacher_unmarked.has(person_id)?'#fff1b5':'#ffe1d0'}})),React.createElement(CardItem,{footer:true,style:{justifyContent:'center',marginTop:-5}},React.createElement(Text,{style:{marginTop:-10}},person.name))));}))));}}]);return AttendancePage;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{school:state.school,teacherOnDuty:state.school.teacherOnDuty,teachers:state.school.teachers,passcodeAdminId:state.school.passcodeAdminId,attendance:state.attendance};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({fetchTeacherAttendanceSuccess:fetchTeacherAttendanceSuccess,fetchStudentAttendanceSuccess:fetchStudentAttendanceSuccess},dispatch));};export default connect(mapStateToProps,mapDispatchToProps)(AttendancePage);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/attendancepage.js"],"names":["React","Card","CardItem","Toast","connect","get","formatDate","bindActionCreators","fetchTeacherAttendanceSuccess","fetchStudentAttendanceSuccess","LoginNumberPad","Modal","AttendancePage","props","state","isLoading","display_list","students_or_teachers","selected_class_id","showLoginNumberPad","showModal","modalStudentId","teacherClicked","teacher_id","pageClicked","school","students","teacherOnDuty","teachers","Object","keys","setState","fetchTeacherAttendance","fetchStudentAttendance","name","navigation","setOptions","headerRight","paddingRight","fontSize","type","classes","class_id","attendanceType","all_id_list","i","length","has","push","school_id","route","params","date","Date","response","success","statusCode","message","data","alert","attendance","present","absent","person_id","student_id","passcode","passcodeTeacherId","passcodeAdminId","admin_id","undefined","show","text","buttonText","position","duration","student_present","student_unmarked","student_absent","teacher_present","teacher_unmarked","teacher_absent","flex","handleEnterPasscode","hideLoginPad","hideModal","flexDirection","backgroundColor","padding","justifyContent","selectPersonType","textAlign","map","selectClass","selectAttendanceType","flexWrap","person","height","width","handleOnClick","profile_picture","require","uri","borderRadius","borderWidth","borderColor","marginTop","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, ScrollView, Text, TouchableHighlight, Alert, Image } from 'react-native'\nimport { Card, CardItem, Toast } from 'native-base'\nimport { connect } from 'react-redux'\nimport { get, formatDate } from '../util'\nimport { bindActionCreators } from 'redux'\nimport { fetchTeacherAttendanceSuccess, fetchStudentAttendanceSuccess } from '../../redux/school/actions/index'\nimport LoginNumberPad from './loginnumberpad'\nimport Modal from './modal'\n\nclass AttendancePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            isLoading: true,\n            display_list: [],\n            students_or_teachers: 'students',\n            selected_class_id: 'all',\n            showLoginNumberPad: false,\n            showModal: false,\n            modalStudentId: '',\n            teacherClicked: '',\n            teacher_id: '',\n            pageClicked: ''\n        }\n    }\n\n    componentDidMount() {\n        const { students, teacherOnDuty, teachers } = this.props.school\n        const display_list = Object.keys(students)\n        this.setState({ display_list })\n        this.fetchTeacherAttendance()\n        this.fetchStudentAttendance()\n        // this.fetchTeacherWellness()\n        // this.fetchStudentWellness()\n        \n        if (teacherOnDuty !== '') {\n            const { name }= teachers[teacherOnDuty]\n            this.props.navigation.setOptions({ \n                headerRight: () => (\n                    <View style={{ paddingRight: 20 }}>\n                        <Text style={{ fontSize: 30 }}>{`值班老師：${name}`}</Text>\n                    </View>\n                )\n            })\n        }\n    }\n\n    selectPersonType(type) {\n        const { classes } = this.props.school\n        const { selected_class_id } = this.state\n        if (selected_class_id === 'all') {\n            this.setState({\n                display_list: Object.keys(this.props.school[type]),\n                students_or_teachers: type\n            })\n            return\n        }\n\n        this.setState({\n            display_list: classes[selected_class_id][type],\n            students_or_teachers: type\n        })\n    }\n\n    selectClass(class_id) {\n        const { classes } = this.props.school\n        const {students_or_teachers} = this.state\n        // console.log('classes[class_id][students_or_teachers]: ', classes[class_id][students_or_teachers])\n        this.setState({\n            display_list: classes[class_id][students_or_teachers],\n            selected_class_id: class_id\n        })\n    }\n\n    selectAttendanceType(attendanceType) {\n        const { classes } = this.props.school\n        const { students_or_teachers, selected_class_id } = this.state\n        var display_list = []\n        var all_id_list = []\n        if (selected_class_id === 'all') {\n            all_id_list = Object.keys(this.props.school[students_or_teachers])\n        } else {\n            all_id_list = classes[selected_class_id][students_or_teachers]\n        }\n        for (var i = 0; i < all_id_list.length; i++) {\n            if (this.props.school[`student_${attendanceType}`].has(all_id_list[i])\n                || this.props.school[`teacher_${attendanceType}`].has(all_id_list[i])) {\n                display_list.push(all_id_list[i])\n            }\n        }\n        this.setState({\n            display_list\n        })\n    }\n\n    async fetchTeacherAttendance() {\n        const { school_id } = this.props.route.params\n        const date = formatDate(new Date())\n        const response = await get(`/staff-attendance?school_id=${school_id}&date=${date}`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得教師出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n\n        // console.log('data: ', data)\n        const { attendance, teachers } = data\n        this.props.fetchTeacherAttendanceSuccess(attendance, teachers)\n    }\n\n    async fetchStudentAttendance() {\n        const { school_id } = this.props.route.params\n        const date = formatDate(new Date())\n        const response = await get(`/attendance?school_id=${school_id}&date=${date}`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得學生出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n\n        const { attendance, students, present, absent } = data\n        // console.log('data: ', data)\n        this.props.fetchStudentAttendanceSuccess(attendance, students, present, absent)\n    }\n\n    handleOnClick(person_id) {\n        const { teacherOnDuty } = this.props\n        const { students_or_teachers } = this.state\n        // console.log('students_or_teachers: ', students_or_teachers)\n        if (students_or_teachers === 'students') {\n            if (teacherOnDuty === '') {\n                this.setState({ \n                    showLoginNumberPad: true,\n                    pageClicked: 'student_modal',\n                    modalStudentId: person_id,\n                    // showModal: true\n                })\n                return\n            }\n            this.showModal(person_id)\n        } else {\n            this.setState({ showLoginNumberPad: true, teacherClicked: person_id })\n        }\n    }\n\n    showModal(student_id) {\n        this.setState({\n            // showLoginNumberPad: true,\n            modalStudentId: student_id,\n            showModal: true\n        })\n    }\n\n    handleEnterPasscode(passcode) {\n        const { passcodeTeacherId } = this.props.school\n        const { passcodeAdminId, teachers } = this.props\n        const { pageClicked, teacherClicked } = this.state\n        const teacher_id = passcodeTeacherId[passcode]\n        const admin_id = passcodeAdminId[passcode]\n        if (admin_id !== undefined) {\n            this.setState({\n                teacher_id: admin_id,\n                pageClicked: '',\n                showModal: true,\n                showLoginNumberPad: false\n            })\n        } else if (pageClicked === 'student_modal' && teacher_id !== undefined) {\n            this.setState({\n                teacher_id,\n                pageClicked: '',\n                showModal: true,\n                showLoginNumberPad: false\n            })\n        } else if (teacher_id === undefined || teacher_id !== teacherClicked) {\n            Toast.show({\n                text: 'Wrong password!',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 3000\n            })\n        } else {\n            this.setState({\n                showModal: true,\n                showLoginNumberPad: false,\n                // modalTeacherId: teacher_id\n            })\n        }\n    }\n\n    hideLoginPad() {\n        this.setState({ \n            showLoginNumberPad: false,\n            modalStudentId: ''\n        })\n    }\n\n    hideModal() {\n        this.setState({\n            showModal: false,\n            modalStudentId: '',\n            teacher_id: ''\n        })\n    }\n\n    render() {\n        const { school_id } = this.props.route.params\n        const { school, teacherOnDuty } = this.props\n        const { \n            student_present,\n            student_unmarked,\n            student_absent,\n            teacher_present,\n            teacher_unmarked,\n            teacher_absent\n        } = school\n        const { \n            display_list,\n            students_or_teachers,\n            selected_class_id,\n            modalStudentId,\n            teacherClicked,\n            teacher_id,\n            showLoginNumberPad\n        } = this.state\n        // console.log('school: ', school)\n        // console.log('attendance: ', school.attendance)\n        // console.log('student_present: ', student_present)\n        // console.log('student_absent: ', student_absent)\n        // console.log('teacherOnDuty: ', teacherOnDuty)\n        // console.log('teacher_id: ', teacher_id)\n        return (\n            <View style={{ flex: 1 }}>\n                {showLoginNumberPad ? \n                    <LoginNumberPad\n                        handleEnterPasscode={(passcode) => this.handleEnterPasscode(passcode)}\n                        hideLoginPad={() => this.hideLoginPad()}\n                    /> : null\n                }\n\n                <Modal\n                    show={this.state.showModal}\n                    student_id={modalStudentId}\n                    teacher_id={teacherClicked}\n                    teacherOnDuty={teacherOnDuty || teacher_id}\n                    class_id={selected_class_id}\n                    school_id={school_id}\n                    navigation={this.props.navigation}\n                    // unmarked={unmarked}\n                    // absent={absent}\n                    fetchStudentAttendance={() => this.fetchStudentAttendance()}\n                    fetchTeacherAttendance={() => this.fetchTeacherAttendance()}\n                    hideModal={() => this.hideModal()}\n                />\n                \n                {/*////////\n                STUDENT/TEACHER \n                ////////*/}\n                <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ \n                                flex: 1, \n                                backgroundColor: students_or_teachers === 'students' ? 'lightgrey' : 'white', \n                                justifyContent: 'center' \n                            }}\n                            onPress={() => this.selectPersonType('students')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>學生</Text>\n                        </TouchableHighlight>\n                    </View>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ \n                                flex:1,\n                                backgroundColor: students_or_teachers === 'teachers' ? 'lightgrey' : 'white', \n                                justifyContent: 'center' \n                            }}\n                            onPress={() => this.selectPersonType('teachers')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>教師</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n\n                {/*////////\n                CLASSES\n                ////////*/}\n                <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\n                    {Object.keys(school.classes).map(class_id => {\n                        if (class_id === 'all') {\n                            return null\n                        }\n                        return (\n                            <View key={class_id} style={{ flex: 1, padding: 10 }}>\n                                <TouchableHighlight\n                                    style={{ \n                                        flex: 1, \n                                        backgroundColor: selected_class_id === class_id ? 'lightgrey' : 'white', \n                                        justifyContent: 'center' \n                                    }}\n                                    onPress={() => this.selectClass(class_id)}\n                                >\n                                    <Text style={{ fontSize: 40, textAlign: 'center' }}>{school.classes[class_id].name}</Text>\n                                </TouchableHighlight>\n                            </View>\n                        )\n                    })}\n                </View>\n\n                {/*////////\n                ATTENDANCE STATUS\n                ////////*/}\n                <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ flex: 1, backgroundColor: '#ffe1d0', justifyContent: 'center' }}\n                            onPress={() => this.selectAttendanceType('absent')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>缺席</Text>\n                        </TouchableHighlight>\n                    </View>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ flex:1, backgroundColor: '#fff1b5', justifyContent: 'center' }}\n                            onPress={() => this.selectAttendanceType('unmarked')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>未知</Text>\n                        </TouchableHighlight>\n                    </View>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ flex:1, backgroundColor: '#dcf3d0', justifyContent: 'center' }}\n                            onPress={() => this.selectAttendanceType('present')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>出席</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n\n                {/*////////\n                DISPLAY\n                ////////*/}\n                <View style={{ flex: 9, backgroundColor: 'lightgrey' }}>\n                    <ScrollView contentContainerStyle={{ flexDirection:'row', flexWrap: 'wrap', backgroundColor: 'transparent' }}>\n                        {display_list.map(person_id => {\n                            const person = school[students_or_teachers][person_id]\n                            return (\n                                <TouchableHighlight \n                                    key={person_id}\n                                    style={{ \n                                        height: 300, \n                                        width: '33.3%', \n                                        padding: 5,\n                                        // backgroundColor: this.props.attendance.unmarked.has(person_id) ? 'black' : 'white'\n                                    }}\n                                    onPress={() => this.handleOnClick(person_id)}\n                                >\n                                    {/* <View style={{ flex: 1, padding: 10, backgroundColor: 'white' }}> */}\n                                        <Card style={{ flex: 1, padding: 10, backgroundColor: 'white' }}>\n                                            <CardItem style={{ justifyContent: 'center' }}>\n                                                    <Image\n                                                        source={\n                                                            person.profile_picture === '' && students_or_teachers === 'students' ?\n                                                                require('../../assets/icon-thumbnail.png')\n                                                                : person.profile_picture === '' && students_or_teachers === 'teachers' ?\n                                                                    require('../../assets/icon-teacher-thumbnail.png')\n                                                                    : {uri: person.profile_picture}\n                                                        }\n                                                        style={{\n                                                            height: 200,\n                                                            width: 200,\n                                                            borderRadius: 100,\n                                                            borderWidth: 10,\n                                                            borderColor: \n                                                                student_present.has(person_id) || teacher_present.has(person_id) ? '#dcf3d0'\n                                                                    : student_unmarked.has(person_id) || teacher_unmarked.has(person_id) ? '#fff1b5'\n                                                                        : '#ffe1d0'\n                                                        }}\n                                                    />\n                                            </CardItem>\n                                            <CardItem\n                                                footer\n                                                style={{ justifyContent: 'center', marginTop: -5 }}\n                                            >\n                                                <Text style={{ marginTop: -10 }}>{person.name}</Text>\n                                            </CardItem>\n                                        </Card>\n                                    {/* </View> */}\n                                </TouchableHighlight>\n                            )\n                        })}\n                    </ScrollView>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        school: state.school,\n        teacherOnDuty: state.school.teacherOnDuty,\n        teachers: state.school.teachers,\n        passcodeAdminId: state.school.passcodeAdminId,\n        attendance: state.attendance\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            fetchTeacherAttendanceSuccess,\n            fetchStudentAttendanceSuccess\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AttendancePage)"]},"metadata":{},"sourceType":"module"}