{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Alert from\"react-native-web/dist/exports/Alert\";import{Text,View,Button,Card,CardItem,Toast}from'native-base';import{connect}from'react-redux';import{bindActionCreators}from'redux';import{fetchClassWellnessData,markPresent,sendWellnessDataSuccess,sendWellnessDataFail,addWellnessRecord,invalidateWellnessData}from\"../../../redux/school/actions/index\";import{formatDate,fetchClassData as _fetchClassData,sendWellnessData}from\"../../util\";import WellnessForm from\"../wellnessform\";var WellnessLog=function(_React$Component){_inherits(WellnessLog,_React$Component);var _super=_createSuper(WellnessLog);function WellnessLog(props){var _this;_classCallCheck(this,WellnessLog);_this=_super.call(this,props);_this.state={isLoading:true,date:new Date(),show_record:false};_this.handleSend=_this.handleSend.bind(_assertThisInitialized(_this));_this.addRecord=_this.addRecord.bind(_assertThisInitialized(_this));return _this;}_createClass(WellnessLog,[{key:\"componentDidMount\",value:function componentDidMount(){var record_id_for_update=this.props.wellness.record_id_for_update;var isConnected=this.props.class.isConnected;if(record_id_for_update.size===0&&isConnected){this.fetchClassData();}else{this.setState({isLoading:false});}if(!isConnected){Toast.show({text:'拍謝 網路連不到! 等一下再試試看',buttonText:'Okay',position:\"top\",type:\"warning\",duration:2000});}}},{key:\"fetchClassData\",value:function fetchClassData(){var date,start_date,end_date,wellnessData;return _regeneratorRuntime.async(function fetchClassData$(_context){while(1){switch(_context.prev=_context.next){case 0:date=new Date();start_date=formatDate(date);date.setDate(date.getDate()+1);end_date=formatDate(date);_context.next=6;return _regeneratorRuntime.awrap(_fetchClassData('wellness',this.props.class.class_id,start_date,end_date));case 6:wellnessData=_context.sent;this.denormalize(wellnessData);this.props.fetchClassWellnessData(wellnessData.data);this.setState({isLoading:false});case 10:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"denormalize\",value:function denormalize(wellnessData){if(!Object.keys(wellnessData.data.records).length){return;}var records=wellnessData.data.records;for(var record_id in records){wellnessData.data.records[record_id].time=new Date(records[record_id].time);}}},{key:\"hasUnsentRecord\",value:function hasUnsentRecord(record_id_list){var record_id_for_update=this.props.wellness.record_id_for_update;var has_unsent_record=false;for(var i=0;i<record_id_list.length;i++){if(record_id_for_update.has(record_id_list[i])){has_unsent_record=true;break;}}return has_unsent_record;}},{key:\"addRecord\",value:function addRecord(student_id){var record_amount=this.props.wellness.by_student_id[student_id].length;if(record_amount===2){Alert.alert('今天已經量了兩次體溫了','',[{text:'OK'}]);return;}this.props.addWellnessRecord(student_id);}},{key:\"handleSend\",value:function handleSend(){var _this2=this;var wellness,isConnected,sendDataResult;return _regeneratorRuntime.async(function handleSend$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(this.wellnessDataValidated()){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:wellness=this.props.wellness;isConnected=this.props.class.isConnected;if(isConnected){_context2.next=7;break;}Toast.show({text:'拍謝 網路連不到! 等一下再試試看',buttonText:'Okay',position:\"top\",type:\"warning\",duration:2000});return _context2.abrupt(\"return\");case 7:_context2.next=9;return _regeneratorRuntime.awrap(sendWellnessData(wellness,this.props.class.class_id,formatDate(new Date())));case 9:sendDataResult=_context2.sent;if(sendDataResult.success){sendDataResult.data.forEach(function(student_id){_this2.props.markPresent(student_id,new Date());});this.props.sendWellnessDataSuccess();this.props.navigation.goBack();}else{this.props.sendWellnessDataFail(sendDataResult.message);}case 11:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"wellnessDataValidated\",value:function wellnessDataValidated(){var _this3=this;var _this$props$wellness=this.props.wellness,records=_this$props$wellness.records,record_id_for_update=_this$props$wellness.record_id_for_update;var validated=true;record_id_for_update.forEach(function(record_id){if(records[record_id].temperature===''){_this3.props.invalidateWellnessData(record_id,'Temperature is not filled out');validated=false;}else if(records[record_id].status===''){_this3.props.invalidateWellnessData(record_id,'Health status is not filled out');validated=false;}});return validated;}},{key:\"render\",value:function render(){var _this4=this;var _this$props$wellness2=this.props.wellness,by_student_id=_this$props$wellness2.by_student_id,records=_this$props$wellness2.records;var teacher_id=this.props.route.params.teacher_id;var date=this.state.date;console.log('wellness: ',this.props.wellness);return React.createElement(KeyboardAvoidingView,{style:{flex:1},enabled:true},React.createElement(View,{style:{flexDirection:'row',width:'90%',justifyContent:'space-between',alignSelf:'center',alignItems:'center'}},React.createElement(Text,{style:{fontSize:40}},formatDate(date)),React.createElement(TouchableHighlight,{style:{backgroundColor:'#dcf3d0',padding:10},onPress:this.handleSend},React.createElement(Text,{style:{fontSize:40}},\"\\u9001\\u51FA\"))),React.createElement(ScrollView,{contentContainerStyle:{alignItems:'center',marginBottom:20}},Object.keys(this.props.class.students).map(function(student_id){var record_id_list=by_student_id[student_id];return React.createElement(View,{key:student_id,style:{width:'98%'}},React.createElement(Card,null,React.createElement(CardItem,{style:{flex:1,flexDirection:'row'}},React.createElement(TouchableHighlight,{style:styles.childThumbnail},React.createElement(Image,{source:_this4.props.class.students[student_id].profile_picture===''?require(\"../../../assets/icon-thumbnail.png\"):{uri:_this4.props.class.students[student_id].profile_picture},style:styles.thumbnailImage})),React.createElement(View,{style:{flex:3}},React.createElement(View,{style:{flex:1,flexDirection:'row',paddingVertical:10}},React.createElement(View,{style:{flex:1}},React.createElement(Text,{style:{fontSize:25}},_this4.props.class.students[student_id].name)),React.createElement(View,{style:{flex:1,alignItems:'flex-end'}},_this4.hasUnsentRecord(record_id_list)?React.createElement(Text,{style:{color:'red',fontSize:15}},\"\\u672A\\u9001\\u51FA\"):null)),record_id_list.map(function(record_id,index){return React.createElement(View,{style:{flex:1},key:record_id},index===0?React.createElement(Text,null,\"\\u65E9\\u4E0A\"):React.createElement(Text,null,\"\\u4E0B\\u5348\"),React.createElement(WellnessForm,{student_id:student_id,record_id:record_id,teacher_id:teacher_id}));})))));})));}}]);return WellnessLog;}(React.Component);var styles=StyleSheet.create({childThumbnail:{flex:1,backgroundColor:'white',marginLeft:-7},thumbnailImage:{width:140,height:140,borderRadius:70},subHeading:{width:355,height:45,marginTop:10,flexDirection:'row',alignItems:'center',justifyContent:'space-between'}});var mapStateToProps=function mapStateToProps(state){return{class:state.classInfo,wellness:state.healthstatus,unmarked:state.attendance.unmarked};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({fetchClassWellnessData:fetchClassWellnessData,markPresent:markPresent,sendWellnessDataSuccess:sendWellnessDataSuccess,sendWellnessDataFail:sendWellnessDataFail,addWellnessRecord:addWellnessRecord,invalidateWellnessData:invalidateWellnessData},dispatch));};export default connect(mapStateToProps,mapDispatchToProps)(WellnessLog);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/wellnesslog.js"],"names":["React","Text","View","Button","Card","CardItem","Toast","connect","bindActionCreators","fetchClassWellnessData","markPresent","sendWellnessDataSuccess","sendWellnessDataFail","addWellnessRecord","invalidateWellnessData","formatDate","fetchClassData","sendWellnessData","WellnessForm","WellnessLog","props","state","isLoading","date","Date","show_record","handleSend","bind","addRecord","record_id_for_update","wellness","isConnected","class","size","setState","show","text","buttonText","position","type","duration","start_date","setDate","getDate","end_date","class_id","wellnessData","denormalize","data","Object","keys","records","length","record_id","time","record_id_list","has_unsent_record","i","has","student_id","record_amount","by_student_id","Alert","alert","wellnessDataValidated","sendDataResult","success","forEach","navigation","goBack","message","validated","temperature","status","teacher_id","route","params","console","log","flex","flexDirection","width","justifyContent","alignSelf","alignItems","fontSize","backgroundColor","padding","marginBottom","students","map","styles","childThumbnail","profile_picture","require","uri","thumbnailImage","paddingVertical","name","hasUnsentRecord","color","index","Component","StyleSheet","create","marginLeft","height","borderRadius","subHeading","marginTop","mapStateToProps","classInfo","healthstatus","unmarked","attendance","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Image, TouchableHighlight, KeyboardAvoidingView, ScrollView, Alert } from 'react-native'\nimport { Text, View, Button, Card, CardItem, Toast } from 'native-base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {\n    fetchClassWellnessData,\n    markPresent,\n    sendWellnessDataSuccess,\n    sendWellnessDataFail,\n    addWellnessRecord,\n    invalidateWellnessData\n} from '../../../redux/school/actions/index'\nimport { formatDate, fetchClassData, sendWellnessData } from '../../util';\nimport WellnessForm from '../wellnessform'\n\nclass WellnessLog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            date: new Date(),\n            show_record: false\n        }\n        this.handleSend = this.handleSend.bind(this)\n        this.addRecord = this.addRecord.bind(this)\n    }\n\n    componentDidMount() {\n        const { record_id_for_update } = this.props.wellness\n        const { isConnected } = this.props.class\n        if (record_id_for_update.size === 0 && isConnected) {\n            this.fetchClassData()\n        }\n        else {\n            this.setState({\n                isLoading: false\n            })\n        }\n\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n        }\n    }\n\n    async fetchClassData() {\n        const date = new Date()\n        const start_date = formatDate(date)\n        date.setDate(date.getDate() + 1)\n        const end_date = formatDate(date)\n        const wellnessData = await fetchClassData('wellness', this.props.class.class_id, start_date, end_date)\n        // console.log(wellnessData)\n        this.denormalize(wellnessData)\n        this.props.fetchClassWellnessData(wellnessData.data)\n        this.setState({\n            isLoading: false\n        })\n    }\n\n    denormalize(wellnessData) {\n        if (!Object.keys(wellnessData.data.records).length){\n            return\n        }\n        const { records } = wellnessData.data\n        for (var record_id in records) {\n            wellnessData.data.records[record_id].time = new Date(records[record_id].time)\n        }\n    }\n\n    hasUnsentRecord(record_id_list) {\n        const { record_id_for_update } = this.props.wellness\n        var has_unsent_record = false\n        for (var i = 0; i < record_id_list.length; i++) {\n            if (record_id_for_update.has(record_id_list[i])) {\n                has_unsent_record = true\n                break\n            }\n        }\n        return has_unsent_record\n    }\n\n    addRecord(student_id) {\n        const record_amount = this.props.wellness.by_student_id[student_id].length\n        if (record_amount === 2) {\n            Alert.alert(\n                '今天已經量了兩次體溫了',\n                '',\n                [{text: 'OK'}]\n            )\n            return\n        }\n        this.props.addWellnessRecord(student_id)\n    }\n\n    async handleSend() {\n        if (!this.wellnessDataValidated()) {\n            return\n        }\n        const { wellness } = this.props\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        const sendDataResult = await sendWellnessData(wellness, this.props.class.class_id, formatDate(new Date))\n        if (sendDataResult.success) {\n            sendDataResult.data.forEach(student_id => {\n                this.props.markPresent(student_id, new Date)\n            })\n            this.props.sendWellnessDataSuccess()\n            this.props.navigation.goBack()\n        } else {\n            this.props.sendWellnessDataFail(sendDataResult.message)\n        }\n    }\n\n    wellnessDataValidated() {\n        const { records, record_id_for_update } = this.props.wellness\n        let validated = true\n        record_id_for_update.forEach(record_id => {\n            if (records[record_id].temperature === '') {\n                this.props.invalidateWellnessData(record_id, 'Temperature is not filled out')\n                validated = false\n            } else if (records[record_id].status === '') {\n                this.props.invalidateWellnessData(record_id, 'Health status is not filled out')\n                validated = false\n            }\n        })\n        return validated\n    }\n\n    render() {\n        const { by_student_id, records } = this.props.wellness\n        const { teacher_id } = this.props.route.params\n        const date = this.state.date\n        console.log('wellness: ', this.props.wellness)\n        return (\n            <KeyboardAvoidingView\n                style={{\n                    flex: 1\n                }}\n                // behavior='padding'\n                // keyboardVerticalOffset={100}\n                enabled\n            >\n                <View style={{ flexDirection: 'row', width: '90%', justifyContent: 'space-between', alignSelf: 'center', alignItems: 'center'}}>\n                    <Text style={{ fontSize: 40 }}>{formatDate(date)}</Text>\n                    <TouchableHighlight\n                        style={{ backgroundColor: '#dcf3d0', padding: 10  }}\n                        onPress={this.handleSend}>\n                        <Text style={{ fontSize: 40}}>送出</Text>\n                    </TouchableHighlight>\n                </View>\n                <ScrollView contentContainerStyle={{ alignItems: 'center', marginBottom: 20 }}>\n                    {Object.keys(this.props.class.students).map((student_id) => {\n                        const record_id_list = by_student_id[student_id]\n                        return(\n                            <View key={student_id} style={{ width: '98%' }}>\n                                <Card>\n                                    <CardItem style={{ flex: 1, flexDirection: 'row' }}>\n                                        <TouchableHighlight\n                                            style={styles.childThumbnail}\n                                            // onPress={() => this.addRecord(student_id)}\n                                        >\n                                            <Image\n                                                source={\n                                                    this.props.class.students[student_id].profile_picture === '' ?\n                                                        require('../../../assets/icon-thumbnail.png')\n                                                        : {uri: this.props.class.students[student_id].profile_picture}\n                                                }\n                                                style={styles.thumbnailImage}\n                                            />\n                                        </TouchableHighlight>\n                                        <View style={{ flex: 3 }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', paddingVertical: 10 }}>\n                                                <View style={{ flex: 1 }}>\n                                                    <Text style={{ fontSize: 25}}>{this.props.class.students[student_id].name}</Text>\n                                                </View>\n                                                <View style={{ flex: 1, alignItems: 'flex-end' }}>\n                                                    {this.hasUnsentRecord(record_id_list) ? \n                                                        <Text style={{ color: 'red', fontSize: 15 }}>未送出</Text>\n                                                    : null}\n                                                </View>\n                                            </View>\n                                            {record_id_list.map((record_id, index) => {\n                                                return (\n                                                    <View style={{flex:1}} key={record_id}>\n                                                        { index === 0 ?\n                                                            <Text>早上</Text>\n                                                            : <Text>下午</Text>\n                                                        }\n                                                        <WellnessForm\n                                                            student_id={student_id}\n                                                            record_id={record_id}\n                                                            teacher_id={teacher_id}\n                                                        />\n                                                    </View>\n                                                )\n                                            })}\n                                        </View>\n                                    </CardItem>\n                                </Card>\n                            </View>\n                        )\n                    })}\n                </ScrollView>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    childThumbnail: {\n        flex: 1,\n        backgroundColor: 'white',\n        marginLeft: -7,\n    },\n    thumbnailImage: {\n        width: 140,\n        height: 140,\n        borderRadius: 70\n    },\n    subHeading: {\n        width: 355,\n        height: 45,\n        marginTop: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        class: state.classInfo,\n        wellness: state.healthstatus,\n        unmarked: state.attendance.unmarked\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            fetchClassWellnessData,\n            markPresent,\n            sendWellnessDataSuccess,\n            sendWellnessDataFail,\n            addWellnessRecord,\n            invalidateWellnessData\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WellnessLog)"]},"metadata":{},"sourceType":"module"}