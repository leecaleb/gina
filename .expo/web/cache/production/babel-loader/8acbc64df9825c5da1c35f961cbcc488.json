{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import{Card,Toast}from'native-base';import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Alert from\"react-native-web/dist/exports/Alert\";import DateTimePicker from'@react-native-community/datetimepicker';import{formatDate,formatTime,fetchClassData,beautifyDate}from\"../../util\";import{bindActionCreators}from'redux';import{connect}from'react-redux';import{updateDiaperAmount,addDiaperRecord,editDiaperTime,switchPeeOrPoo,editPooCondition,removeDiaperRecordSuccess,removeDiaperRecordFail,fetchClassDiaperData,createDiaperRecordSuccess,createDiaperRecordFail,editDiaperRecordSuccess,editDiaperRecordFail,editDiaperAmountSuccess,editDiaperAmountFail,clearDiaperlogErrorMessage}from\"../../../redux/school/actions/index\";import PickerComponent from\"../../picker\";import PooTextInput from\"./pootextinput\";var PooEntry=function(_React$Component){_inherits(PooEntry,_React$Component);var _super=_createSuper(PooEntry);function PooEntry(props){var _this;_classCallCheck(this,PooEntry);_this=_super.call(this,props);_this.state={selected_other:false,other_option:''};return _this;}_createClass(PooEntry,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"editPooCondition\",value:function editPooCondition(record_id,condition){var teacher_id=this.props.teacher_id;if(condition==='取消編輯'){return;}else if(condition==='其他'){this.setState({selected_other:true,other_option:' '});}else{console.log('editPooCondition: ',record_id,condition,teacher_id);this.setState({selected_other:false,other_option:condition});this.props.editPooCondition(record_id,condition,teacher_id);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,record_id=_this$props.record_id,record=_this$props.record;var _this$state=this.state,selected_other=_this$state.selected_other,other_option=_this$state.other_option;return React.createElement(View,{style:{width:'23%',height:'100%',justifyContent:'center',backgroundColor:'#fef6dd',borderRadius:10}},selected_other?React.createElement(TextInput,{style:{fontSize:30,textAlign:'center'},keyboardType:\"default\",autoFocus:selected_other,selectTextOnFocus:true,value:other_option,onChangeText:function onChangeText(condition){return _this2.setState({other_option:condition});},onBlur:function onBlur(){return _this2.editPooCondition(record_id,other_option);}}):React.createElement(PickerComponent,{style:{alignItems:'center',padding:5},selectedValue:other_option||record.poo_condition,options:[\"正常\",\"硬\",\"軟糊\",\"稀水\",\"其他\",\"取消編輯\"],textStyle:{fontSize:30},handleOnClick:function handleOnClick(){},handleSelectValue:function handleSelectValue(condition){return _this2.editPooCondition(record_id,condition);}}));}}]);return PooEntry;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{diaper_records:state.diaper,class:state.classInfo};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return _objectSpread({},bindActionCreators({editPooCondition:editPooCondition},dispatch));};export default connect(mapStateToProps,mapDispatchToProps)(PooEntry);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/pooentry.js"],"names":["React","Card","Toast","DateTimePicker","formatDate","formatTime","fetchClassData","beautifyDate","bindActionCreators","connect","updateDiaperAmount","addDiaperRecord","editDiaperTime","switchPeeOrPoo","editPooCondition","removeDiaperRecordSuccess","removeDiaperRecordFail","fetchClassDiaperData","createDiaperRecordSuccess","createDiaperRecordFail","editDiaperRecordSuccess","editDiaperRecordFail","editDiaperAmountSuccess","editDiaperAmountFail","clearDiaperlogErrorMessage","PickerComponent","PooTextInput","PooEntry","props","state","selected_other","other_option","record_id","condition","teacher_id","setState","console","log","record","width","height","justifyContent","backgroundColor","borderRadius","fontSize","textAlign","alignItems","padding","poo_condition","Component","mapStateToProps","diaper_records","diaper","class","classInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Toast } from 'native-base'\nimport { View, ScrollView, Text, Image, TouchableHighlight, StyleSheet, TextInput, KeyboardAvoidingView, Alert } from 'react-native'\nimport DateTimePicker from '@react-native-community/datetimepicker'\nimport { formatDate, formatTime, fetchClassData, beautifyDate } from '../../util'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n    updateDiaperAmount,\n    addDiaperRecord,\n    editDiaperTime,\n    switchPeeOrPoo,\n    editPooCondition,\n    removeDiaperRecordSuccess,\n    removeDiaperRecordFail,\n    fetchClassDiaperData,\n    createDiaperRecordSuccess,\n    createDiaperRecordFail,\n    editDiaperRecordSuccess,\n    editDiaperRecordFail,\n    editDiaperAmountSuccess,\n    editDiaperAmountFail,\n    clearDiaperlogErrorMessage\n} from '../../../redux/school/actions/index'\nimport PickerComponent from '../../picker'\nimport PooTextInput from './pootextinput'\n\nclass PooEntry extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected_other: false,\n            other_option: ''\n        }\n    }\n\n    componentDidMount() {\n       \n    }\n\n    editPooCondition(record_id, condition) {\n        // console.log('editPooCondition: ', record_id, condition, teacher_id)\n        const { teacher_id } = this.props\n        if (condition === '取消編輯') {\n            return \n        } else if (condition === '其他') {\n            this.setState({\n                selected_other: true,\n                other_option: ' '\n            })\n            \n        } else {\n            console.log('editPooCondition: ', record_id, condition, teacher_id)\n            this.setState({\n                selected_other: false,\n                other_option: condition\n            })\n            this.props.editPooCondition(record_id, condition, teacher_id)\n        }\n    }\n\n    render() {\n        // TODO: Provide some options for poo condition\n        // if (this.props.diaper_records.err_message !== ''){\n        //     Alert.alert(\n        //         'Error!',\n        //         this.props.diaper_records.err_message,\n        //         [{text: 'OK', onPress: () => this.props.clearDiaperlogErrorMessage()}]\n        //     )\n        // }\n        const { record_id, record } = this.props\n        const { selected_other,other_option } = this.state\n        // const { by_student_id, records } = this.props.diaper_records\n        // const { students } = this.props.class\n        // const date = this.state.date\n        // console.log('record_id: ', record_id)\n        return (\n            <View\n                style={{\n                    width: '23%',\n                    // marginRight: '3%',\n                    height: '100%',\n                    justifyContent: 'center',\n                    backgroundColor: '#fef6dd',\n                    borderRadius: 10\n                }}\n            >\n                {selected_other ?\n                    <TextInput\n                        style={{ fontSize: 30, textAlign: 'center' }}\n                        keyboardType='default'\n                        autoFocus={selected_other}\n                        // showSoftInputOnFocus={true}\n                        selectTextOnFocus={true}\n                        // scrollEnabled={false}\n                        value={other_option}\n                        onChangeText={(condition) => this.setState({ other_option: condition})}\n                        // onFocus={() => }\n                        onBlur={() => this.editPooCondition(record_id, other_option)}\n                    />\n\n                    // <PooTextInput\n                    //     editPooCondition={(other_option) => this.editPooCondition(record_id, other_option)}\n                    // />\n\n                    : <PickerComponent\n                        style={{\n                            // height: 20,\n                            // width: '50%',\n                            // marginLeft: 25\n                            alignItems: 'center',\n                            padding: 5\n                        }}\n                        selectedValue={other_option || record.poo_condition}\n                        options={[\n                            \"正常\",\n                            \"硬\",\n                            \"軟糊\",\n                            \"稀水\",\n                            \"其他\",\n                            \"取消編輯\"\n                        ]}\n                        textStyle={{ fontSize: 30 }}\n                        handleOnClick={() => { }}\n                        handleSelectValue={(condition) => this.editPooCondition(record_id, condition)}\n                    />\n                }\n            </View>\n        )\n    }\n}\n\n// const styles = StyleSheet.create({\n//     thumbnailImage: {\n//         width: 140,\n//         height: 140,\n//         borderRadius: 70\n//     }\n// })\n\nconst mapStateToProps = (state) => {\n    return {\n        diaper_records: state.diaper,\n        class: state.classInfo\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            editPooCondition\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (PooEntry)"]},"metadata":{},"sourceType":"module"}