{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/parenthome.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setConnectState, initializeChildren, markPresent, clearState } from \"../../redux/parent/actions/index\";\nimport Reloading from \"../reloading\";\nimport WellnessCard from \"./wellnesscard\";\nimport AppetiteCard from \"./appetitecard\";\nimport MilkCard from \"./milkcard\";\nimport SleepCard from \"./sleepcard\";\nimport RestroomCard from \"./restroomcard\";\nimport MessageCard from \"./messagecard\";\nimport ParentHomeTitle from \"./parenthometitle\";\nimport ProfileSelector from \"./profileselector\";\nimport QRPage from \"./qrpage\";\nimport { formatDate, beautifyDate, beautifyTime, get } from \"../util\";\nimport MedicationRequestCard from \"./medicinerequestcard\";\nimport TimeModal from \"./timemodal\";\nimport MorningReminderCard from \"./morningremindercard\";\nimport ENV from \"../../variables\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar ParentHome = function (_React$Component) {\n  _inherits(ParentHome, _React$Component);\n\n  var _super = _createSuper(ParentHome);\n\n  function ParentHome(props) {\n    var _this;\n\n    _classCallCheck(this, ParentHome);\n\n    _this = _super.call(this, props);\n\n    _this.timer = function () {\n      return setTimeout(function () {\n        _this.poll(_this.state.child_id);\n      }, 10000);\n    };\n\n    _this._handleAppStateChange = function (nextAppState) {\n      if (_this.state.appState.match(/inactive|background/) && nextAppState === \"active\") {\n        _this.checkStudentAttendance(_this.state.child_id);\n\n        if (_this.state.date.toDateString() !== new Date().toDateString() && new Date().getHours() > 3) {\n          _this.initializeChildren();\n        }\n      }\n\n      _this.setState({\n        appState: nextAppState\n      });\n    };\n\n    _this.state = {\n      date: new Date(),\n      child_id: '',\n      student_id_array: [],\n      message: '',\n      refreshing: false,\n      showQR: false,\n      temperature: '',\n      appState: '',\n      showDateTimeModal: false,\n      present: false,\n      showTimeModal: false\n    };\n    _this.initializeChildren = _this.initializeChildren.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ParentHome, [{\n    key: \"poll\",\n    value: function poll(student_id) {\n      var _this2 = this;\n\n      var query;\n      return _regeneratorRuntime.async(function poll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/family/updates?student_id=\" + student_id;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(query, {\n                method: 'GET',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var update_types = resJson.data;\n                update_types.forEach(function (update_type) {\n                  _this2.refs[update_type].fetchData(student_id, new Date(_this2.state.date));\n                });\n              }).catch(function (err) {\n                console.log('polling error: ', err);\n              }));\n\n            case 3:\n              this.timeoutId = this.timer();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      window.addEventListener('offline', function (e) {\n        _this3.props.setConnectState(false);\n      });\n      window.addEventListener('online', function (e) {\n        _this3.props.setConnectState(true);\n      });\n      this.initializeChildren();\n      this.timeoutId = this.timer();\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"setDate\",\n    value: function setDate() {\n      var date = new Date();\n\n      if (date.getDay() === 6) {\n        date.setDate(date.getDate() - 1);\n      } else if (date.getDay() === 0) {\n        date.setDate(date.getDate() - 2);\n      }\n\n      this.selectDatetimeConfirm(date);\n    }\n  }, {\n    key: \"isIOS\",\n    value: function isIOS() {\n      return Platform.OS === 'ios';\n    }\n  }, {\n    key: \"initializeChildren\",\n    value: function initializeChildren() {\n      var _this4 = this;\n\n      var parent_id = this.props.route.params.parent_id;\n      fetch(\"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/family/\" + parent_id, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        var statusCode = resJson.statusCode,\n            message = resJson.message,\n            data = resJson.data;\n\n        if (statusCode > 200 || message === 'Internal server error') {\n          alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫' + message);\n          return;\n        }\n\n        _this4.props.initializeChildren(data);\n\n        var student_id_array = Object.keys(_this4.props.parent.child_of_id);\n\n        _this4.setState({\n          child_id: student_id_array[0],\n          student_id_array: student_id_array\n        });\n\n        _this4.setDate();\n      }).catch(function (err) {\n        alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when initializing student profiles');\n      });\n    }\n  }, {\n    key: \"checkStudentAttendance\",\n    value: function checkStudentAttendance(student_id) {\n      var date, response, success, statusCode, message, data, in_time, out_time, excuse_type, _date;\n\n      return _regeneratorRuntime.async(function checkStudentAttendance$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this.state.date.toDateString() !== new Date().toDateString())) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              date = new Date();\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(get(\"/attendance/\" + student_id + \"?date=\" + formatDate(date)));\n\n            case 5:\n              response = _context2.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                in_time = data.in_time, out_time = data.out_time, excuse_type = data.excuse_type;\n\n                if (in_time !== null && out_time !== null || excuse_type !== null) {\n                  _date = new Date();\n\n                  _date.setHours(18, 0, 0, 0);\n\n                  this.setState({\n                    date: _date\n                  });\n                }\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onSelectStudent\",\n    value: function onSelectStudent(child_id) {\n      this.setState({\n        child_id: child_id\n      });\n    }\n  }, {\n    key: \"markPresent\",\n    value: function markPresent(temperature) {\n      var date = this.state.date;\n      this.setState({\n        temperature: temperature,\n        present: temperature !== ''\n      });\n    }\n  }, {\n    key: \"selectDatetimeConfirm\",\n    value: function selectDatetimeConfirm(date) {\n      var _this5 = this;\n\n      var threshold = new Date();\n      threshold.setHours(0, 0, 0, 0);\n\n      if (date.getTime() < threshold.getTime()) {\n        date.setHours(18);\n      } else if (date.toDateString() === new Date().toDateString()) {\n        date.setTime(new Date());\n      } else {\n        date.setHours(16, 0, 0);\n      }\n\n      this.setState({\n        date: date,\n        showDateTimeModal: false\n      }, function () {\n        return _this5.checkStudentAttendance(_this5.state.child_id);\n      });\n    }\n  }, {\n    key: \"getDayDifference\",\n    value: function getDayDifference(startDate, endDate) {\n      var start = new Date(startDate);\n      var end = new Date(endDate);\n      start.setHours(0);\n      end.setHours(0);\n      var oneDay = 24 * 60 * 60 * 1000;\n      return Math.round((end - start) / oneDay);\n    }\n  }, {\n    key: \"goBackADay\",\n    value: function goBackADay() {\n      var date = new Date(this.state.date.getTime());\n\n      if (date.getDay() === 1) {\n        date.setDate(date.getDate() - 3);\n      } else {\n        date.setDate(date.getDate() - 1);\n      }\n\n      this.selectDatetimeConfirm(date);\n    }\n  }, {\n    key: \"goForwardADay\",\n    value: function goForwardADay() {\n      var date = new Date(this.state.date.getTime());\n\n      if (date.getDay() === 5) {\n        date.setDate(date.getDate() + 3);\n      } else {\n        date.setDate(date.getDate() + 1);\n      }\n\n      this.selectDatetimeConfirm(date);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeoutId);\n      AppState.removeEventListener(\"change\", this._handleAppStateChange);\n      this.props.clearState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var parent_id = this.props.route.params.parent_id;\n      var isConnected = this.props.isConnected;\n      var _this$state = this.state,\n          date = _this$state.date,\n          child_id = _this$state.child_id,\n          showQR = _this$state.showQR,\n          temperature = _this$state.temperature,\n          showDateTimeModal = _this$state.showDateTimeModal,\n          present = _this$state.present,\n          showTimeModal = _this$state.showTimeModal;\n\n      if (child_id === '') {\n        return React.createElement(Reloading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }\n        });\n      }\n\n      var selected_student = this.props.parent.child_of_id[child_id];\n      var day_difference = this.getDayDifference(date, new Date());\n      return React.createElement(KeyboardAvoidingView, {\n        enabled: true,\n        behavior: \"padding\",\n        keyboardVerticalOffset: 100,\n        style: {\n          flex: 1,\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, React.createElement(ProfileSelector, {\n        ref: \"profile_selector\",\n        student_of_id: this.props.parent.child_of_id,\n        onSelectStudent: function onSelectStudent(student_id) {\n          return _this6.onSelectStudent(student_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }), showQR ? React.createElement(QRPage, {\n        hideQRCode: function hideQRCode() {\n          return _this6.setState({\n            showQR: false\n          });\n        },\n        parent_id: parent_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }\n      }) : null, showDateTimeModal ? React.createElement(TimeModal, {\n        start_date: date,\n        datetime_type: 'date',\n        hideModal: function hideModal() {\n          return _this6.setState({\n            showDateTimeModal: false\n          });\n        },\n        selectDatetimeConfirm: function selectDatetimeConfirm(datetime) {\n          return _this6.selectDatetimeConfirm(datetime);\n        },\n        minDatetime: new Date().setDate(new Date().getDate() - 7),\n        maxDatetime: new Date().setDate(new Date().getDate() + 1),\n        paddingVertical: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      }) : null, showTimeModal && React.createElement(TimeModal, {\n        start_date: new Date(),\n        datetime_type: 'time',\n        hideModal: function hideModal() {\n          return _this6.setState({\n            showTimeModal: false\n          });\n        },\n        selectDatetimeConfirm: function selectDatetimeConfirm(time) {\n          return _this6.refs['morningreminder'].selectDatetimeConfirm(time);\n        },\n        minDatetime: null,\n        maxDatetime: null,\n        minTime: null,\n        maxTime: null,\n        paddingVertical: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }), React.createElement(ScrollView, {\n        contentContainerStyle: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingBottom: 30\n        },\n        refreshControl: React.createElement(RefreshControl, {\n          style: {\n            backgroundColor: 'transparent'\n          },\n          refreshing: this.state.refreshing,\n          onRefresh: this.initializeChildren,\n          tintColor: \"#ff8944\",\n          title: \"Loading...\",\n          titleColor: \"#368cbf\",\n          colors: ['#ff8944', '#368cbf', '#0000ff'],\n          progressBackgroundColor: \"#ffff00\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '100%',\n          flexDirection: 'row',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '15%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }\n      }, day_difference < 7 ? React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        onClick: function onClick() {\n          return _this6.goBackADay();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 33\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icon-back.png\"),\n        style: {\n          width: 40,\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 37\n        }\n      })) : null), React.createElement(TouchableOpacity, {\n        style: {\n          width: '70%',\n          justifyContent: 'center'\n        },\n        onClick: function onClick() {\n          return _this6.setState({\n            showDateTimeModal: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: width * 0.12,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 29\n        }\n      }, beautifyDate(date))), React.createElement(View, {\n        style: {\n          width: '15%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }, day_difference >= 0 ? React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        onClick: function onClick() {\n          return _this6.goForwardADay();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 33\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icon-forward.png\"),\n        style: {\n          width: 40,\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 37\n        }\n      })) : null)), React.createElement(ParentHomeTitle, {\n        student: selected_student,\n        students: this.props.parent.child_of_id,\n        student_name: this.props.parent.child_of_id[child_id].name,\n        selectOtherChildProfile: function selectOtherChildProfile() {\n          return _this6.refs['profile_selector'].slideIn();\n        },\n        viewQRCode: function viewQRCode() {\n          return _this6.setState({\n            showQR: true\n          });\n        },\n        temperature: temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '93%',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginVertical: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: '30%',\n          padding: 10,\n          backgroundColor: '#ffe1d0'\n        },\n        onClick: function onClick() {\n          return _this6.props.navigation.navigate('PickupRequest', {\n            child_id: child_id,\n            school_id: selected_student.school_id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: width * 0.05,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 29\n        }\n      }, \"\\u63A5\\u56DE\\u544A\\u77E5\")), React.createElement(TouchableOpacity, {\n        style: {\n          width: '30%',\n          padding: 10,\n          backgroundColor: '#fff1b5'\n        },\n        onClick: function onClick() {\n          return _this6.props.navigation.push('MedicationRequestPage', {\n            onGoBack: function onGoBack() {\n              return _this6.refs['med_request'].fetchData(child_id, new Date());\n            },\n            student_id: child_id,\n            class_id: selected_student.class_id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: width * 0.05,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 29\n        }\n      }, \"\\u6258\\u85E5\\u55AE\")), React.createElement(TouchableOpacity, {\n        style: {\n          width: '30%',\n          padding: 10,\n          backgroundColor: '#b5e9e9'\n        },\n        onClick: function onClick() {\n          return _this6.props.navigation.navigate('AbsenceExcusePage', {\n            student_id: child_id,\n            class_id: selected_student.class_id === null ? \"\" : selected_student.class_id,\n            school_id: selected_student.school_id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: width * 0.05,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 29\n        }\n      }, \"\\u8ACB\\u5047\\u55AE\"))), React.createElement(MorningReminderCard, {\n        child_id: child_id,\n        date: date,\n        class_id: selected_student.class_id,\n        ref: \"morningreminder\",\n        present: present,\n        isConnected: isConnected,\n        parent_id: parent_id,\n        showTimeModal: function showTimeModal() {\n          return _this6.setState({\n            showTimeModal: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }\n      }), React.createElement(MedicationRequestCard, {\n        child_id: child_id,\n        date: date,\n        ref: \"med_request\",\n        viewMedRequest: function viewMedRequest(index, data) {\n          return _this6.props.navigation.push('AddMedicationRequestPage', {\n            onGoBack: function onGoBack() {\n              return _this6.refs['med_request'].fetchData(child_id, new Date());\n            },\n            student_id: child_id,\n            class_id: selected_student.class_id === null ? \"\" : selected_student.class_id,\n            index: index,\n            data: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }\n      }), React.createElement(WellnessCard, {\n        child_id: child_id,\n        date: date,\n        ref: \"wellness\",\n        updateTitleTemp: function updateTitleTemp(temperature) {\n          return _this6.markPresent(temperature);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }\n      }), React.createElement(MessageCard, {\n        child_id: child_id,\n        date: date,\n        class_id: selected_student.class_id,\n        ref: \"messages\",\n        parent_id: parent_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }\n      }), React.createElement(AppetiteCard, {\n        child_id: child_id,\n        date: date,\n        ref: \"appetite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }\n      }), React.createElement(MilkCard, {\n        child_id: child_id,\n        date: date,\n        ref: \"milkintake\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      }), React.createElement(SleepCard, {\n        child_id: child_id,\n        date: date,\n        ref: \"sleep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 21\n        }\n      }), React.createElement(RestroomCard, {\n        child_id: child_id,\n        date: date,\n        ref: \"diaper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ParentHome;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  button_text: {\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  button: {\n    width: '30%',\n    padding: 20,\n    justifyContent: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    parent: state.parent,\n    isConnected: state.parent.isConnected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    setConnectState: setConnectState,\n    initializeChildren: initializeChildren,\n    markPresent: markPresent,\n    clearState: clearState\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentHome);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/parenthome.js"],"names":["React","connect","bindActionCreators","setConnectState","initializeChildren","markPresent","clearState","Reloading","WellnessCard","AppetiteCard","MilkCard","SleepCard","RestroomCard","MessageCard","ParentHomeTitle","ProfileSelector","QRPage","formatDate","beautifyDate","beautifyTime","get","MedicationRequestCard","TimeModal","MorningReminderCard","ENV","Dimensions","width","ParentHome","props","timer","setTimeout","poll","state","child_id","_handleAppStateChange","nextAppState","appState","match","checkStudentAttendance","date","toDateString","Date","getHours","setState","student_id_array","message","refreshing","showQR","temperature","showDateTimeModal","present","showTimeModal","bind","student_id","query","fetch","method","headers","Accept","then","res","json","resJson","update_types","data","forEach","update_type","refs","fetchData","catch","err","console","log","timeoutId","window","addEventListener","e","AppState","getDay","setDate","getDate","selectDatetimeConfirm","Platform","OS","parent_id","route","params","statusCode","alert","Object","keys","parent","child_of_id","response","success","in_time","out_time","excuse_type","setHours","threshold","getTime","setTime","startDate","endDate","start","end","oneDay","Math","round","clearTimeout","removeEventListener","isConnected","selected_student","day_difference","getDayDifference","flex","zIndex","onSelectStudent","datetime","time","alignItems","justifyContent","paddingBottom","backgroundColor","flexDirection","goBackADay","require","height","fontSize","textAlign","goForwardADay","name","slideIn","marginVertical","padding","navigation","navigate","school_id","push","onGoBack","class_id","index","Component","styles","StyleSheet","create","button_text","button","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, ScrollView, View, Text, RefreshControl, TouchableOpacity,\n    Alert, Dimensions, AppState,Image, KeyboardAvoidingView, Platform } from 'react-native'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { setConnectState, initializeChildren, markPresent, clearState } from '../../redux/parent/actions/index'\nimport Reloading from '../reloading'\nimport WellnessCard from './wellnesscard';\nimport AppetiteCard from './appetitecard';\nimport MilkCard from './milkcard';\nimport SleepCard from './sleepcard';\nimport RestroomCard from './restroomcard';\nimport MessageCard from './messagecard'\nimport ParentHomeTitle from './parenthometitle'\nimport ProfileSelector from './profileselector'\nimport QRPage from './qrpage'\nimport { formatDate, beautifyDate, beautifyTime, get } from '../util'\nimport MedicationRequestCard from './medicinerequestcard'\nimport TimeModal from './timemodal'\nimport MorningReminderCard from './morningremindercard'\nimport ENV from '../../variables'\nconst { width } = Dimensions.get('window')\n\nclass ParentHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            date: new Date(),\n            child_id: '',\n            student_id_array: [],\n            message: '',\n            refreshing: false,\n            showQR: false,\n            temperature: '',\n            appState: '',\n            showDateTimeModal: false,\n            present: false,\n            showTimeModal: false\n        }\n        this.initializeChildren = this.initializeChildren.bind(this)\n    }\n\n    timer = () => setTimeout(() => {\n        this.poll(this.state.child_id)\n    }, 10000)\n\n    async poll(student_id) {\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/family/updates?student_id=${student_id}`\n        await fetch(query, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                // console.log('parenthome/poll: ')\n                const update_types = resJson.data\n                update_types.forEach(update_type => {\n                    // console.log(update_type)\n                    this.refs[update_type].fetchData(student_id, new Date(this.state.date))\n                })  \n            })\n            .catch(err => {\n                console.log('polling error: ', err)\n            })\n        this.timeoutId = this.timer()\n    }\n\n    componentDidMount() {\n        // this.setDate()\n        window.addEventListener('offline', (e) => {\n            // console.log('offline ', e)\n            this.props.setConnectState(false) \n        });\n        window.addEventListener('online', (e) => {\n            // console.log('online ', e)\n            this.props.setConnectState(true)\n        });\n        this.initializeChildren()\n        this.timeoutId = this.timer()\n        AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n\n    // // SPECIAL DAY QUICK TEMP FIX\n    // isSpecialDate(date) {\n    //     const special_date = new Date()\n    //     special_date.setMonth(5,20)\n    //     return date.toDateString() === special_date.toDateString()\n    // }\n    \n    // goBackADay() {\n    //     const date = new Date(this.state.date.getTime())\n    //     const special_date = new Date()\n    //     special_date.setMonth(5,22)\n    //     if (date.getDay() === 1 && (date.toDateString() !== special_date.toDateString())) {\n    //         date.setDate(date.getDate() - 3)\n    //     } else if (date.toDateString() === special_date.toDateString()) {\n    //         date.setDate(date.getDate() - 2)\n    //     } else {\n    //         date.setDate(date.getDate() - 1)\n    //     }\n    //     this.selectDatetimeConfirm(date)\n    // }\n\n    // goForwardADay() {\n    //     const date = new Date(this.state.date.getTime())\n    //     if (date.getDay() === 5 && !this.tomorrowHasClass()) {\n    //         date.setDate(date.getDate() + 3)\n    //     } else if (date.getDay() === 6 && this.isSpecialDate(date)) {\n    //         date.setDate(date.getDate() + 2)\n    //     } else {\n    //         date.setDate(date.getDate() + 1)\n    //     }\n    //     this.selectDatetimeConfirm(date)\n    // }\n\n    // tomorrowHasClass() {\n    //     const date = new Date(this.state.date)\n    //     date.setDate(date.getDate() + 1)\n    //     const special_date = new Date()\n    //     special_date.setMonth(5, 20)\n    //     if (date.toDateString() === special_date.toDateString()) {\n    //         return true\n    //     }\n    //     return false\n    // }\n\n    \n    setDate() {\n        let date = new Date()\n        if (date.getDay() === 6) {  \n            date.setDate(date.getDate() - 1)\n        } else if (date.getDay() === 0) {\n            date.setDate(date.getDate() - 2)\n        }\n        this.selectDatetimeConfirm(date)\n    }\n\n    // // SPECIAL DAY QUICK TEMP FIX\n    // setDate() {\n    //     let date = new Date()\n    //     if (date.getDay() === 0) {\n    //         date.setDate(date.getDate() - 1)\n    //     }\n    //     this.selectDatetimeConfirm(date)\n    // }\n\n\n    isIOS() {\n        return Platform.OS === 'ios'\n    }\n\n    initializeChildren() {\n        const { parent_id } = this.props.route.params\n\n        // this.setState({ child_id: '', date: new Date })\n        // this.setDate()\n        fetch(`https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/family/${parent_id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then((res) => res.json())\n            .then((resJson) => {\n                const { statusCode, message, data } = resJson\n                if (statusCode > 200 || message === 'Internal server error') {\n                    alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫' + message)\n                    return\n                }\n                this.props.initializeChildren(data)\n                const student_id_array = Object.keys(this.props.parent.child_of_id)\n                this.setState({\n                    child_id: student_id_array[0],\n                    student_id_array\n                })\n                // this.checkStudentAttendance(student_id_array[0])\n                this.setDate()\n            })\n            .catch((err) => {\n                alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when initializing student profiles')\n        })\n    }\n\n    _handleAppStateChange = nextAppState => {\n        if (\n            this.state.appState.match(/inactive|background/) &&\n            nextAppState === \"active\"\n        ) {\n            this.checkStudentAttendance(this.state.child_id)\n\n            if (this.state.date.toDateString() !== (new Date).toDateString() && (new Date).getHours() > 3) {\n                this.initializeChildren()\n            }\n        }\n        this.setState({ appState: nextAppState });\n    };\n\n    async checkStudentAttendance(student_id) {\n        if (this.state.date.toDateString() !== (new Date).toDateString()) {\n            return\n        }\n        const date = new Date()\n        const response = await get(`/attendance/${student_id}?date=${formatDate(date)}`)\n        const { success, statusCode, message, data } = response\n        // console.log('response: ', response)\n        if (success) {\n            const { in_time, out_time, excuse_type } = data\n            if ((in_time !== null && out_time !== null) || excuse_type !== null) {\n                let date = new Date()\n                date.setHours(18,0,0,0)\n                this.setState({\n                    date\n                })\n            }\n        }\n    }\n\n    onSelectStudent(child_id) {\n        this.setState({ child_id })\n    }\n\n    markPresent(temperature) {\n        const { date } = this.state\n        this.setState({\n            temperature,\n            present: temperature !== ''\n        })\n    }\n\n    selectDatetimeConfirm(date) {\n        const threshold = new Date()\n        threshold.setHours(0,0,0,0)\n        if (date.getTime() < threshold.getTime()) { // if selected date is before today\n            date.setHours(18)\n        } else if (date.toDateString() === (new Date()).toDateString()) { // if selected date is today\n            date.setTime(new Date())\n        } else { // if selected date is tomorrow\n            date.setHours(16, 0, 0)\n        }\n        this.setState({ date, showDateTimeModal: false }, () => this.checkStudentAttendance(this.state.child_id))\n    }\n\n    getDayDifference(startDate, endDate) {\n        let start = new Date(startDate)\n        let end = new Date(endDate)\n        start.setHours(0)\n        end.setHours(0)\n        const oneDay = 24 * 60 * 60 * 1000;\n        return Math.round((end - start) / (oneDay))\n    }\n\n    // SPECIAL DAY QUICK TEMP FIX\n    goBackADay() {\n        const date = new Date(this.state.date.getTime())\n        if (date.getDay() === 1) {\n            date.setDate(date.getDate() - 3)\n        } else {\n            date.setDate(date.getDate() - 1)\n        }\n        this.selectDatetimeConfirm(date)\n    }\n\n    goForwardADay() {\n        const date = new Date(this.state.date.getTime())\n        if (date.getDay() === 5) {\n            date.setDate(date.getDate() + 3)\n        } else {\n            date.setDate(date.getDate() + 1)\n        }\n        this.selectDatetimeConfirm(date)\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeoutId)\n        AppState.removeEventListener(\"change\", this._handleAppStateChange);\n        this.props.clearState()\n    }\n\n    render() {\n        const { parent_id } = this.props.route.params\n        const { isConnected } = this.props\n        // console.log('isConnected: ', isConnected)\n        const { date, child_id, showQR, temperature, showDateTimeModal, present, showTimeModal } = this.state\n        // console.log('parenthome: ', date)\n        if (child_id === '') {\n            return (\n                <Reloading />\n            )\n        }\n        const selected_student = this.props.parent.child_of_id[child_id]\n        const day_difference = this.getDayDifference(date, new Date())\n        return (\n            <KeyboardAvoidingView\n                enabled\n                behavior={\"padding\"}\n                keyboardVerticalOffset={100}\n                style={{ flex: 1, zIndex: 1 }}\n            >\n                <ProfileSelector\n                    ref='profile_selector'\n                    student_of_id={this.props.parent.child_of_id}\n                    onSelectStudent={(student_id) => this.onSelectStudent(student_id)}\n                />\n                {showQR ? \n                    <QRPage\n                        hideQRCode={() => this.setState({\n                            showQR: false\n                        })}\n                        parent_id={parent_id}\n                    />\n                    : null\n                }\n\n                {showDateTimeModal ?\n                    <TimeModal\n                        start_date={date}\n                        datetime_type={'date'}\n                        hideModal={() => this.setState({ showDateTimeModal: false })}\n                        selectDatetimeConfirm={(datetime) => this.selectDatetimeConfirm(datetime)}\n                        minDatetime={(new Date()).setDate((new Date()).getDate() - 7)}\n                        maxDatetime={(new Date()).setDate((new Date()).getDate() + 1)}\n                        paddingVertical={100}\n                    />\n                    : null\n                }\n\n                {showTimeModal &&\n                    <TimeModal\n                        start_date={new Date()}\n                        datetime_type={'time'}\n                        hideModal={() => this.setState({ showTimeModal: false })}\n                        selectDatetimeConfirm={(time) => this.refs['morningreminder'].selectDatetimeConfirm(time)}\n                        minDatetime={null}\n                        maxDatetime={null}\n                        minTime={null}\n                        maxTime={null}\n                        paddingVertical={400}\n                    />\n                }\n\n                {<ScrollView\n                    contentContainerStyle={{ alignItems: 'center', justifyContent: 'center', paddingBottom: 30 }}\n                    refreshControl={\n                        <RefreshControl\n                            style={{backgroundColor: 'transparent' }}\n                            refreshing={this.state.refreshing}\n                            onRefresh={this.initializeChildren}\n                            tintColor=\"#ff8944\"\n                            title=\"Loading...\"\n                            titleColor=\"#368cbf\"\n                            colors={['#ff8944', '#368cbf', '#0000ff']}\n                            progressBackgroundColor=\"#ffff00\"\n                        />\n                    }\n                >\n                    <View style={{ width: '100%', flexDirection: 'row', backgroundColor: 'white' }}> \n                        <View style={{ width: '15%'}}>\n                            {day_difference < 7 ?\n                                <TouchableOpacity\n                                    style={{ flex: 1, justifyContent: 'center', alignItems: 'center'}}\n                                    onClick={() => this.goBackADay()}\n                                >\n                                    <Image\n                                        source={require('../../assets/icon-back.png')}\n                                        style={{ width: 40, height: 40 }}\n                                    />\n                                </TouchableOpacity>\n                                : null\n                            }\n                        </View>\n                        <TouchableOpacity\n                            style={{ width: '70%', justifyContent: 'center'}}\n                            onClick={() => this.setState({ showDateTimeModal: true })}\n                        >\n\n                            <Text style={{ fontSize: width * 0.12, textAlign: 'center' }}>\n                                {beautifyDate(date)}\n                            </Text>\n                        </TouchableOpacity>\n                        <View style={{ width: '15%'}}>\n                            {day_difference >= 0 ?\n                                <TouchableOpacity\n                                    style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n                                    onClick={() => this.goForwardADay()}\n                                >\n                                    <Image\n                                        source={require('../../assets/icon-forward.png')}\n                                        style={{ width: 40, height: 40 }}\n                                    />\n                                </TouchableOpacity>\n                                : null\n                            }\n                        </View>\n                    </View>\n                    <ParentHomeTitle\n                        student={selected_student}\n                        students={this.props.parent.child_of_id}\n                        student_name={this.props.parent.child_of_id[child_id].name}\n                        selectOtherChildProfile={() => this.refs['profile_selector'].slideIn()}\n                        viewQRCode={() => this.setState({\n                            showQR: true\n                        })}\n                        temperature={temperature}\n                    />\n\n                    <View style={{ flex: 1, width: '93%', flexDirection: 'row', justifyContent: 'space-between', marginVertical: 5 }}>\n                        <TouchableOpacity\n                            style={{width: '30%', padding: 10, backgroundColor: '#ffe1d0'}}\n                            onClick={() => this.props.navigation.navigate('PickupRequest', {\n                                child_id,\n                                school_id: selected_student.school_id\n                            })}>\n                            <Text style={{ fontSize: width * 0.05, textAlign: 'center'}}>接回告知</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                            style={{width: '30%', padding: 10, backgroundColor: '#fff1b5'}}\n                            onClick={() => this.props.navigation.push('MedicationRequestPage', {\n                                onGoBack: () => this.refs['med_request'].fetchData(child_id, new Date()),\n                                student_id: child_id,\n                                class_id: selected_student.class_id\n                            })}>\n                            <Text style={{ fontSize: width * 0.05, textAlign: 'center' }}>托藥單</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                            style={{width: '30%', padding: 10, backgroundColor: '#b5e9e9'}}\n                            onClick={() => this.props.navigation.navigate('AbsenceExcusePage', {\n                                student_id: child_id,\n                                class_id: selected_student.class_id === null ? \"\" : selected_student.class_id,\n                                school_id: selected_student.school_id\n                            })}>\n                            <Text style={{ fontSize: width * 0.05, textAlign: 'center' }}>請假單</Text>\n                        </TouchableOpacity>\n                    </View>\n\n                    <MorningReminderCard\n                        child_id={child_id}\n                        date={date}\n                        class_id={selected_student.class_id}\n                        ref=\"morningreminder\"\n                        present={present}\n                        isConnected={isConnected}\n                        parent_id={parent_id}\n                        showTimeModal={() => this.setState({ showTimeModal: true })}\n                    />\n\n                    <MedicationRequestCard\n                        child_id={child_id}\n                        date={date}\n                        ref=\"med_request\"\n                        viewMedRequest={(index, data) => this.props.navigation.push('AddMedicationRequestPage', {\n                            onGoBack: () => this.refs['med_request'].fetchData(child_id, new Date()),\n                            student_id: child_id, \n                            class_id: selected_student.class_id === null ? \"\" : selected_student.class_id,\n                            index,\n                            data\n                        })}\n                    />\n\n                    <WellnessCard\n                        child_id={child_id}\n                        date={date}\n                        ref=\"wellness\"\n                        updateTitleTemp={(temperature) => this.markPresent(temperature)}\n                    />\n\n                    <MessageCard\n                        child_id={child_id}\n                        date={date}\n                        class_id={selected_student.class_id}\n                        ref=\"messages\"\n                        parent_id={parent_id}\n                    />\n\n                    <AppetiteCard\n                        child_id={child_id}\n                        date={date}\n                        ref=\"appetite\"\n                    />\n\n                    <MilkCard\n                        child_id={child_id}\n                        date={date}\n                        ref=\"milkintake\"\n                    />\n\n                    <SleepCard\n                        child_id={child_id}\n                        date={date}\n                        ref=\"sleep\"\n                    />\n\n                    <RestroomCard\n                        child_id={child_id}\n                        date={date}\n                        ref=\"diaper\"\n                    />\n\n                </ScrollView>}\n            </KeyboardAvoidingView>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    button_text: {\n        fontSize: 18,\n        textAlign: 'center'\n    },\n    button: {\n        width: '30%',\n        padding: 20,\n        justifyContent: 'center',\n        // shadowColor: \"#000\",\n        // shadowOffset: {\n        //     width: 0,\n        //     height: 1,\n        // },\n        // shadowOpacity: 0.22,\n        // shadowRadius: 2.22,\n        // elevation: 3,\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        parent: state.parent,\n        isConnected: state.parent.isConnected\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            setConnectState,\n            initializeChildren,\n            markPresent,\n            clearState\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentHome)\n"]},"metadata":{},"sourceType":"module"}