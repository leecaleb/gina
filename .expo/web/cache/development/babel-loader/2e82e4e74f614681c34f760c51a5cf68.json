{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/attendancepage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card, CardItem, Toast } from 'native-base';\nimport { connect } from 'react-redux';\nimport { get, formatDate } from \"../util\";\nimport { bindActionCreators } from 'redux';\nimport { fetchTeacherAttendanceSuccess, fetchStudentAttendanceSuccess } from \"../../redux/school/actions/index\";\nimport LoginNumberPad from \"./loginnumberpad\";\nimport Modal from \"./modal\";\n\nvar AttendancePage = function (_React$Component) {\n  _inherits(AttendancePage, _React$Component);\n\n  var _super = _createSuper(AttendancePage);\n\n  function AttendancePage(props) {\n    var _this;\n\n    _classCallCheck(this, AttendancePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      display_list: [],\n      students_or_teachers: 'students',\n      selected_class_id: 'all',\n      showLoginNumberPad: false,\n      showModal: false,\n      modalStudentId: '',\n      teacherClicked: '',\n      teacher_id: '',\n      pageClicked: ''\n    };\n    return _this;\n  }\n\n  _createClass(AttendancePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$school = this.props.school,\n          students = _this$props$school.students,\n          teacherOnDuty = _this$props$school.teacherOnDuty,\n          teachers = _this$props$school.teachers;\n      var display_list = Object.keys(students);\n      this.setState({\n        display_list: display_list\n      });\n      this.fetchTeacherAttendance();\n      this.fetchStudentAttendance();\n\n      if (teacherOnDuty !== '') {\n        var name = teachers[teacherOnDuty].name;\n        this.props.navigation.setOptions({\n          headerRight: function headerRight() {\n            return React.createElement(View, {\n              style: {\n                paddingRight: 20\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }\n            }, React.createElement(Text, {\n              style: {\n                fontSize: 30\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 25\n              }\n            }, \"\\u503C\\u73ED\\u8001\\u5E2B\\uFF1A\" + name));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"selectPersonType\",\n    value: function selectPersonType(type) {\n      var classes = this.props.school.classes;\n      var selected_class_id = this.state.selected_class_id;\n\n      if (selected_class_id === 'all') {\n        this.setState({\n          display_list: Object.keys(this.props.school[type]),\n          students_or_teachers: type\n        });\n        return;\n      }\n\n      this.setState({\n        display_list: classes[selected_class_id][type],\n        students_or_teachers: type\n      });\n    }\n  }, {\n    key: \"selectClass\",\n    value: function selectClass(class_id) {\n      var classes = this.props.school.classes;\n      var students_or_teachers = this.state.students_or_teachers;\n      this.setState({\n        display_list: classes[class_id][students_or_teachers],\n        selected_class_id: class_id\n      });\n    }\n  }, {\n    key: \"selectAttendanceType\",\n    value: function selectAttendanceType(attendanceType) {\n      var classes = this.props.school.classes;\n      var _this$state = this.state,\n          students_or_teachers = _this$state.students_or_teachers,\n          selected_class_id = _this$state.selected_class_id;\n      var display_list = [];\n      var all_id_list = [];\n\n      if (selected_class_id === 'all') {\n        all_id_list = Object.keys(this.props.school[students_or_teachers]);\n      } else {\n        all_id_list = classes[selected_class_id][students_or_teachers];\n      }\n\n      for (var i = 0; i < all_id_list.length; i++) {\n        if (this.props.school[\"student_\" + attendanceType].has(all_id_list[i]) || this.props.school[\"teacher_\" + attendanceType].has(all_id_list[i])) {\n          display_list.push(all_id_list[i]);\n        }\n      }\n\n      this.setState({\n        display_list: display_list\n      });\n    }\n  }, {\n    key: \"fetchTeacherAttendance\",\n    value: function fetchTeacherAttendance() {\n      var school_id, date, response, success, statusCode, message, data, attendance, teachers;\n      return _regeneratorRuntime.async(function fetchTeacherAttendance$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              school_id = this.props.route.params.school_id;\n              date = formatDate(new Date());\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(get(\"/staff-attendance?school_id=\" + school_id + \"&date=\" + date));\n\n            case 4:\n              response = _context.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context.next = 9;\n                break;\n              }\n\n              alert('Sorry 取得教師出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message);\n              return _context.abrupt(\"return\");\n\n            case 9:\n              attendance = data.attendance, teachers = data.teachers;\n              this.props.fetchTeacherAttendanceSuccess(attendance, teachers);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetchStudentAttendance\",\n    value: function fetchStudentAttendance() {\n      var school_id, date, response, success, statusCode, message, data, attendance, students, present, absent;\n      return _regeneratorRuntime.async(function fetchStudentAttendance$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              school_id = this.props.route.params.school_id;\n              date = formatDate(new Date());\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(get(\"/attendance?school_id=\" + school_id + \"&date=\" + date));\n\n            case 4:\n              response = _context2.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context2.next = 9;\n                break;\n              }\n\n              alert('Sorry 取得學生出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message);\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              attendance = data.attendance, students = data.students, present = data.present, absent = data.absent;\n              this.props.fetchStudentAttendanceSuccess(attendance, students, present, absent);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleOnClick\",\n    value: function handleOnClick(person_id) {\n      var teacherOnDuty = this.props.teacherOnDuty;\n      var students_or_teachers = this.state.students_or_teachers;\n\n      if (students_or_teachers === 'students') {\n        if (teacherOnDuty === '') {\n          this.setState({\n            showLoginNumberPad: true,\n            pageClicked: 'student_modal',\n            modalStudentId: person_id\n          });\n          return;\n        }\n\n        this.showModal(person_id);\n      } else {\n        this.setState({\n          showLoginNumberPad: true,\n          teacherClicked: person_id\n        });\n      }\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal(student_id) {\n      this.setState({\n        modalStudentId: student_id,\n        showModal: true\n      });\n    }\n  }, {\n    key: \"handleEnterPasscode\",\n    value: function handleEnterPasscode(passcode) {\n      var passcodeTeacherId = this.props.school.passcodeTeacherId;\n      var _this$props = this.props,\n          passcodeAdminId = _this$props.passcodeAdminId,\n          teachers = _this$props.teachers;\n      var _this$state2 = this.state,\n          pageClicked = _this$state2.pageClicked,\n          teacherClicked = _this$state2.teacherClicked;\n      var teacher_id = passcodeTeacherId[passcode];\n      var admin_id = passcodeAdminId[passcode];\n\n      if (admin_id !== undefined) {\n        this.setState({\n          teacher_id: admin_id,\n          pageClicked: '',\n          showModal: true,\n          showLoginNumberPad: false\n        });\n      } else if (pageClicked === 'student_modal' && teacher_id !== undefined) {\n        this.setState({\n          teacher_id: teacher_id,\n          pageClicked: '',\n          showModal: true,\n          showLoginNumberPad: false\n        });\n      } else if (teacher_id === undefined || teacher_id !== teacherClicked) {\n        Toast.show({\n          text: 'Wrong password!',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 3000\n        });\n      } else {\n        this.setState({\n          showModal: true,\n          showLoginNumberPad: false\n        });\n      }\n    }\n  }, {\n    key: \"hideLoginPad\",\n    value: function hideLoginPad() {\n      this.setState({\n        showLoginNumberPad: false,\n        modalStudentId: ''\n      });\n    }\n  }, {\n    key: \"hideModal\",\n    value: function hideModal() {\n      this.setState({\n        showModal: false,\n        modalStudentId: '',\n        teacher_id: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var school_id = this.props.route.params.school_id;\n      var _this$props2 = this.props,\n          school = _this$props2.school,\n          teacherOnDuty = _this$props2.teacherOnDuty;\n      var student_present = school.student_present,\n          student_unmarked = school.student_unmarked,\n          student_absent = school.student_absent,\n          teacher_present = school.teacher_present,\n          teacher_unmarked = school.teacher_unmarked,\n          teacher_absent = school.teacher_absent;\n      var _this$state3 = this.state,\n          display_list = _this$state3.display_list,\n          students_or_teachers = _this$state3.students_or_teachers,\n          selected_class_id = _this$state3.selected_class_id,\n          modalStudentId = _this$state3.modalStudentId,\n          teacherClicked = _this$state3.teacherClicked,\n          teacher_id = _this$state3.teacher_id,\n          showLoginNumberPad = _this$state3.showLoginNumberPad;\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, showLoginNumberPad ? React.createElement(LoginNumberPad, {\n        handleEnterPasscode: function handleEnterPasscode(passcode) {\n          return _this2.handleEnterPasscode(passcode);\n        },\n        hideLoginPad: function hideLoginPad() {\n          return _this2.hideLoginPad();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }) : null, React.createElement(Modal, {\n        show: this.state.showModal,\n        student_id: modalStudentId,\n        teacher_id: teacherClicked,\n        teacherOnDuty: teacherOnDuty || teacher_id,\n        class_id: selected_class_id,\n        school_id: school_id,\n        navigation: this.props.navigation,\n        fetchStudentAttendance: function fetchStudentAttendance() {\n          return _this2.fetchStudentAttendance();\n        },\n        fetchTeacherAttendance: function fetchTeacherAttendance() {\n          return _this2.fetchTeacherAttendance();\n        },\n        hideModal: function hideModal() {\n          return _this2.hideModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          flex: 1,\n          backgroundColor: students_or_teachers === 'students' ? 'lightgrey' : 'white',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.selectPersonType('students');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }, \"\\u5B78\\u751F\"))), React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          flex: 1,\n          backgroundColor: students_or_teachers === 'teachers' ? 'lightgrey' : 'white',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.selectPersonType('teachers');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }\n      }, \"\\u6559\\u5E2B\")))), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, Object.keys(school.classes).map(function (class_id) {\n        if (class_id === 'all') {\n          return null;\n        }\n\n        return React.createElement(View, {\n          key: class_id,\n          style: {\n            flex: 1,\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableHighlight, {\n          style: {\n            flex: 1,\n            backgroundColor: selected_class_id === class_id ? 'lightgrey' : 'white',\n            justifyContent: 'center'\n          },\n          onPress: function onPress() {\n            return _this2.selectClass(class_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 37\n          }\n        }, school.classes[class_id].name)));\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          flex: 1,\n          backgroundColor: '#ffe1d0',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.selectAttendanceType('absent');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }\n      }, \"\\u7F3A\\u5E2D\"))), React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff1b5',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.selectAttendanceType('unmarked');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 29\n        }\n      }, \"\\u672A\\u77E5\"))), React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          flex: 1,\n          backgroundColor: '#dcf3d0',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.selectAttendanceType('present');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 29\n        }\n      }, \"\\u51FA\\u5E2D\")))), React.createElement(View, {\n        style: {\n          flex: 9,\n          backgroundColor: 'lightgrey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, display_list.map(function (person_id) {\n        var person = school[students_or_teachers][person_id];\n        return React.createElement(TouchableHighlight, {\n          key: person_id,\n          style: {\n            height: 300,\n            width: '33.3%',\n            padding: 5\n          },\n          onPress: function onPress() {\n            return _this2.handleOnClick(person_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }\n        }, React.createElement(Card, {\n          style: {\n            flex: 1,\n            padding: 10,\n            backgroundColor: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 41\n          }\n        }, React.createElement(CardItem, {\n          style: {\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 45\n          }\n        }, React.createElement(Image, {\n          source: person.profile_picture === '' && students_or_teachers === 'students' ? require(\"../../assets/icon-thumbnail.png\") : person.profile_picture === '' && students_or_teachers === 'teachers' ? require(\"../../assets/icon-teacher-thumbnail.png\") : {\n            uri: person.profile_picture\n          },\n          style: {\n            height: 200,\n            width: 200,\n            borderRadius: 100,\n            borderWidth: 10,\n            borderColor: student_present.has(person_id) || teacher_present.has(person_id) ? '#dcf3d0' : student_unmarked.has(person_id) || teacher_unmarked.has(person_id) ? '#fff1b5' : '#ffe1d0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 53\n          }\n        })), React.createElement(CardItem, {\n          footer: true,\n          style: {\n            justifyContent: 'center',\n            marginTop: -5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginTop: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 49\n          }\n        }, person.name))));\n      }))));\n    }\n  }]);\n\n  return AttendancePage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    school: state.school,\n    teacherOnDuty: state.school.teacherOnDuty,\n    teachers: state.school.teachers,\n    passcodeAdminId: state.school.passcodeAdminId,\n    attendance: state.attendance\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    fetchTeacherAttendanceSuccess: fetchTeacherAttendanceSuccess,\n    fetchStudentAttendanceSuccess: fetchStudentAttendanceSuccess\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AttendancePage);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/attendancepage.js"],"names":["React","Card","CardItem","Toast","connect","get","formatDate","bindActionCreators","fetchTeacherAttendanceSuccess","fetchStudentAttendanceSuccess","LoginNumberPad","Modal","AttendancePage","props","state","isLoading","display_list","students_or_teachers","selected_class_id","showLoginNumberPad","showModal","modalStudentId","teacherClicked","teacher_id","pageClicked","school","students","teacherOnDuty","teachers","Object","keys","setState","fetchTeacherAttendance","fetchStudentAttendance","name","navigation","setOptions","headerRight","paddingRight","fontSize","type","classes","class_id","attendanceType","all_id_list","i","length","has","push","school_id","route","params","date","Date","response","success","statusCode","message","data","alert","attendance","present","absent","person_id","student_id","passcode","passcodeTeacherId","passcodeAdminId","admin_id","undefined","show","text","buttonText","position","duration","student_present","student_unmarked","student_absent","teacher_present","teacher_unmarked","teacher_absent","flex","handleEnterPasscode","hideLoginPad","hideModal","flexDirection","backgroundColor","padding","justifyContent","selectPersonType","textAlign","map","selectClass","selectAttendanceType","flexWrap","person","height","width","handleOnClick","profile_picture","require","uri","borderRadius","borderWidth","borderColor","marginTop","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, ScrollView, Text, TouchableHighlight, Alert, Image } from 'react-native'\nimport { Card, CardItem, Toast } from 'native-base'\nimport { connect } from 'react-redux'\nimport { get, formatDate } from '../util'\nimport { bindActionCreators } from 'redux'\nimport { fetchTeacherAttendanceSuccess, fetchStudentAttendanceSuccess } from '../../redux/school/actions/index'\nimport LoginNumberPad from './loginnumberpad'\nimport Modal from './modal'\n\nclass AttendancePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            isLoading: true,\n            display_list: [],\n            students_or_teachers: 'students',\n            selected_class_id: 'all',\n            showLoginNumberPad: false,\n            showModal: false,\n            modalStudentId: '',\n            teacherClicked: '',\n            teacher_id: '',\n            pageClicked: ''\n        }\n    }\n\n    componentDidMount() {\n        const { students, teacherOnDuty, teachers } = this.props.school\n        const display_list = Object.keys(students)\n        this.setState({ display_list })\n        this.fetchTeacherAttendance()\n        this.fetchStudentAttendance()\n        // this.fetchTeacherWellness()\n        // this.fetchStudentWellness()\n        \n        if (teacherOnDuty !== '') {\n            const { name }= teachers[teacherOnDuty]\n            this.props.navigation.setOptions({ \n                headerRight: () => (\n                    <View style={{ paddingRight: 20 }}>\n                        <Text style={{ fontSize: 30 }}>{`值班老師：${name}`}</Text>\n                    </View>\n                )\n            })\n        }\n    }\n\n    selectPersonType(type) {\n        const { classes } = this.props.school\n        const { selected_class_id } = this.state\n        if (selected_class_id === 'all') {\n            this.setState({\n                display_list: Object.keys(this.props.school[type]),\n                students_or_teachers: type\n            })\n            return\n        }\n\n        this.setState({\n            display_list: classes[selected_class_id][type],\n            students_or_teachers: type\n        })\n    }\n\n    selectClass(class_id) {\n        const { classes } = this.props.school\n        const {students_or_teachers} = this.state\n        // console.log('classes[class_id][students_or_teachers]: ', classes[class_id][students_or_teachers])\n        this.setState({\n            display_list: classes[class_id][students_or_teachers],\n            selected_class_id: class_id\n        })\n    }\n\n    selectAttendanceType(attendanceType) {\n        const { classes } = this.props.school\n        const { students_or_teachers, selected_class_id } = this.state\n        var display_list = []\n        var all_id_list = []\n        if (selected_class_id === 'all') {\n            all_id_list = Object.keys(this.props.school[students_or_teachers])\n        } else {\n            all_id_list = classes[selected_class_id][students_or_teachers]\n        }\n        for (var i = 0; i < all_id_list.length; i++) {\n            if (this.props.school[`student_${attendanceType}`].has(all_id_list[i])\n                || this.props.school[`teacher_${attendanceType}`].has(all_id_list[i])) {\n                display_list.push(all_id_list[i])\n            }\n        }\n        this.setState({\n            display_list\n        })\n    }\n\n    async fetchTeacherAttendance() {\n        const { school_id } = this.props.route.params\n        const date = formatDate(new Date())\n        const response = await get(`/staff-attendance?school_id=${school_id}&date=${date}`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得教師出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n\n        // console.log('data: ', data)\n        const { attendance, teachers } = data\n        this.props.fetchTeacherAttendanceSuccess(attendance, teachers)\n    }\n\n    async fetchStudentAttendance() {\n        const { school_id } = this.props.route.params\n        const date = formatDate(new Date())\n        const response = await get(`/attendance?school_id=${school_id}&date=${date}`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得學生出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n\n        const { attendance, students, present, absent } = data\n        // console.log('data: ', data)\n        this.props.fetchStudentAttendanceSuccess(attendance, students, present, absent)\n    }\n\n    handleOnClick(person_id) {\n        const { teacherOnDuty } = this.props\n        const { students_or_teachers } = this.state\n        // console.log('students_or_teachers: ', students_or_teachers)\n        if (students_or_teachers === 'students') {\n            if (teacherOnDuty === '') {\n                this.setState({ \n                    showLoginNumberPad: true,\n                    pageClicked: 'student_modal',\n                    modalStudentId: person_id,\n                    // showModal: true\n                })\n                return\n            }\n            this.showModal(person_id)\n        } else {\n            this.setState({ showLoginNumberPad: true, teacherClicked: person_id })\n        }\n    }\n\n    showModal(student_id) {\n        this.setState({\n            // showLoginNumberPad: true,\n            modalStudentId: student_id,\n            showModal: true\n        })\n    }\n\n    handleEnterPasscode(passcode) {\n        const { passcodeTeacherId } = this.props.school\n        const { passcodeAdminId, teachers } = this.props\n        const { pageClicked, teacherClicked } = this.state\n        const teacher_id = passcodeTeacherId[passcode]\n        const admin_id = passcodeAdminId[passcode]\n        if (admin_id !== undefined) {\n            this.setState({\n                teacher_id: admin_id,\n                pageClicked: '',\n                showModal: true,\n                showLoginNumberPad: false\n            })\n        } else if (pageClicked === 'student_modal' && teacher_id !== undefined) {\n            this.setState({\n                teacher_id,\n                pageClicked: '',\n                showModal: true,\n                showLoginNumberPad: false\n            })\n        } else if (teacher_id === undefined || teacher_id !== teacherClicked) {\n            Toast.show({\n                text: 'Wrong password!',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 3000\n            })\n        } else {\n            this.setState({\n                showModal: true,\n                showLoginNumberPad: false,\n                // modalTeacherId: teacher_id\n            })\n        }\n    }\n\n    hideLoginPad() {\n        this.setState({ \n            showLoginNumberPad: false,\n            modalStudentId: ''\n        })\n    }\n\n    hideModal() {\n        this.setState({\n            showModal: false,\n            modalStudentId: '',\n            teacher_id: ''\n        })\n    }\n\n    render() {\n        const { school_id } = this.props.route.params\n        const { school, teacherOnDuty } = this.props\n        const { \n            student_present,\n            student_unmarked,\n            student_absent,\n            teacher_present,\n            teacher_unmarked,\n            teacher_absent\n        } = school\n        const { \n            display_list,\n            students_or_teachers,\n            selected_class_id,\n            modalStudentId,\n            teacherClicked,\n            teacher_id,\n            showLoginNumberPad\n        } = this.state\n        // console.log('school: ', school)\n        // console.log('attendance: ', school.attendance)\n        // console.log('student_present: ', student_present)\n        // console.log('student_absent: ', student_absent)\n        // console.log('teacherOnDuty: ', teacherOnDuty)\n        // console.log('teacher_id: ', teacher_id)\n        return (\n            <View style={{ flex: 1 }}>\n                {showLoginNumberPad ? \n                    <LoginNumberPad\n                        handleEnterPasscode={(passcode) => this.handleEnterPasscode(passcode)}\n                        hideLoginPad={() => this.hideLoginPad()}\n                    /> : null\n                }\n\n                <Modal\n                    show={this.state.showModal}\n                    student_id={modalStudentId}\n                    teacher_id={teacherClicked}\n                    teacherOnDuty={teacherOnDuty || teacher_id}\n                    class_id={selected_class_id}\n                    school_id={school_id}\n                    navigation={this.props.navigation}\n                    // unmarked={unmarked}\n                    // absent={absent}\n                    fetchStudentAttendance={() => this.fetchStudentAttendance()}\n                    fetchTeacherAttendance={() => this.fetchTeacherAttendance()}\n                    hideModal={() => this.hideModal()}\n                />\n                \n                {/*////////\n                STUDENT/TEACHER \n                ////////*/}\n                <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ \n                                flex: 1, \n                                backgroundColor: students_or_teachers === 'students' ? 'lightgrey' : 'white', \n                                justifyContent: 'center' \n                            }}\n                            onPress={() => this.selectPersonType('students')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>學生</Text>\n                        </TouchableHighlight>\n                    </View>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ \n                                flex:1,\n                                backgroundColor: students_or_teachers === 'teachers' ? 'lightgrey' : 'white', \n                                justifyContent: 'center' \n                            }}\n                            onPress={() => this.selectPersonType('teachers')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>教師</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n\n                {/*////////\n                CLASSES\n                ////////*/}\n                <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\n                    {Object.keys(school.classes).map(class_id => {\n                        if (class_id === 'all') {\n                            return null\n                        }\n                        return (\n                            <View key={class_id} style={{ flex: 1, padding: 10 }}>\n                                <TouchableHighlight\n                                    style={{ \n                                        flex: 1, \n                                        backgroundColor: selected_class_id === class_id ? 'lightgrey' : 'white', \n                                        justifyContent: 'center' \n                                    }}\n                                    onPress={() => this.selectClass(class_id)}\n                                >\n                                    <Text style={{ fontSize: 40, textAlign: 'center' }}>{school.classes[class_id].name}</Text>\n                                </TouchableHighlight>\n                            </View>\n                        )\n                    })}\n                </View>\n\n                {/*////////\n                ATTENDANCE STATUS\n                ////////*/}\n                <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ flex: 1, backgroundColor: '#ffe1d0', justifyContent: 'center' }}\n                            onPress={() => this.selectAttendanceType('absent')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>缺席</Text>\n                        </TouchableHighlight>\n                    </View>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ flex:1, backgroundColor: '#fff1b5', justifyContent: 'center' }}\n                            onPress={() => this.selectAttendanceType('unmarked')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>未知</Text>\n                        </TouchableHighlight>\n                    </View>\n                    <View style={{ flex: 1, padding: 10 }}>\n                        <TouchableHighlight\n                            style={{ flex:1, backgroundColor: '#dcf3d0', justifyContent: 'center' }}\n                            onPress={() => this.selectAttendanceType('present')}\n                        >\n                            <Text style={{ fontSize: 40, textAlign: 'center' }}>出席</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n\n                {/*////////\n                DISPLAY\n                ////////*/}\n                <View style={{ flex: 9, backgroundColor: 'lightgrey' }}>\n                    <ScrollView contentContainerStyle={{ flexDirection:'row', flexWrap: 'wrap', backgroundColor: 'transparent' }}>\n                        {display_list.map(person_id => {\n                            const person = school[students_or_teachers][person_id]\n                            return (\n                                <TouchableHighlight \n                                    key={person_id}\n                                    style={{ \n                                        height: 300, \n                                        width: '33.3%', \n                                        padding: 5,\n                                        // backgroundColor: this.props.attendance.unmarked.has(person_id) ? 'black' : 'white'\n                                    }}\n                                    onPress={() => this.handleOnClick(person_id)}\n                                >\n                                    {/* <View style={{ flex: 1, padding: 10, backgroundColor: 'white' }}> */}\n                                        <Card style={{ flex: 1, padding: 10, backgroundColor: 'white' }}>\n                                            <CardItem style={{ justifyContent: 'center' }}>\n                                                    <Image\n                                                        source={\n                                                            person.profile_picture === '' && students_or_teachers === 'students' ?\n                                                                require('../../assets/icon-thumbnail.png')\n                                                                : person.profile_picture === '' && students_or_teachers === 'teachers' ?\n                                                                    require('../../assets/icon-teacher-thumbnail.png')\n                                                                    : {uri: person.profile_picture}\n                                                        }\n                                                        style={{\n                                                            height: 200,\n                                                            width: 200,\n                                                            borderRadius: 100,\n                                                            borderWidth: 10,\n                                                            borderColor: \n                                                                student_present.has(person_id) || teacher_present.has(person_id) ? '#dcf3d0'\n                                                                    : student_unmarked.has(person_id) || teacher_unmarked.has(person_id) ? '#fff1b5'\n                                                                        : '#ffe1d0'\n                                                        }}\n                                                    />\n                                            </CardItem>\n                                            <CardItem\n                                                footer\n                                                style={{ justifyContent: 'center', marginTop: -5 }}\n                                            >\n                                                <Text style={{ marginTop: -10 }}>{person.name}</Text>\n                                            </CardItem>\n                                        </Card>\n                                    {/* </View> */}\n                                </TouchableHighlight>\n                            )\n                        })}\n                    </ScrollView>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        school: state.school,\n        teacherOnDuty: state.school.teacherOnDuty,\n        teachers: state.school.teachers,\n        passcodeAdminId: state.school.passcodeAdminId,\n        attendance: state.attendance\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            fetchTeacherAttendanceSuccess,\n            fetchStudentAttendanceSuccess\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AttendancePage)"]},"metadata":{},"sourceType":"module"}