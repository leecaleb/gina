{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import TextInput from\"react-native-web/dist/exports/TextInput\";import PickerComponent from\"../../picker\";var RegisterNewStudents=function(_React$Component){_inherits(RegisterNewStudents,_React$Component);var _super=_createSuper(RegisterNewStudents);function RegisterNewStudents(props){var _this;_classCallCheck(this,RegisterNewStudents);_this=_super.call(this,props);_this.state={studentDataArray:[{name:'',class_id:'',class_name:'',profile_picture:'',blood_type:''}]};return _this;}_createClass(RegisterNewStudents,[{key:\"addStudent\",value:function addStudent(){var studentDataArray=this.state.studentDataArray;studentDataArray.push({name:'',class_id:'',class_name:'',profile_picture:'',blood_type:''});this.setState({studentDataArray:studentDataArray});}},{key:\"fillStudent\",value:function fillStudent(){var studentDataArray=this.state.studentDataArray;studentDataArray[0]={name:'John Smith',class_id:null,profile_picture:'',blood_type:'AB'};this.setState({studentDataArray:studentDataArray});}},{key:\"setName\",value:function setName(name,index){var studentDataArray=this.state.studentDataArray;studentDataArray[index].name=name;this.setState({studentDataArray:studentDataArray});}},{key:\"setBloodType\",value:function setBloodType(type,index){var studentDataArray=this.state.studentDataArray;studentDataArray[index].blood_type=type;this.setState({studentDataArray:studentDataArray});}},{key:\"removeStudent\",value:function removeStudent(index){var studentDataArray=this.state.studentDataArray;studentDataArray.splice(index,1);this.setState({studentDataArray:studentDataArray});}},{key:\"handleSelectClass\",value:function handleSelectClass(class_name,index){var classes=this.props.classes;var studentDataArray=this.state.studentDataArray;var class_id='';for(var i=0;i<Object.keys(classes).length;i++){var found_class_id=Object.keys(classes)[i];if(classes[found_class_id].name===class_name){class_id=found_class_id;break;}}studentDataArray[index].class_id=class_id;studentDataArray[index].class_name=class_name;this.setState({studentDataArray:studentDataArray});}},{key:\"getStudentDataArray\",value:function getStudentDataArray(){return this.state.studentDataArray;}},{key:\"render\",value:function render(){var _this2=this;var studentDataArray=this.state.studentDataArray;var classes=this.props.classes;var options=Object.keys(classes).map(function(class_id){return classes[class_id].name;});return React.createElement(View,{style:{width:'100%',padding:'5%',backgroundColor:'#368cbf'}},React.createElement(View,{style:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',paddingVertical:5,backgroundColor:'rgba(255,255,255,0.4)'}},React.createElement(Text,{style:{fontSize:60}},\"\\u5B78\\u751F\\u8CC7\\u6599\"),React.createElement(TouchableHighlight,{style:{padding:10,backgroundColor:'#b5e9e9'},onPress:function onPress(){return _this2.addStudent();}},React.createElement(Text,{style:{fontSize:35}},\"\\u65B0\\u589E\\u5B78\\u751F\"))),studentDataArray.map(function(student,index){var name=student.name,blood_type=student.blood_type;return React.createElement(View,{key:index,style:{width:'100%',padding:'5%',backgroundColor:'#f4d41f'}},React.createElement(View,{style:{flexDirection:'row',padding:10,backgroundColor:'white',justifyContent:'space-between'}},React.createElement(View,{style:{width:'50%',padding:10,backgroundColor:'#F5F5F5',borderRadius:2,borderBottomWidth:2,borderBottomColor:'#b5e9e9',justifyContent:'center'}},React.createElement(TextInput,{placeholder:\"\\u5168\\u540D\",value:name,style:{fontSize:30},onChangeText:function onChangeText(name){return _this2.setName(name,index);}})),React.createElement(View,{style:{width:'20%',padding:10,backgroundColor:'#F5F5F5',borderRadius:2,borderBottomWidth:2,borderBottomColor:'#b5e9e9',justifyContent:'center'}},React.createElement(TextInput,{placeholder:\"\\u8840\\u578B\",value:blood_type,style:{fontSize:30},onChangeText:function onChangeText(type){return _this2.setBloodType(type,index);}})),React.createElement(TouchableHighlight,{style:{width:'20%',padding:10,backgroundColor:'#fa625f',borderRadius:2,justifyContent:'center'},onPress:function onPress(){return _this2.removeStudent(index);}},React.createElement(Text,{style:{alignSelf:'center',fontSize:30}},\"\\u79FB\\u9664\"))),React.createElement(View,{style:{padding:10,backgroundColor:'white'}},React.createElement(PickerComponent,{style:{padding:10,backgroundColor:'#b5e9e9'},textStyle:{fontSize:30},selectedValue:studentDataArray[index].class_name||'選擇學生班級',options:options,handleOnClick:function handleOnClick(){},handleSelectValue:function handleSelectValue(class_name){return _this2.handleSelectClass(class_name,index);}})));}));}}]);return RegisterNewStudents;}(React.Component);export{RegisterNewStudents as default};","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/admin/registernewstudents.js"],"names":["React","PickerComponent","RegisterNewStudents","props","state","studentDataArray","name","class_id","class_name","profile_picture","blood_type","push","setState","index","type","splice","classes","i","Object","keys","length","found_class_id","options","map","width","padding","backgroundColor","flexDirection","justifyContent","alignItems","paddingVertical","fontSize","addStudent","student","borderRadius","borderBottomWidth","borderBottomColor","setName","setBloodType","removeStudent","alignSelf","handleSelectClass","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableHighlight, TextInput } from 'react-native'\nimport PickerComponent from '../../picker'\n\nexport default class RegisterNewStudents extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      studentDataArray: [{\n        name: '',\n        class_id: '',\n        class_name: '',\n        profile_picture: '',\n        blood_type: ''\n      }],\n    }\n  }\n\n  addStudent() {\n    const { studentDataArray } = this.state\n    studentDataArray.push({\n      name: '',\n      class_id: '',\n      class_name: '',\n      profile_picture: '',\n      blood_type: ''\n    })\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  fillStudent() {\n    const { studentDataArray } = this.state\n    studentDataArray[0] = {\n        name: 'John Smith',\n        class_id: null,\n        profile_picture: '',\n        blood_type: 'AB'\n    }\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  setName(name, index) {\n    const { studentDataArray } = this.state\n    studentDataArray[index].name = name\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  setBloodType(type, index) {\n    const {studentDataArray} = this.state\n    studentDataArray[index].blood_type = type\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  removeStudent(index) {\n    const { studentDataArray} = this.state\n    studentDataArray.splice(index, 1)\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  handleSelectClass(class_name, index) {\n    // console.log(class_name)\n    const {classes } = this.props\n    const { studentDataArray } = this.state\n    var class_id = ''\n    for (var i = 0; i < Object.keys(classes).length; i++) {\n      const found_class_id = Object.keys(classes)[i]\n      if (classes[found_class_id].name === class_name) {\n        class_id = found_class_id\n        break\n      }\n    }\n    \n    studentDataArray[index].class_id = class_id\n    studentDataArray[index].class_name = class_name\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  getStudentDataArray() {\n    return this.state.studentDataArray\n  }\n\n  render() {\n    const { studentDataArray } = this.state\n    const { classes } = this.props\n    const options = Object.keys(classes).map(class_id => classes[class_id].name)\n    // console.log('studentDataArray: ', studentDataArray)\n    return (\n      <View style={{ width: '100%', padding: '5%', backgroundColor: '#368cbf' }}>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingVertical: 5, backgroundColor: 'rgba(255,255,255,0.4)' }}>\n            <Text style={{ fontSize: 60 }}>學生資料</Text>\n            <TouchableHighlight\n              style={{ padding: 10, backgroundColor: '#b5e9e9' }}\n              onPress={() => this.addStudent()}\n            >\n              <Text style={{ fontSize: 35 }}>新增學生</Text>\n            </TouchableHighlight>\n\n            {/* <TouchableHighlight\n              style={{ padding: 10, backgroundColor: '#b5e9e9' }}\n              onPress={() => this.fillStudent()}\n            >\n              <Text style={{ fontSize: 30 }}>Fill Student</Text>\n            </TouchableHighlight> */}\n          </View>\n          \n          {studentDataArray.map((student, index) => {\n            const { name, blood_type } = student\n            return (\n              <View key={index} style={{ width: '100%', padding: '5%', backgroundColor: '#f4d41f' }}>\n                <View\n                  style={{ flexDirection: 'row', padding: 10, backgroundColor: 'white', justifyContent: 'space-between' }}\n                >\n                  <View\n                    style={{\n                      width: '50%',\n                      padding: 10,\n                      backgroundColor: '#F5F5F5',\n                      borderRadius: 2,\n                      borderBottomWidth: 2,\n                      borderBottomColor: '#b5e9e9',\n                      justifyContent: 'center'\n                  }}>\n                    <TextInput\n                      placeholder=\"全名\"\n                      value={name}\n                      style={{ fontSize: 30 }}\n                      onChangeText={(name) => this.setName(name, index)}\n                    />\n                  </View>\n\n                  <View\n                    style={{\n                      width: '20%',\n                      padding: 10,\n                      backgroundColor: '#F5F5F5',\n                      borderRadius: 2,\n                      borderBottomWidth: 2,\n                      borderBottomColor: '#b5e9e9',\n                      justifyContent: 'center'\n                  }}>\n                    <TextInput\n                      placeholder=\"血型\"\n                      value={blood_type}\n                      style={{ fontSize: 30 }}\n                      onChangeText={(type) => this.setBloodType(type, index)}\n                    />\n                  </View>\n\n                  <TouchableHighlight\n                    style={{\n                      width: '20%',\n                      padding: 10,\n                      backgroundColor: '#fa625f',\n                      borderRadius: 2,\n                      // borderBottomWidth: 2,\n                      // borderBottomColor: '#b5e9e9',\n                      justifyContent: 'center'\n                    }}\n                    onPress={() => this.removeStudent(index)}\n                  >\n                    <Text style={{ alignSelf: 'center', fontSize: 30 }}>移除</Text>\n                  </TouchableHighlight>\n                </View>\n\n                <View style={{ padding: 10, backgroundColor: 'white' }}>\n                  <PickerComponent\n                    style={{\n                      padding: 10, \n                      backgroundColor: '#b5e9e9'\n                    }}\n                    textStyle={{ fontSize: 30 }}\n                    selectedValue={studentDataArray[index].class_name || '選擇學生班級'}\n                    options={options}\n                    handleOnClick={() => { }}\n                    handleSelectValue={(class_name) => this.handleSelectClass(class_name, index)}\n                  />\n                </View>\n              </View>\n            )\n          })}\n          \n        </View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}