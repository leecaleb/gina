{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/logs/diaperlog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Card, Toast } from 'native-base';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { formatDate, formatTime, fetchClassData as _fetchClassData, beautifyDate } from \"../../util\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateDiaperAmount, addDiaperRecord, editDiaperTime, switchPeeOrPoo, editPooCondition, removeDiaperRecordSuccess, removeDiaperRecordFail, fetchClassDiaperData, createDiaperRecordSuccess, createDiaperRecordFail, editDiaperRecordSuccess, editDiaperRecordFail, editDiaperAmountSuccess, editDiaperAmountFail, clearDiaperlogErrorMessage } from \"../../../redux/school/actions/index\";\nimport PickerComponent from \"../../picker\";\nimport PooEntry from \"./pooentry\";\nimport PooTextInput from \"./pootextinput\";\n\nvar DiaperLog = function (_React$Component) {\n  _inherits(DiaperLog, _React$Component);\n\n  var _super = _createSuper(DiaperLog);\n\n  function DiaperLog(props) {\n    var _this;\n\n    _classCallCheck(this, DiaperLog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      date: new Date(),\n      other_option: '',\n      show_time_picker: false,\n      record_id_for_edit: '',\n      cloth_diaper: false,\n      record_id: ''\n    };\n    _this.handleSend = _this.handleSend.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DiaperLog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$diaper_re = this.props.diaper_records,\n          new_data_for_create = _this$props$diaper_re.new_data_for_create,\n          old_data_for_edit = _this$props$diaper_re.old_data_for_edit;\n      var isConnected = this.props.class.isConnected;\n\n      if (new_data_for_create.size + old_data_for_edit.size === 0 && isConnected) {\n        this.fetchClassData();\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n      }\n    }\n  }, {\n    key: \"checkUnsent\",\n    value: function checkUnsent(student_id) {\n      var _this$props$diaper_re2 = this.props.diaper_records,\n          new_data_for_create = _this$props$diaper_re2.new_data_for_create,\n          old_data_for_edit = _this$props$diaper_re2.old_data_for_edit,\n          by_student_id = _this$props$diaper_re2.by_student_id,\n          students_pending_amount_update = _this$props$diaper_re2.students_pending_amount_update;\n      var records = by_student_id[student_id].records;\n      var found = false;\n\n      if (students_pending_amount_update.has(student_id)) {\n        return true;\n      }\n\n      for (var i = 0; i < records.length; i++) {\n        if (new_data_for_create.has(records[i]) || old_data_for_edit.has(records[i])) {\n          found = true;\n          break;\n        }\n      }\n\n      return found;\n    }\n  }, {\n    key: \"fetchClassData\",\n    value: function fetchClassData() {\n      var isConnected, date, start_date, end_date, diaperData;\n      return _regeneratorRuntime.async(function fetchClassData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isConnected = this.props.class.isConnected;\n\n              if (isConnected) {\n                _context.next = 4;\n                break;\n              }\n\n              Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n              });\n              return _context.abrupt(\"return\");\n\n            case 4:\n              date = new Date();\n              start_date = formatDate(date);\n              date.setDate(date.getDate() + 1);\n              end_date = formatDate(date);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(_fetchClassData('diaper', this.props.class.class_id, start_date, end_date));\n\n            case 10:\n              diaperData = _context.sent;\n              this.denormalize(diaperData);\n              this.props.fetchClassDiaperData(diaperData.data);\n              this.setState({\n                isLoading: false\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"denormalize\",\n    value: function denormalize(diaperData) {\n      if (!diaperData.data.records.all_id.length) {\n        return;\n      }\n\n      var by_id = diaperData.data.records.by_id;\n\n      for (var record_id in by_id) {\n        by_id[record_id].time = new Date(by_id[record_id].time);\n      }\n    }\n  }, {\n    key: \"handleUpdateDiaperAmount\",\n    value: function handleUpdateDiaperAmount(student_id, amount) {\n      this.props.updateDiaperAmount(student_id, amount);\n    }\n  }, {\n    key: \"addDiaperRecord\",\n    value: function addDiaperRecord(student_id) {\n      var teacher_id = this.props.route.params.teacher_id;\n      this.props.addDiaperRecord(student_id, new Date(), this.state.cloth_diaper, teacher_id);\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime(time) {\n      var teacher_id = this.props.route.params.teacher_id;\n      var record_id_for_edit = this.state.record_id_for_edit;\n\n      if (time !== undefined) {\n        this.setState({\n          show_time_picker: false,\n          record_id_for_edit: ''\n        });\n        this.props.editDiaperTime(record_id_for_edit, time, teacher_id);\n      } else {\n        this.setState({\n          show_time_picker: false,\n          record_id_for_edit: ''\n        });\n      }\n    }\n  }, {\n    key: \"switchPeeOrPoo\",\n    value: function switchPeeOrPoo(record_id) {\n      var teacher_id = this.props.route.params.teacher_id;\n      this.props.switchPeeOrPoo(record_id, teacher_id);\n    }\n  }, {\n    key: \"editPooCondition\",\n    value: function editPooCondition(record_id, condition) {\n      var teacher_id = this.props.route.params.teacher_id;\n\n      if (condition === '取消編輯') {\n        return;\n      } else if (condition === '其他') {\n        this.setState({\n          record_id: record_id,\n          other_option: 'Please Fill Out'\n        });\n      } else {\n        this.setState({\n          other_option: ''\n        });\n        this.props.editPooCondition(record_id, condition, teacher_id);\n      }\n    }\n  }, {\n    key: \"confirmRemove\",\n    value: function confirmRemove(student_id, record_id) {\n      var _this2 = this;\n\n      Alert.alert('確定要刪除？', '', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return _this2.removeDiaperRecord(student_id, record_id);\n        }\n      }, {\n        text: 'Cancel',\n        style: 'cancel'\n      }]);\n    }\n  }, {\n    key: \"removeDiaperRecord\",\n    value: function removeDiaperRecord(student_id, record_id) {\n      var _this3 = this;\n\n      var new_data_for_create = this.props.diaper_records.new_data_for_create;\n      var isConnected = this.props.class.isConnected;\n\n      if (new_data_for_create.has(record_id)) {\n        this.props.removeDiaperRecordSuccess(student_id, record_id);\n        return;\n      }\n\n      if (!isConnected) {\n        Toast.show({\n          text: '拍謝 網路連不到! 等一下再試試看',\n          buttonText: 'Okay',\n          position: \"top\",\n          type: \"warning\",\n          duration: 2000\n        });\n        return;\n      }\n\n      var query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/diaper\";\n      fetch(query, {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          record_id: record_id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        var statusCode = resJson.statusCode,\n            message = resJson.message;\n\n        if (statusCode > 200 || message === 'Internal Server Error') {\n          _this3.props.removeDiaperRecordFail(message);\n        }\n\n        _this3.props.removeDiaperRecordSuccess(student_id, record_id);\n      }).catch(function (err) {\n        _this3.props.removeDiaperRecordFail(err);\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      var _this$props$diaper_re3, new_data_for_create, old_data_for_edit, students_pending_amount_update, isConnected, create_records_result, sendDiaperAmountDataResult;\n\n      return _regeneratorRuntime.async(function handleSend$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props$diaper_re3 = this.props.diaper_records, new_data_for_create = _this$props$diaper_re3.new_data_for_create, old_data_for_edit = _this$props$diaper_re3.old_data_for_edit, students_pending_amount_update = _this$props$diaper_re3.students_pending_amount_update;\n              isConnected = this.props.class.isConnected;\n\n              if (isConnected) {\n                _context2.next = 5;\n                break;\n              }\n\n              Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n              });\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              if (!(new_data_for_create.size || old_data_for_edit.size)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(this.createRecords());\n\n            case 8:\n              create_records_result = _context2.sent;\n\n              if (!create_records_result.success) {\n                _context2.next = 13;\n                break;\n              }\n\n              this.props.createDiaperRecordSuccess();\n              _context2.next = 15;\n              break;\n\n            case 13:\n              this.props.createDiaperRecordFail(create_records_result.data);\n              return _context2.abrupt(\"return\");\n\n            case 15:\n              if (!students_pending_amount_update.size) {\n                _context2.next = 25;\n                break;\n              }\n\n              _context2.next = 18;\n              return _regeneratorRuntime.awrap(this.sendDiaperAmountData());\n\n            case 18:\n              sendDiaperAmountDataResult = _context2.sent;\n\n              if (!sendDiaperAmountDataResult.success) {\n                _context2.next = 23;\n                break;\n              }\n\n              this.props.editDiaperAmountSuccess();\n              _context2.next = 25;\n              break;\n\n            case 23:\n              this.props.editDiaperAmountFail(sendDiaperAmountDataResult.err_message);\n              return _context2.abrupt(\"return\");\n\n            case 25:\n              this.props.navigation.goBack();\n\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"sendDiaperAmountData\",\n    value: function sendDiaperAmountData() {\n      var _this4 = this;\n\n      var isConnected, url, response;\n      return _regeneratorRuntime.async(function sendDiaperAmountData$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              isConnected = this.props.class.isConnected;\n\n              if (isConnected) {\n                _context3.next = 4;\n                break;\n              }\n\n              Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n              });\n              return _context3.abrupt(\"return\");\n\n            case 4:\n              url = 'https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/diaper/';\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(Promise.all(Array.from(this.props.diaper_records.students_pending_amount_update).map(function (student_id) {\n                return fetch(url + student_id, {\n                  method: 'PUT',\n                  body: JSON.stringify({\n                    amount: _this4.props.diaper_records.by_student_id[student_id].amount\n                  }),\n                  headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (resJson) {\n                  return resJson;\n                }).catch(function (err) {\n                  throw err;\n                });\n              })).then(function (result) {\n                return {\n                  success: true,\n                  status_code: 200,\n                  data: result\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  err_message: 'error occured while sending diaper amount data: ' + err\n                };\n              }));\n\n            case 7:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"createRecords\",\n    value: function createRecords() {\n      var _this$props$diaper_re4, new_data_for_create, old_data_for_edit, records, data_objs, all_record_id, request_body, url, createRecordsRes;\n\n      return _regeneratorRuntime.async(function createRecords$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props$diaper_re4 = this.props.diaper_records, new_data_for_create = _this$props$diaper_re4.new_data_for_create, old_data_for_edit = _this$props$diaper_re4.old_data_for_edit, records = _this$props$diaper_re4.records;\n              data_objs = [];\n              all_record_id = [].concat(_toConsumableArray(new_data_for_create), _toConsumableArray(old_data_for_edit));\n              all_record_id.forEach(function (record_id) {\n                data_objs.push(_objectSpread({}, records.by_id[record_id]));\n              });\n              this.normalize(data_objs);\n              request_body = {\n                date: formatDate(new Date()),\n                data_objs: data_objs\n              };\n              url = 'https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/diaper/';\n              _context4.next = 9;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                if (resJson.statusCode === 200) {\n                  return {\n                    success: true,\n                    status_code: 200,\n                    data: resJson\n                  };\n                }\n\n                return {\n                  success: false,\n                  status_code: 500,\n                  data: resJson.message\n                };\n              }).catch(function (err) {\n                return {\n                  success: false,\n                  status_code: 500,\n                  err_message: err\n                };\n              }));\n\n            case 9:\n              createRecordsRes = _context4.sent;\n              return _context4.abrupt(\"return\", createRecordsRes);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"editDiaperRecords\",\n    value: function editDiaperRecords() {\n      return _regeneratorRuntime.async(function editDiaperRecords$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\");\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(data_objs) {\n      for (var i = 0; i < data_objs.length; i++) {\n        data_objs[i].time = formatTime(data_objs[i].time);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.props.diaper_records.err_message !== '') {\n        Alert.alert('Error!', this.props.diaper_records.err_message, [{\n          text: 'OK',\n          onPress: function onPress() {\n            return _this5.props.clearDiaperlogErrorMessage();\n          }\n        }]);\n      }\n\n      var teacher_id = this.props.route.params.teacher_id;\n      var _this$state = this.state,\n          show_time_picker = _this$state.show_time_picker,\n          cloth_diaper = _this$state.cloth_diaper;\n      var _this$props$diaper_re5 = this.props.diaper_records,\n          by_student_id = _this$props$diaper_re5.by_student_id,\n          records = _this$props$diaper_re5.records;\n      var students = this.props.class.students;\n      var date = this.state.date;\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1,\n          paddingBottom: 15\n        },\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-evenly'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }\n      }, beautifyDate(date)), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: cloth_diaper ? 'rgba(255,255,255,0.2)' : '#ffe1d0',\n          padding: 10,\n          marginRight: 20\n        },\n        onPress: function onPress() {\n          return _this5.setState({\n            cloth_diaper: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }\n      }, \"\\u5C3F\\u5E03\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: cloth_diaper ? '#ffe1d0' : 'rgba(255,255,255,0.2)',\n          padding: 10,\n          marginRight: 20\n        },\n        onPress: function onPress() {\n          return _this5.setState({\n            cloth_diaper: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, \"\\u5B78\\u7FD2\\u8932\")), React.createElement(TouchableHighlight, {\n        style: {\n          backgroundColor: '#dcf3d0',\n          padding: 10\n        },\n        onPress: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 29\n        }\n      }, \"\\u9001\\u51FA\")))), React.createElement(ScrollView, {\n        contentContainerStyle: {\n          alignItems: 'center'\n        },\n        keyboardShouldPersistTaps: \"handled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }\n      }, Object.keys(students).map(function (student_id) {\n        if (by_student_id[student_id] === null) {\n          return null;\n        }\n\n        var record_id_list = by_student_id[student_id].records;\n        return React.createElement(View, {\n          key: student_id,\n          style: {\n            width: '98%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            paddingVertical: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 33\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '23%',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 37\n          }\n        }, React.createElement(TouchableHighlight, {\n          onPress: function onPress() {\n            return _this5.addDiaperRecord(student_id);\n          },\n          underlayColor: \"transparent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 41\n          }\n        }, React.createElement(Image, {\n          source: students[student_id].profile_picture === '' ? require(\"../../../assets/icon-thumbnail.png\") : {\n            uri: students[student_id].profile_picture\n          },\n          style: styles.thumbnailImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 45\n          }\n        }))), React.createElement(View, {\n          style: {\n            width: '77%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 53\n          }\n        }, students[student_id].name), _this5.checkUnsent(student_id) ? React.createElement(Text, {\n          style: {\n            fontSize: 15,\n            color: 'red',\n            marginLeft: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 57\n          }\n        }, \"\\u672A\\u9001\\u51FA\") : null), React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'flex-end',\n            paddingRight: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 49\n          }\n        }, cloth_diaper ? null : React.createElement(View, {\n          style: {\n            width: '33%',\n            aspectRatio: 1,\n            backgroundColor: '#b5e9e9',\n            alignItems: 'center',\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 57\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 61\n          }\n        }, \"\\u5C3F\\u5E03\\u91CF\"), React.createElement(TextInput, {\n          style: {\n            flex: 1,\n            fontSize: 37\n          },\n          value: \"\" + by_student_id[student_id].amount,\n          onChangeText: function onChangeText(amount) {\n            return _this5.handleUpdateDiaperAmount(student_id, amount);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 61\n          }\n        })))), record_id_list.map(function (record_id) {\n          var record = records.by_id[record_id];\n          if (record.cloth_diaper !== cloth_diaper) return null;\n          return React.createElement(View, {\n            key: record_id,\n            style: {\n              flex: 1,\n              flexDirection: 'row',\n              marginVertical: 6,\n              justifyContent: 'space-between',\n              paddingRight: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 53\n            }\n          }, React.createElement(TouchableHighlight, {\n            style: {\n              width: record.pee_or_poo === '大便' ? '23%' : '35%',\n              height: '100%',\n              justifyContent: 'center',\n              backgroundColor: '#fef6dd',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this5.setState({\n                record_id_for_edit: record_id,\n                show_time_picker: true\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 57\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 35,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 61\n            }\n          }, record.time.getHours() + \":\" + record.time.getMinutes())), React.createElement(TouchableHighlight, {\n            style: {\n              width: record.pee_or_poo === '大便' ? '23%' : '35%',\n              height: '100%',\n              justifyContent: 'center',\n              backgroundColor: '#fef6dd',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this5.switchPeeOrPoo(record_id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 57\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 61\n            }\n          }, \"\" + record.pee_or_poo)), record.pee_or_poo === '大便' ? React.createElement(PooEntry, {\n            teacher_id: teacher_id,\n            record_id: record_id,\n            record: record,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 61\n            }\n          }) : null, React.createElement(TouchableHighlight, {\n            style: {\n              width: '20%',\n              height: '100%',\n              justifyContent: 'center',\n              backgroundColor: '#ffe1d0',\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              return _this5.confirmRemove(student_id, record_id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 57\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 61\n            }\n          }, \"\\u79FB\\u9664\")));\n        }), show_time_picker && React.createElement(DateTimePicker, {\n          style: {\n            width: '100%'\n          },\n          mode: 'time',\n          display: 'spinner',\n          value: new Date(),\n          onChange: function onChange(event, time) {\n            return _this5.setTime(time);\n          },\n          minimumDate: new Date(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 49\n          }\n        })))));\n      })));\n    }\n  }]);\n\n  return DiaperLog;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  thumbnailImage: {\n    width: 140,\n    height: 140,\n    borderRadius: 70\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    diaper_records: state.diaper,\n    class: state.classInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    updateDiaperAmount: updateDiaperAmount,\n    addDiaperRecord: addDiaperRecord,\n    editDiaperTime: editDiaperTime,\n    switchPeeOrPoo: switchPeeOrPoo,\n    editPooCondition: editPooCondition,\n    removeDiaperRecordSuccess: removeDiaperRecordSuccess,\n    removeDiaperRecordFail: removeDiaperRecordFail,\n    fetchClassDiaperData: fetchClassDiaperData,\n    createDiaperRecordSuccess: createDiaperRecordSuccess,\n    createDiaperRecordFail: createDiaperRecordFail,\n    editDiaperRecordSuccess: editDiaperRecordSuccess,\n    editDiaperRecordFail: editDiaperRecordFail,\n    editDiaperAmountSuccess: editDiaperAmountSuccess,\n    editDiaperAmountFail: editDiaperAmountFail,\n    clearDiaperlogErrorMessage: clearDiaperlogErrorMessage\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiaperLog);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/logs/diaperlog.js"],"names":["React","Card","Toast","DateTimePicker","formatDate","formatTime","fetchClassData","beautifyDate","bindActionCreators","connect","updateDiaperAmount","addDiaperRecord","editDiaperTime","switchPeeOrPoo","editPooCondition","removeDiaperRecordSuccess","removeDiaperRecordFail","fetchClassDiaperData","createDiaperRecordSuccess","createDiaperRecordFail","editDiaperRecordSuccess","editDiaperRecordFail","editDiaperAmountSuccess","editDiaperAmountFail","clearDiaperlogErrorMessage","PickerComponent","PooEntry","PooTextInput","DiaperLog","props","state","isLoading","date","Date","other_option","show_time_picker","record_id_for_edit","cloth_diaper","record_id","handleSend","bind","diaper_records","new_data_for_create","old_data_for_edit","isConnected","class","size","setState","show","text","buttonText","position","type","duration","student_id","by_student_id","students_pending_amount_update","records","found","has","i","length","start_date","setDate","getDate","end_date","class_id","diaperData","denormalize","data","all_id","by_id","time","amount","teacher_id","route","params","undefined","condition","Alert","alert","onPress","removeDiaperRecord","style","query","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","statusCode","message","catch","err","createRecords","create_records_result","success","sendDiaperAmountData","sendDiaperAmountDataResult","err_message","navigation","goBack","url","Promise","all","Array","from","map","result","status_code","response","data_objs","all_record_id","forEach","push","normalize","request_body","createRecordsRes","students","flex","paddingBottom","flexDirection","alignItems","justifyContent","fontSize","backgroundColor","padding","marginRight","Object","keys","record_id_list","width","paddingVertical","profile_picture","require","uri","styles","thumbnailImage","name","checkUnsent","color","marginLeft","paddingRight","aspectRatio","handleUpdateDiaperAmount","record","marginVertical","pee_or_poo","height","borderRadius","textAlign","getHours","getMinutes","confirmRemove","event","setTime","Component","StyleSheet","create","mapStateToProps","diaper","classInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Toast } from 'native-base'\nimport { View, ScrollView, Text, Image, TouchableHighlight, StyleSheet, TextInput, KeyboardAvoidingView, Alert } from 'react-native'\nimport DateTimePicker from '@react-native-community/datetimepicker'\nimport { formatDate, formatTime, fetchClassData, beautifyDate } from '../../util'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n    updateDiaperAmount,\n    addDiaperRecord,\n    editDiaperTime,\n    switchPeeOrPoo,\n    editPooCondition,\n    removeDiaperRecordSuccess,\n    removeDiaperRecordFail,\n    fetchClassDiaperData,\n    createDiaperRecordSuccess,\n    createDiaperRecordFail,\n    editDiaperRecordSuccess,\n    editDiaperRecordFail,\n    editDiaperAmountSuccess,\n    editDiaperAmountFail,\n    clearDiaperlogErrorMessage\n} from '../../../redux/school/actions/index'\nimport PickerComponent from '../../picker'\nimport PooEntry from './pooentry'\nimport PooTextInput from './pootextinput'\n\nclass DiaperLog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            date: new Date(),\n            other_option: '',\n            show_time_picker: false,\n            record_id_for_edit: '',\n            cloth_diaper: false,\n            record_id: ''\n        }\n        this.handleSend = this.handleSend.bind(this)\n    }\n\n    componentDidMount() {\n        const { new_data_for_create, old_data_for_edit } = this.props.diaper_records\n        const { isConnected } = this.props.class\n        if ((new_data_for_create.size + old_data_for_edit.size === 0) && isConnected) {\n            this.fetchClassData()\n        } else {\n            this.setState({\n                isLoading: false\n            })\n        }\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n        }\n    }\n\n    checkUnsent(student_id) {\n        const { new_data_for_create, old_data_for_edit, by_student_id, students_pending_amount_update } = this.props.diaper_records\n        const { records } = by_student_id[student_id]\n        var found = false\n        if (students_pending_amount_update.has(student_id)) {\n            return true\n        }\n        for (var i = 0; i < records.length; i++) {\n            if (new_data_for_create.has(records[i]) || old_data_for_edit.has(records[i])) {\n                found = true\n                break\n            }\n        }\n        return found\n    }\n\n    async fetchClassData() {\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        const date = new Date()\n        const start_date = formatDate(date)\n        date.setDate(date.getDate() + 1)\n        const end_date = formatDate(date)\n        const diaperData = await fetchClassData('diaper', this.props.class.class_id, start_date, end_date)\n        this.denormalize(diaperData)\n        // console.log('diaperData: ', diaperData)\n        this.props.fetchClassDiaperData(diaperData.data)\n        this.setState({\n            isLoading: false\n        })\n        // console.log('this.props.diaper_records: ', this.props.diaper_records)\n    }\n\n    denormalize(diaperData) {\n        // console.log('denormalize: ', diaperData)\n        if (!diaperData.data.records.all_id.length) {\n            return\n        }\n        const { by_id } = diaperData.data.records\n        for (const record_id in by_id) {\n            by_id[record_id].time = new Date(by_id[record_id].time)\n        }\n    }\n\n    handleUpdateDiaperAmount(student_id, amount) {\n        this.props.updateDiaperAmount(student_id, amount)\n    }\n\n    addDiaperRecord(student_id) {\n        const { teacher_id } = this.props.route.params\n        this.props.addDiaperRecord(student_id, new Date(), this.state.cloth_diaper, teacher_id)\n    }\n\n    setTime(time) {\n        const { teacher_id } = this.props.route.params\n        const { record_id_for_edit } = this.state\n        if (time !== undefined) {\n            this.setState({ \n                show_time_picker: false,\n                record_id_for_edit: ''\n            })\n            this.props.editDiaperTime(record_id_for_edit, time, teacher_id)\n        } else {\n            this.setState({ \n                show_time_picker: false,\n                record_id_for_edit: ''\n            })\n        }\n    }\n\n    switchPeeOrPoo(record_id) {\n        const { teacher_id } = this.props.route.params\n        this.props.switchPeeOrPoo(record_id, teacher_id)\n    }\n\n    editPooCondition(record_id, condition) {\n        // console.log(record_id, condition)\n        const { teacher_id } = this.props.route.params\n        if (condition === '取消編輯') {\n            return \n        } else if (condition === '其他') {\n            this.setState({\n                record_id,\n                other_option: 'Please Fill Out'\n            })\n        } else {\n            // console.log('HERE')\n            this.setState({ other_option: '' })\n            this.props.editPooCondition(record_id, condition, teacher_id)\n        }\n    }\n\n    confirmRemove(student_id, record_id) {\n        Alert.alert(\n            '確定要刪除？',\n            '',\n            [\n                { text: 'OK', onPress: () => this.removeDiaperRecord(student_id, record_id) },\n                { text: 'Cancel', style: 'cancel'}\n            ]\n        )\n    }\n\n    removeDiaperRecord(student_id, record_id) {\n        const { new_data_for_create } = this.props.diaper_records\n        const { isConnected } = this.props.class\n        \n        if (new_data_for_create.has(record_id)) {\n            this.props.removeDiaperRecordSuccess(student_id, record_id)\n            return\n        }\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/diaper`\n        fetch(query, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                record_id\n            })\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const { statusCode, message } = resJson\n                if (statusCode > 200 || message === 'Internal Server Error') {\n                    this.props.removeDiaperRecordFail(message)\n                }\n                this.props.removeDiaperRecordSuccess(student_id, record_id)\n            })\n            .catch(err => {\n                this.props.removeDiaperRecordFail(err)\n            })\n    }\n\n    async handleSend() { // TODO: test function\n        const { new_data_for_create, old_data_for_edit, students_pending_amount_update } = this.props.diaper_records\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n\n        if (new_data_for_create.size || old_data_for_edit.size) {\n            const create_records_result = await this.createRecords()\n            if (create_records_result.success) {\n                // console.log(create_records_result)\n                this.props.createDiaperRecordSuccess()\n            } else {\n                this.props.createDiaperRecordFail(create_records_result.data)\n                return\n            }\n        }\n\n        if (students_pending_amount_update.size) {\n            const sendDiaperAmountDataResult = await this.sendDiaperAmountData()\n            if (sendDiaperAmountDataResult.success) {\n                this.props.editDiaperAmountSuccess()\n            } else {\n                this.props.editDiaperAmountFail(sendDiaperAmountDataResult.err_message)\n                return\n            }\n        }\n        \n        this.props.navigation.goBack()\n    }\n\n    async sendDiaperAmountData() {\n        const { isConnected } = this.props.class\n        if (!isConnected) {\n            Toast.show({\n                text: '拍謝 網路連不到! 等一下再試試看',\n                buttonText: 'Okay',\n                position: \"top\",\n                type: \"warning\",\n                duration: 2000\n            })\n            return\n        }\n        let url = 'https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/diaper/'\n\n        const response = await Promise.all(\n            Array.from(this.props.diaper_records.students_pending_amount_update).map(student_id => {\n                return fetch(url + student_id, {\n                    method: 'PUT',\n                    body: JSON.stringify({\n                        amount: this.props.diaper_records.by_student_id[student_id].amount\n                    }),\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json'\n                    }\n                })\n                .then(res => res.json())\n                .then(resJson => {\n                    return resJson\n                })\n                .catch(err => { throw err })\n            })\n        )\n        .then(result => {\n            return {\n                success: true,\n                status_code: 200,\n                data: result\n            }\n        })\n        .catch(err => {\n            return {\n                success: false,\n                status_code: 500,\n                err_message: 'error occured while sending diaper amount data: ' + err\n            }\n        })\n        return response\n    }\n\n    async createRecords() {\n        const { new_data_for_create, old_data_for_edit, records } = this.props.diaper_records\n        const data_objs = []\n        const all_record_id = [...new_data_for_create, ...old_data_for_edit]\n        // console.log('new_data_for_create: ', new_data_for_create)\n        all_record_id.forEach(record_id => {\n            data_objs.push({\n                ...records.by_id[record_id]\n            })\n        })\n        this.normalize(data_objs)\n        const request_body = {\n            date: formatDate(new Date()),\n            data_objs\n        }\n        let url = 'https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/diaper/'\n        const createRecordsRes =\n            await fetch(url, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(request_body)\n            })\n            .then(res => res.json())\n            .then(resJson => {\n                // console.log(\"resJson: \", resJson)\n                if (resJson.statusCode === 200) {\n                    return {\n                        success: true,\n                        status_code: 200,\n                        data: resJson\n                    }\n                }\n                return {\n                    success: false,\n                    status_code: 500,\n                    data: resJson.message\n                }\n            })\n            .catch(err => {\n                return {\n                    success: false,\n                    status_code: 500,\n                    err_message: err\n                }\n            })\n\n        return createRecordsRes\n    }\n\n    async editDiaperRecords() {\n        //TODO implement\n        return\n    }\n\n    normalize(data_objs) {\n        // console.log('data_objs: ', data_objs)\n        for (var i = 0; i < data_objs.length; i++) {\n            data_objs[i].time = formatTime(data_objs[i].time)\n        }\n    }\n\n    render() {\n        // TODO: Provide some options for poo condition\n        if (this.props.diaper_records.err_message !== ''){\n            Alert.alert(\n                'Error!',\n                this.props.diaper_records.err_message,\n                [{text: 'OK', onPress: () => this.props.clearDiaperlogErrorMessage()}]\n            )\n        }\n        const { teacher_id } = this.props.route.params\n        const { show_time_picker, cloth_diaper } = this.state\n        const { by_student_id, records } = this.props.diaper_records\n        const { students } = this.props.class\n        const date = this.state.date\n        // console.log('this.props.diaper_records: ', this.props.diaper_records)\n        return (\n            <KeyboardAvoidingView\n                style={{\n                    flex: 1,\n                    paddingBottom: 15\n                }}\n                // behavior='padding'\n                // keyboardVerticalOffset={100}\n                enabled\n            >\n                <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-evenly' }}>\n                    <Text style={{ fontSize: 40 }}>{beautifyDate(date)}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <TouchableHighlight\n                            style={{\n                                backgroundColor: cloth_diaper ? 'rgba(255,255,255,0.2)' : '#ffe1d0',\n                                padding: 10,\n                                marginRight: 20\n                            }}\n                            onPress={() => this.setState({ cloth_diaper: false })}\n                        >\n                            <Text style={{ fontSize: 40 }}>尿布</Text>\n                        </TouchableHighlight>\n\n                        <TouchableHighlight\n                            style={{\n                                backgroundColor: cloth_diaper ? '#ffe1d0' : 'rgba(255,255,255,0.2)',\n                                padding: 10,\n                                marginRight: 20\n                            }}\n                            onPress={() => this.setState({ cloth_diaper: true })}\n                        >\n                            <Text style={{ fontSize: 40 }}>學習褲</Text>\n                        </TouchableHighlight>\n\n                        <TouchableHighlight\n                            style={{ backgroundColor: '#dcf3d0', padding: 10 }}\n                            onPress={this.handleSend}\n                        >\n                            <Text style={{ fontSize: 40 }}>送出</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n                <ScrollView \n                    contentContainerStyle={{ alignItems: 'center' }}\n                    keyboardShouldPersistTaps='handled'\n                >\n                    {Object.keys(students).map((student_id) => {\n                        if (by_student_id[student_id] === null) {\n                            return null\n                        }\n                        const record_id_list = by_student_id[student_id].records\n                        return (\n                            <View key={student_id} style={{ width: '98%' }}>\n                                <Card style={{ flex: 1, flexDirection: 'row', paddingVertical: 15 }}>\n                                    <View style={{ width: '23%', alignItems: 'center', justifyContent: 'center' }}>\n                                        <TouchableHighlight\n                                            // style={styles.childThumbnail}\n                                            onPress={() => this.addDiaperRecord(student_id)}\n                                            underlayColor=\"transparent\"\n                                        >\n                                            <Image\n                                                source={\n                                                    students[student_id].profile_picture === '' ?\n                                                        require('../../../assets/icon-thumbnail.png')\n                                                        : {uri: students[student_id].profile_picture}\n                                                }\n                                                style={styles.thumbnailImage}/>\n                                        </TouchableHighlight> \n                                    </View>\n                                    <View style={{ width: '77%' }}>\n                                        <View style={{ flex: 1 }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                                                <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                                                    <Text style={{ fontSize: 30 }}>\n                                                        {students[student_id].name}\n                                                    </Text>\n                                                    {this.checkUnsent(student_id) ? \n                                                        <Text style={{ fontSize: 15, color: 'red', marginLeft: 15}}>未送出</Text>\n                                                        : null\n                                                    }\n                                                </View>\n                                                <View style={{ flex: 1, alignItems: 'flex-end', paddingRight: 15 }}>\n                                                    {cloth_diaper ? \n                                                        null\n                                                        :\n                                                        <View style={{ width: '33%', aspectRatio: 1, backgroundColor: '#b5e9e9', alignItems: 'center', padding: 5 }}>\n                                                            <Text>尿布量</Text>\n                                                            <TextInput\n                                                                style={{ flex:1, fontSize: 37 }}\n                                                                value={\"\" + by_student_id[student_id].amount}\n                                                                onChangeText={amount => this.handleUpdateDiaperAmount(student_id, amount)}\n                                                            />\n                                                        </View>\n                                                    }\n                                                </View>\n                                            </View>\n                                            {record_id_list.map(record_id => {\n                                                const record = records.by_id[record_id]\n                                                if (record.cloth_diaper !== cloth_diaper) return null\n                                                return (\n                                                    <View key={record_id} style={{ flex: 1, flexDirection: 'row', marginVertical: 6, justifyContent: 'space-between', paddingRight: 15 }}>\n                                                        {/* TIME */}\n                                                        <TouchableHighlight\n                                                            style={{\n                                                                width: record.pee_or_poo === '大便' ? '23%' : '35%',\n                                                                // marginRight: '3%',\n                                                                height: '100%',\n                                                                justifyContent: 'center',\n                                                                backgroundColor: '#fef6dd',\n                                                                borderRadius: 10\n                                                            }}\n                                                            onPress={() => this.setState({ record_id_for_edit: record_id, show_time_picker: true })}\n                                                        >\n                                                            <Text style={{ fontSize: 35, textAlign: 'center' }}>\n                                                                {`${record.time.getHours()}:${record.time.getMinutes()}`}\n                                                            </Text>\n                                                        </TouchableHighlight>\n\n                                                        {/* PEE OR POO*/}\n                                                        <TouchableHighlight\n                                                            style={{\n                                                                width: record.pee_or_poo === '大便' ? '23%' : '35%',\n                                                                // marginRight: '3%',\n                                                                height: '100%',\n                                                                justifyContent: 'center',\n                                                                backgroundColor: '#fef6dd',\n                                                                borderRadius: 10\n                                                            }}\n                                                            onPress={() => this.switchPeeOrPoo(record_id)}\n                                                        >\n                                                            <Text style={{ fontSize: 30, textAlign: 'center' }}>\n                                                                {`${record.pee_or_poo}`}\n                                                            </Text>\n                                                        </TouchableHighlight>\n\n                                                        {/* POO CONDITION*/}\n                                                        {record.pee_or_poo === '大便' ?\n                                                            <PooEntry\n                                                                teacher_id={teacher_id}\n                                                                record_id={record_id}\n                                                                record={record}\n                                                            />\n                                                            // <View\n                                                            //     style={{\n                                                            //         width: '23%',\n                                                            //         // marginRight: '3%',\n                                                            //         height: '100%',\n                                                            //         justifyContent: 'center',\n                                                            //         backgroundColor: '#fef6dd',\n                                                            //         borderRadius: 10\n                                                            //     }}\n                                                            // >\n                                                            //     {this.state.other_option === '' && this.state.record_id != record_id ?\n                                                            //         <PickerComponent\n                                                            //             style={{\n                                                            //                 // height: 20,\n                                                            //                 // width: '50%',\n                                                            //                 // marginLeft: 25\n                                                            //                 alignItems: 'center',\n                                                            //                 padding: 5\n                                                            //             }}\n                                                            //             selectedValue={record.poo_condition}\n                                                            //             options={[\n                                                            //                 \"正常\",\n                                                            //                 \"硬\",\n                                                            //                 \"軟糊\",\n                                                            //                 \"稀水\",\n                                                            //                 \"其他\",\n                                                            //                 \"取消編輯\"\n                                                            //             ]}\n                                                            //             textStyle={{fontSize: 30}}\n                                                            //             handleOnClick={() => { }}\n                                                            //             handleSelectValue={(condition) => this.editPooCondition(record_id, condition)}\n                                                            //         />\n                                                            //         :\n                                                            //         <PooTextInput\n                                                            //             editPooCondition={(condition) => this.editPooCondition(record_id, condition)}\n                                                            //         />\n                                                            //     }\n                                                                    \n                                                            // </View>\n                                                            : null\n                                                        }\n\n                                                        {/* REMOVE RECORD*/}\n                                                        <TouchableHighlight\n                                                            style={{\n                                                                width: '20%',\n                                                                // marginRight: '2%',\n                                                                height: '100%',\n                                                                justifyContent: 'center',\n                                                                backgroundColor: '#ffe1d0',\n                                                                borderRadius: 10\n                                                            }}\n                                                            onPress={() => this.confirmRemove(student_id, record_id)}\n                                                        >\n                                                            <Text style={{ fontSize: 30, textAlign: 'center' }}>\n                                                                移除\n                                                            </Text>\n                                                        </TouchableHighlight>\n                                                    </View>\n                                                )\n                                            })}\n                                            {show_time_picker &&\n                                                <DateTimePicker\n                                                    style={{ width: '100%'}}\n                                                    mode={'time'}\n                                                    display={'spinner'}\n                                                    value={new Date}\n                                                    onChange={(event, time) => this.setTime(time)}\n                                                    minimumDate={new Date()}\n                                                />\n                                            }\n                                        </View>\n                                    </View>\n                                </Card>\n                            </View>\n                        )\n                    })}\n                </ScrollView>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    thumbnailImage: {\n        width: 140,\n        height: 140,\n        borderRadius: 70\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        diaper_records: state.diaper,\n        class: state.classInfo\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            updateDiaperAmount,\n            addDiaperRecord,\n            editDiaperTime,\n            switchPeeOrPoo,\n            editPooCondition,\n            removeDiaperRecordSuccess,\n            removeDiaperRecordFail,\n            fetchClassDiaperData,\n            createDiaperRecordSuccess,\n            createDiaperRecordFail,\n            editDiaperRecordSuccess,\n            editDiaperRecordFail,\n            editDiaperAmountSuccess,\n            editDiaperAmountFail,\n            clearDiaperlogErrorMessage\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (DiaperLog)"]},"metadata":{},"sourceType":"module"}