{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/medicinerequestcard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, CardItem, Button } from 'native-base';\nimport { formatDate, fetchData, beautifyTime } from \"../util\";\nimport Reloading from \"../reloading\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getMedRequestSuccess } from \"../../redux/parent/actions/index\";\nimport ENV from \"../../variables\";\n\nvar MedicationRequestCard = function (_React$Component) {\n  _inherits(MedicationRequestCard, _React$Component);\n\n  var _super = _createSuper(MedicationRequestCard);\n\n  function MedicationRequestCard(props) {\n    var _this;\n\n    _classCallCheck(this, MedicationRequestCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      med_requests: []\n    };\n    return _this;\n  }\n\n  _createClass(MedicationRequestCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var date = this.props.date;\n      this.fetchData(this.props.child_id, new Date(date.getTime()));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.date !== prevProps.date) {\n        this.setState({\n          isLoading: true\n        });\n        this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n      } else if (this.props.child_id !== prevProps.child_id) {\n        this.setState({\n          isLoading: true\n        });\n        this.fetchData(this.props.child_id, new Date());\n      }\n    }\n  }, {\n    key: \"afterFive\",\n    value: function afterFive() {\n      var date = this.props.date;\n      return date.getHours() >= 17;\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(student_id, date) {\n      var _this2 = this;\n\n      var query;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/medicationrequest/student/\" + student_id + \"?date=\" + formatDate(date);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(query, {\n                method: 'GET',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var data = resJson.data;\n\n                var med_requests = _this2.get_todays_requests(data, date);\n\n                _this2.setState({\n                  med_requests: med_requests\n                });\n\n                _this2.setState({\n                  isLoading: false\n                });\n              }).catch(function (err) {\n                alert('Sorry 取得今日托藥單時電腦出狀況了！請與工程師聯繫: error occurred when fetching medication request');\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"get_todays_requests\",\n    value: function get_todays_requests(object_array, date) {\n      var med_requests = [];\n\n      for (var i = 0; i < object_array.length; i++) {\n        var timestamp = new Date(object_array[i].title);\n\n        if (timestamp.toDateString() === date.toDateString()) {\n          med_requests = object_array[i].data;\n\n          for (var j = 0; j < med_requests.length; j++) {\n            med_requests[j].timestamp = new Date(med_requests[j].timestamp);\n          }\n\n          break;\n        }\n      }\n\n      return med_requests;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var med_requests = this.state.med_requests;\n      var isLoading = this.state.isLoading;\n      return React.createElement(Card, {\n        style: {\n          width: '93%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 56,\n          height: 56,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icon-medrequest.png\"),\n        style: {\n          width: 48,\n          height: 48\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"\\u4ECA\\u65E5\\u85E5\\u55AE\")), isLoading ? React.createElement(Reloading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }) : med_requests.length ? React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        contentContainerStyle: {\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, med_requests.map(function (request, index) {\n        return React.createElement(TouchableOpacity, {\n          key: request.id,\n          style: {\n            padding: 10,\n            backgroundColor: '#F5F5F5',\n            marginRight: 15,\n            justifyContent: 'center'\n          },\n          underlayColor: \"#ff8944\",\n          onClick: function onClick() {\n            return _this3.props.viewMedRequest(index, med_requests);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }, _this3.afterFive() && request.administered ? React.createElement(Image, {\n          source: require(\"../../assets/icon-checked.png\"),\n          style: {\n            width: 20,\n            height: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }\n        }) : null, React.createElement(Text, {\n          style: {\n            alignSelf: 'center',\n            fontSize: 25,\n            color: 'rgba(0,0,0,0.8)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 27\n          }\n        }, beautifyTime(request.timestamp))));\n      }))) : React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 17\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, \"\\u6C92\\u6709\\u65B0\\u7D00\\u9304\")))));\n    }\n  }]);\n\n  return MedicationRequestCard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    med_requests: state.parent.med_requests\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    getMedRequestSuccess: getMedRequestSuccess\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(MedicationRequestCard);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/medicinerequestcard.js"],"names":["React","Card","CardItem","Button","formatDate","fetchData","beautifyTime","Reloading","connect","bindActionCreators","getMedRequestSuccess","ENV","MedicationRequestCard","props","state","isLoading","med_requests","date","child_id","Date","getTime","prevProps","setState","getHours","student_id","query","fetch","method","headers","Accept","then","res","json","resJson","data","get_todays_requests","catch","err","alert","object_array","i","length","timestamp","title","toDateString","j","width","flex","flexDirection","height","justifyContent","alignItems","require","paddingTop","fontSize","paddingVertical","paddingBottom","map","request","index","id","padding","backgroundColor","marginRight","viewMedRequest","afterFive","administered","alignSelf","color","Component","mapStateToProps","parent","mapDispatchToProps","dispatch","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,QAAuC,aAAvC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC;AACA,OAAOC,SAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAkC,OAAlC;AACA,SAASC,oBAAT;AACA,OAAOC,GAAP;;IAEMC,qB;;;;;AACJ,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA,UACVC,IADU,GACD,KAAKJ,KADJ,CACVI,IADU;AAElB,WAAKZ,SAAL,CAAe,KAAKQ,KAAL,CAAWK,QAA1B,EAAoC,IAAIC,IAAJ,CAASF,IAAI,CAACG,OAAL,EAAT,CAApC;AACD;;;uCAEkBC,S,EAAW;AAC5B,UAAI,KAAKR,KAAL,CAAWI,IAAX,KAAoBI,SAAS,CAACJ,IAAlC,EAAwC;AAGtC,aAAKK,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,aAAKV,SAAL,CAAe,KAAKQ,KAAL,CAAWK,QAA1B,EAAoC,IAAIC,IAAJ,CAAS,KAAKN,KAAL,CAAWI,IAAX,CAAgBG,OAAhB,EAAT,CAApC;AACD,OALD,MAKO,IAAI,KAAKP,KAAL,CAAWK,QAAX,KAAwBG,SAAS,CAACH,QAAtC,EAAgD;AAErD,aAAKI,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,aAAKV,SAAL,CAAe,KAAKQ,KAAL,CAAWK,QAA1B,EAAoC,IAAIC,IAAJ,EAApC;AACD;AACF;;;gCAEW;AAAA,UACFF,IADE,GACO,KAAKJ,KADZ,CACFI,IADE;AAEV,aAAOA,IAAI,CAACM,QAAL,MAAmB,EAA1B;AACD;;;8BAEeC,U,EAAYP,I;;;;;;;;AACpBQ,cAAAA,K,+DAAkEd,G,mCAAiCa,U,cAAmBpB,UAAU,CAACa,IAAD,C;;+CAChIS,KAAK,CAACD,KAAD,EAAQ;AACfE,gBAAAA,MAAM,EAAE,KADO;AAEfC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,MAAM,EAAE,kBADH;AAEL,kCAAgB;AAFX;AAFM,eAAR,CAAL,CAOHC,IAPG,CAOE,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,eAPF,EAQHF,IARG,CAQE,UAACG,OAAD,EAAa;AAAA,oBACRC,IADQ,GACAD,OADA,CACRC,IADQ;;AAEf,oBAAMlB,YAAY,GAAG,MAAI,CAACmB,mBAAL,CAAyBD,IAAzB,EAA+BjB,IAA/B,CAArB;;AACA,gBAAA,MAAI,CAACK,QAAL,CAAc;AACZN,kBAAAA,YAAY,EAAZA;AADY,iBAAd;;AAGA,gBAAA,MAAI,CAACM,QAAL,CAAc;AAAEP,kBAAAA,SAAS,EAAE;AAAb,iBAAd;AACH,eAfG,EAgBHqB,KAhBG,CAgBG,UAAAC,GAAG,EAAI;AACVC,gBAAAA,KAAK,CAAC,+EAAD,CAAL;AACH,eAlBG,C;;;;;;;;;;;wCAqBYC,Y,EAActB,I,EAAM;AAEtC,UAAID,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAME,SAAS,GAAG,IAAIvB,IAAJ,CAASoB,YAAY,CAACC,CAAD,CAAZ,CAAgBG,KAAzB,CAAlB;;AAGA,YAAID,SAAS,CAACE,YAAV,OAA8B3B,IAAD,CAAO2B,YAAP,EAAjC,EAAwD;AACtD5B,UAAAA,YAAY,GAAGuB,YAAY,CAACC,CAAD,CAAZ,CAAgBN,IAA/B;;AACA,eAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG7B,YAAY,CAACyB,MAAhC,EAAwCI,CAAC,EAAzC,EAA6C;AAC3C7B,YAAAA,YAAY,CAAC6B,CAAD,CAAZ,CAAgBH,SAAhB,GAA4B,IAAIvB,IAAJ,CAASH,YAAY,CAAC6B,CAAD,CAAZ,CAAgBH,SAAzB,CAA5B;AACD;;AACD;AACD;AACF;;AACD,aAAO1B,YAAP;AACD;;;6BAEQ;AAAA;;AAAA,UACCA,YADD,GACkB,KAAKF,KADvB,CACCE,YADD;AAAA,UAECD,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAKP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE+B,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,aAAa,EAAE;AAA1B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE,EAAT;AAAaG,UAAAA,MAAM,EAAE,EAArB;AAAyBC,UAAAA,cAAc,EAAE,QAAzC;AAAmDC,UAAAA,UAAU,EAAE;AAA/D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEC,OAAO,oCADjB;AAEE,QAAA,KAAK,EAAE;AACHN,UAAAA,KAAK,EAAE,EADJ;AAEHG,UAAAA,MAAM,EAAE;AAFL,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAIGvC,SAAS,GACR,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,GAENC,YAAY,CAACyB,MAAb,GACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,aAAa,EAAE,KAA1B;AAAiCO,UAAAA,eAAe,EAAE;AAAlD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,UAAU,MAAtB;AAAuB,QAAA,qBAAqB,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCxC,YAAY,CAACyC,GAAb,CAAiB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACpC,eACE,oBAAC,gBAAD;AACE,UAAA,GAAG,EAAED,OAAO,CAACE,EADf;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,EADJ;AAELC,YAAAA,eAAe,EAAE,SAFZ;AAGLC,YAAAA,WAAW,EAAE,EAHR;AAILb,YAAAA,cAAc,EAAE;AAJX,WAFT;AAQE,UAAA,aAAa,EAAC,SARhB;AASE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACrC,KAAL,CAAWmD,cAAX,CAA0BL,KAA1B,EAAiC3C,YAAjC,CAAN;AAAA,WATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE+B,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,aAAa,EAAE,KAA1B;AAAiCG,YAAAA,UAAU,EAAE;AAA7C,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAI,CAACc,SAAL,MAAoBP,OAAO,CAACQ,YAA5B,GACC,oBAAC,KAAD;AACE,UAAA,MAAM,EAAEd,OAAO,iCADjB;AAEE,UAAA,KAAK,EAAE;AACHN,YAAAA,KAAK,EAAE,EADJ;AAEHG,YAAAA,MAAM,EAAE;AAFL,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAQG,IATN,EAWE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEkB,YAAAA,SAAS,EAAE,QAAb;AAAuBb,YAAAA,QAAQ,EAAE,EAAjC;AAAqCc,YAAAA,KAAK,EAAE;AAA5C,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+E9D,YAAY,CAACoD,OAAO,CAAChB,SAAT,CAA3F,CAXF,CAXF,CADF;AA2BD,OA5BA,CADD,CADF,CADA,GAkCE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAE,CAAR;AAAWQ,UAAAA,eAAe,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAED,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CAxCR,CAVF,CADF,CADF;AA4DD;;;;EA3IiCtD,KAAK,CAACqE,S;;AA8I1C,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACxD,KAAD,EAAW;AACjC,SAAO;AACLE,IAAAA,YAAY,EAAEF,KAAK,CAACyD,MAAN,CAAavD;AADtB,GAAP;AAGD,CAJD;;AAMA,IAAMwD,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,2BACKhE,kBAAkB,CAAC;AAACC,IAAAA,oBAAoB,EAApBA;AAAD,GAAD,EAAyB+D,QAAzB,CADvB;AAGD,CAJD;;AAMA,eAAejE,OAAO,CAAC8D,eAAD,EAAkBE,kBAAlB,EAAsC,IAAtC,EAA4C;AAAEE,EAAAA,UAAU,EAAE;AAAd,CAA5C,CAAP,CAA0E9D,qBAA1E,CAAf","sourcesContent":["import React from 'react'\nimport { View, Text, TextInput, Image, TouchableOpacity, ScrollView, Alert } from 'react-native'\nimport { Card, CardItem, Button } from 'native-base'\nimport { formatDate, fetchData, beautifyTime } from '../util'\nimport Reloading from '../reloading'\nimport { connect } from 'react-redux'\nimport { bindActionCreators} from 'redux'\nimport { getMedRequestSuccess } from '../../redux/parent/actions/index'\nimport ENV from '../../variables'\n\nclass MedicationRequestCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      med_requests: [],\n      // date: new Date()\n    }\n  }\n\n  componentDidMount() {\n    const { date } = this.props\n    this.fetchData(this.props.child_id, new Date(date.getTime()))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      // const { date } = this.props\n      // console.log('this.props.date !== prevProps.date: ', this.props.date.toDateString())\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date(this.props.date.getTime()));\n    } else if (this.props.child_id !== prevProps.child_id) {\n      // console.log('this.props.child_id !== prevProps.child_id')\n      this.setState({ isLoading: true })\n      this.fetchData(this.props.child_id, new Date());\n    }\n  }\n\n  afterFive() {\n    const { date } = this.props\n    return date.getHours() >= 17\n  }\n\n  async fetchData(student_id, date) {\n    const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/medicationrequest/student/${student_id}?date=${formatDate(date)}`\n    await fetch(query, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        }\n    })\n      .then((res) => res.json())\n      .then((resJson) => {\n          const {data} = resJson\n          const med_requests = this.get_todays_requests(data, date)\n          this.setState({\n            med_requests\n          })\n          this.setState({ isLoading: false })\n      })\n      .catch(err => {\n          alert('Sorry 取得今日托藥單時電腦出狀況了！請與工程師聯繫: error occurred when fetching medication request')\n      })\n  }\n\n  get_todays_requests(object_array, date) {\n    // const { date } = this.props\n    let med_requests = []\n    for (var i = 0; i < object_array.length; i++) {\n      const timestamp = new Date(object_array[i].title)\n      // console.log('timestamp: ', timestamp.toDateString())\n      // console.log('date: ', date.toDateString())\n      if (timestamp.toDateString() === (date).toDateString()) {\n        med_requests = object_array[i].data\n        for(var j = 0; j < med_requests.length; j++) {\n          med_requests[j].timestamp = new Date(med_requests[j].timestamp)\n        }\n        break\n      }\n    }\n    return med_requests\n  }\n\n  render() {\n    const { med_requests } = this.state\n    const { isLoading } = this.state\n    // console.log('med_requests: ', med_requests)\n    // console.log('med/this.props.date: ', this.props.date.toDateString())\n    return (\n      <Card style={{ width: '93%' }}>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ width: 56, height: 56, justifyContent: 'center', alignItems: 'center'}}>\n            <Image\n              source={require('../../assets/icon-medrequest.png')}\n              style={{\n                  width: 48,\n                  height: 48\n              }}\n            />\n          </View>\n          <View style={{ flex: 1 }}>\n            <View style={{ paddingTop: 8 }}>\n              <Text style={{ fontSize: 20 }}>今日藥單</Text>\n            </View>\n            {isLoading ? \n              <Reloading />\n              : med_requests.length ? \n                <View style={{ flex: 1, flexDirection: 'row', paddingVertical: 8 }}>\n                  <ScrollView horizontal contentContainerStyle={{ paddingBottom: 10}}>\n                  {med_requests.map((request, index) => {\n                    return (\n                      <TouchableOpacity \n                        key={request.id}\n                        style={{\n                          padding: 10,\n                          backgroundColor: '#F5F5F5', \n                          marginRight: 15, \n                          justifyContent: 'center'\n                        }}\n                        underlayColor='#ff8944'\n                        onClick={() => this.props.viewMedRequest(index, med_requests)}\n                      >\n                        <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                          {this.afterFive() && request.administered ? \n                            <Image\n                              source={require('../../assets/icon-checked.png')}\n                              style={{\n                                  width: 20,\n                                  height: 20\n                              }}\n                            />\n                            : null\n                          }\n                          <Text style={{ alignSelf: 'center', fontSize: 25, color: 'rgba(0,0,0,0.8)' }}>{beautifyTime(request.timestamp)}</Text>\n                        </View>\n                      </TouchableOpacity>\n                    )\n                  })}\n                  </ScrollView>\n                </View>\n                : <View style={{ flex: 1, paddingVertical: 8 }}>\n                    <Text style={{ fontSize: 17 }}>沒有新紀錄</Text>\n                </View>\n            }\n          </View>\n        </View>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    med_requests: state.parent.med_requests\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ...bindActionCreators({getMedRequestSuccess}, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true }) (MedicationRequestCard)"]},"metadata":{},"sourceType":"module"}