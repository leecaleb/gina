{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport AuthLoading from \"./components/auth/authloading\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Root } from 'native-base';\nimport Amplify from 'aws-amplify';\nimport cognito_auth from \"./configuration/aws-cognito-auth\";\nimport { AppLoading, SplashScreen } from 'expo';\nimport { Asset } from 'expo-asset';\nAmplify.configure(cognito_auth);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this._cacheSplashResourcesAsync = function _callee() {\n      var gif;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              gif = require(\"./assets/app-splash.gif\");\n              return _context.abrupt(\"return\", Asset.fromModule(gif).downloadAsync());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._cacheResourcesAsync = function _callee2() {\n      var images, cacheImages;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              SplashScreen.hide();\n              images = [require(\"./assets/app_logo.png\")];\n              cacheImages = images.map(function (image) {\n                return Asset.fromModule(image).downloadAsync();\n              });\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Promise.all(cacheImages));\n\n            case 5:\n              _this.setState({\n                isAppReady: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      isSplashReady: false,\n      isAppReady: false\n    };\n    SplashScreen.preventAutoHide();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AuthLoading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false;\nTextInput.defaultProps = TextInput.defaultProps || {};\nTextInput.defaultProps.allowFontScaling = false;","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/App.js"],"names":["React","AuthLoading","Root","Amplify","cognito_auth","AppLoading","SplashScreen","Asset","configure","App","props","_cacheSplashResourcesAsync","gif","require","fromModule","downloadAsync","_cacheResourcesAsync","hide","images","cacheImages","map","image","Promise","all","setState","isAppReady","state","isSplashReady","preventAutoHide","Component","Text","defaultProps","allowFontScaling","TextInput"],"mappings":";;;;;;;;;;;;AAoBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;;;;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,YAAP;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,MAAzC;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEAJ,OAAO,CAACK,SAAR,CAAkBJ,YAAlB;;IAEqBK,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAUnBC,0BAVmB,GAUU;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,cAAAA,GADqB,GACfC,OAAO,2BADQ;AAAA,+CAEpBN,KAAK,CAACO,UAAN,CAAiBF,GAAjB,EAAsBG,aAAtB,EAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVV;;AAAA,UAenBC,oBAfmB,GAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBV,cAAAA,YAAY,CAACW,IAAb;AACMC,cAAAA,MAFe,GAEN,CACbL,OAAO,yBADM,CAFM;AAMfM,cAAAA,WANe,GAMDD,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK,EAAI;AACtC,uBAAOd,KAAK,CAACO,UAAN,CAAiBO,KAAjB,EAAwBN,aAAxB,EAAP;AACD,eAFmB,CANC;AAAA;AAAA,+CAUfO,OAAO,CAACC,GAAR,CAAYJ,WAAZ,CAVe;;AAAA;AAWrB,oBAAKK,QAAL,CAAc;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAAd;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAfJ;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,KADJ;AAEXF,MAAAA,UAAU,EAAE;AAFD,KAAb;AAIAnB,IAAAA,YAAY,CAACsB,eAAb;AANiB;AAOlB;;;;6BAsBQ;AA0BP,aAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAKD;;;;EA7D8B5B,KAAK,CAAC6B,S;;SAAlBpB,G;AAgErBqB,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACC,YAAL,IAAqB,EAAzC;AACAD,IAAI,CAACC,YAAL,CAAkBC,gBAAlB,GAAqC,KAArC;AAEAC,SAAS,CAACF,YAAV,GAAyBE,SAAS,CAACF,YAAV,IAA0B,EAAnD;AACAE,SAAS,CAACF,YAAV,CAAuBC,gBAAvB,GAA0C,KAA1C","sourcesContent":["// import React from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n\n// export default function App() {\n//   return (\n//     <View style={styles.container}>\n//       <Text>Open up App.js to start working on your app!</Text>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\nimport React from 'react'\nimport AuthLoading from './components/auth/authloading'\nimport { View, Text, TextInput, Image } from 'react-native'\nimport { Root } from 'native-base'\nimport Amplify from 'aws-amplify'\nimport cognito_auth from './configuration/aws-cognito-auth'\nimport { AppLoading, SplashScreen } from 'expo'\nimport { Asset } from 'expo-asset'\n\nAmplify.configure(cognito_auth)\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isSplashReady: false,\n      isAppReady: false\n    }\n    SplashScreen.preventAutoHide()\n  }\n  \n\n  _cacheSplashResourcesAsync = async () => {\n    const gif = require('./assets/app-splash.gif');\n    return Asset.fromModule(gif).downloadAsync();\n  };\n\n  _cacheResourcesAsync = async () => {\n    SplashScreen.hide();\n    const images = [\n      require('./assets/app_logo.png')\n    ];\n\n    const cacheImages = images.map(image => {\n      return Asset.fromModule(image).downloadAsync();\n    });\n\n    await Promise.all(cacheImages);\n    this.setState({ isAppReady: true });\n  };\n\n  render() {\n    // console.log('isAppReady: ', isAppReady)\n    // const { isSplashReady, isAppReady } = this.state\n    // if (!isSplashReady) {\n    //   return (\n    //     <AppLoading\n    //       startAsync={this._cacheSplashResourcesAsync}\n    //       onFinish={() => this.setState({ isSplashReady: true })}\n    //       onError={console.warn}\n    //       autoHideSplash={false}\n    //     />\n    //   )\n    // }\n\n    // if (!isAppReady) {\n    //   return (\n    //     <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n    //       <Image\n    //         source={require('./assets/app-splash.gif')}\n    //         style={{ height: 200, aspectRatio: 1 }}\n    //         onLoad={this._cacheResourcesAsync}\n    //       />\n    //     </View>\n    //   )\n    // }\n\n    return (\n      // <Root>\n        <AuthLoading />\n      // </Root>\n    )\n  }\n}\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false;\n\nTextInput.defaultProps = TextInput.defaultProps || {};\nTextInput.defaultProps.allowFontScaling = false;"]},"metadata":{},"sourceType":"module"}