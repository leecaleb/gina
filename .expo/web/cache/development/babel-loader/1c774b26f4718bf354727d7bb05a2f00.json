{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/schoolhome.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Toast } from 'native-base';\nimport Auth from '@aws-amplify/auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setConnectState, fetchClassesSuccess, fetchTeachersSuccess, fetchStudentsSuccess, initializeStudentWellness, clearSchoolState, addPickupRequest, updateViewingStatus, fetchStudentAttendanceSuccess } from \"../../redux/school/actions/index\";\nimport { get, formatDate } from \"../util\";\nimport NetInfo from '@react-native-community/netinfo';\nimport LoginNumberPad from \"./loginnumberpad\";\nimport ENV from \"../../variables\";\n\nvar SchoolHome = function (_React$Component) {\n  _inherits(SchoolHome, _React$Component);\n\n  var _super = _createSuper(SchoolHome);\n\n  function SchoolHome(props) {\n    var _this;\n\n    _classCallCheck(this, SchoolHome);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      classes: [],\n      err_message: '',\n      showLoginNumberPad: false,\n      pageClicked: '',\n      class_id: '',\n      admin_id: ''\n    };\n    _this.handleSignOut = _this.handleSignOut.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SchoolHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var school_id;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              window.addEventListener('offline', function (e) {\n                _this2.props.setConnectState(false);\n              });\n              window.addEventListener('online', function () {\n                _this2.props.setConnectState(true);\n              });\n              school_id = this.props.route.params.school_id;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.fetchClassIdAndName());\n\n            case 5:\n              this.fetchTeacherData(school_id);\n              this.fetchStudentData(school_id);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetchClassIdAndName\",\n    value: function fetchClassIdAndName() {\n      var _this3 = this;\n\n      var school_id;\n      return _regeneratorRuntime.async(function fetchClassIdAndName$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              school_id = this.props.route.params.school_id;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/school/\" + school_id, {\n                method: 'GET',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (resJson) {\n                var statusCode = resJson.statusCode,\n                    message = resJson.message,\n                    data = resJson.data;\n\n                if (statusCode > 200 || message === 'Internal server error') {\n                  alert('Sorry 取得教室資料時電腦出狀況了！請截圖和與工程師聯繫 ' + message);\n                  return;\n                }\n\n                _this3.setState({\n                  classes: data.classes\n                });\n\n                var classes = {};\n                data.classes.forEach(function (class_data) {\n                  var id = class_data.id,\n                      name = class_data.name;\n                  classes[id] = {\n                    teachers: [],\n                    students: [],\n                    name: name\n                  };\n                });\n\n                _this3.props.fetchClassesSuccess(classes, data.admin_passcode);\n              }).catch(function (err) {\n                alert('Sorry 取得教室資料時電腦出狀況了！請截圖和與工程師聯繫');\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetchTeacherData\",\n    value: function fetchTeacherData(school_id) {\n      var response, success, statusCode, message, data, admins, teachers, classes;\n      return _regeneratorRuntime.async(function fetchTeacherData$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(get(\"/school/\" + school_id + \"/teacher\"));\n\n            case 2:\n              response = _context3.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context3.next = 7;\n                break;\n              }\n\n              alert('Sorry 取得教師資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message);\n              return _context3.abrupt(\"return\");\n\n            case 7:\n              admins = data.admins, teachers = data.teachers, classes = data.classes;\n              this.props.fetchTeachersSuccess(admins, teachers, classes);\n              this.getAdminId(teachers);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getAdminId\",\n    value: function getAdminId(teachers) {\n      var teacher_id_array = Object.keys(teachers);\n\n      for (var i = 0; i < teacher_id_array.length; i++) {\n        if (teachers[teacher_id_array[i]].name === '管理員') {\n          this.setState({\n            admin_id: teacher_id_array[i]\n          });\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"fetchStudentData\",\n    value: function fetchStudentData(school_id) {\n      var response, success, statusCode, message, data, students, classes;\n      return _regeneratorRuntime.async(function fetchStudentData$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(get(\"/school/\" + school_id + \"/student\"));\n\n            case 2:\n              response = _context4.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context4.next = 7;\n                break;\n              }\n\n              alert('Sorry 取得學生資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message);\n              return _context4.abrupt(\"return\");\n\n            case 7:\n              students = data.students, classes = data.classes;\n              this.props.fetchStudentsSuccess(students, classes);\n              this.props.initializeStudentWellness(Object.keys(students));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetchPickupRequest\",\n    value: function fetchPickupRequest(school_id) {\n      var _this4 = this;\n\n      var query = \"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/attendance/pickup-request?school_id=\" + school_id;\n      fetch(query, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        if (resJson.data.length > 0) {\n          _this4.props.addPickupRequest(resJson.data);\n\n          _this4.props.navigation.navigate('PickupAlert', {});\n        }\n      }).catch(function (err) {\n        alert('Sorry 取得接回告知時電腦出狀況了！請截圖和與工程師聯繫');\n      });\n    }\n  }, {\n    key: \"fetchStudentAttendance\",\n    value: function fetchStudentAttendance() {\n      var school_id, date, response, success, statusCode, message, data, attendance, students, present, absent;\n      return _regeneratorRuntime.async(function fetchStudentAttendance$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              school_id = this.props.route.params.school_id;\n              date = formatDate(new Date());\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(get(\"/attendance?school_id=\" + school_id + \"&date=\" + date));\n\n            case 4:\n              response = _context5.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context5.next = 9;\n                break;\n              }\n\n              alert('Sorry 取得學生出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message);\n              return _context5.abrupt(\"return\");\n\n            case 9:\n              attendance = data.attendance, students = data.students, present = data.present, absent = data.absent;\n              this.props.fetchStudentAttendanceSuccess(attendance, students, present, absent);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleEnterPasscode\",\n    value: function handleEnterPasscode(passcode) {\n      console.log(passcode);\n      var _this$props$route$par = this.props.route.params,\n          school_name = _this$props$route$par.school_name,\n          school_id = _this$props$route$par.school_id;\n      var _this$props = this.props,\n          passcodeAdminId = _this$props.passcodeAdminId,\n          passcodeTeacherId = _this$props.passcodeTeacherId,\n          classes = _this$props.classes,\n          teachers = _this$props.teachers;\n      var _this$state = this.state,\n          pageClicked = _this$state.pageClicked,\n          class_id = _this$state.class_id;\n      var teacher_id = passcodeTeacherId[passcode];\n      var admin_id = passcodeAdminId[passcode];\n      console.log(admin_id);\n\n      if (teacher_id === undefined && admin_id === undefined) {\n        alert('密碼不正確！請截圖和與工程師聯繫');\n      } else if (admin_id !== undefined) {\n        this.setState({\n          showLoginNumberPad: false\n        });\n        this.props.navigation.navigate(pageClicked, {\n          school_name: school_name,\n          school_id: school_id,\n          class_id: class_id,\n          class_name: '管理員：' + teachers[admin_id].name,\n          isAdmin: true,\n          admin_id: admin_id\n        });\n      } else if (class_id !== '' && !classes[class_id].teachers.includes(teacher_id) || pageClicked === 'AdminHome') {\n        alert('Sorry 權限不合！請截圖和與工程師聯繫');\n      } else {\n        this.setState({\n          showLoginNumberPad: false\n        });\n        this.props.updateViewingStatus('teacher');\n        this.props.navigation.navigate('TeacherHome', {\n          class_id: class_id,\n          class_name: classes[class_id].name,\n          isAdmin: false\n        });\n      }\n    }\n  }, {\n    key: \"hideLoginPad\",\n    value: function hideLoginPad() {\n      this.setState({\n        showLoginNumberPad: false\n      });\n    }\n  }, {\n    key: \"handleSignOut\",\n    value: function handleSignOut() {\n      var loadAuth = this.props.route.params.loadAuth;\n      Auth.signOut().then(function () {\n        loadAuth();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this5 = this;\n\n      window.removeEventListener('offline', function (e) {\n        _this5.props.setConnectState(false);\n      });\n      window.removeEventListener('online', function (e) {\n        _this5.props.setConnectState(false);\n      });\n      this.props.clearSchoolState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$state2 = this.state,\n          classes = _this$state2.classes,\n          showLoginNumberPad = _this$state2.showLoginNumberPad;\n      var school_id = this.props.route.params.school_id;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }, showLoginNumberPad ? React.createElement(LoginNumberPad, {\n        handleEnterPasscode: function handleEnterPasscode(passcode) {\n          return _this6.handleEnterPasscode(passcode);\n        },\n        hideLoginPad: function hideLoginPad() {\n          return _this6.hideLoginPad();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }\n      }) : null, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableHighlight, {\n        key: \"admin\",\n        style: {\n          flex: 1,\n          backgroundColor: '#74b987',\n          margin: 10,\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this6.setState({\n            showLoginNumberPad: true,\n            pageClicked: 'AdminHome'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }\n      }, \"\\u884C\\u653F\\u7BA1\\u7406\"))), React.createElement(TouchableHighlight, {\n        key: \"attendance_page\",\n        style: {\n          flex: 1,\n          backgroundColor: '#74b987',\n          margin: 10,\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          _this6.props.navigation.push('AttendancePage', {\n            school_id: school_id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 80,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }, \"\\u51FA\\u5E2D/\\u6253\\u5361\")), React.createElement(View, {\n        style: {\n          flex: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }, classes.map(function (class_data) {\n        if (class_data.name === '管理員') return null;\n        return React.createElement(TouchableHighlight, {\n          key: class_data.id,\n          style: {\n            flex: 1,\n            backgroundColor: '#74b987',\n            margin: 10,\n            justifyContent: 'center'\n          },\n          onPress: function onPress() {\n            return _this6.setState({\n              showLoginNumberPad: true,\n              pageClicked: 'TeacherHome',\n              class_id: class_data.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 80,\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 33\n          }\n        }, class_data.name));\n      })));\n    }\n  }]);\n\n  return SchoolHome;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pick_up_request: state.school.pick_up_request,\n    passcodeAdminId: state.school.passcodeAdminId,\n    passcodeTeacherId: state.school.passcodeTeacherId,\n    classes: state.school.classes,\n    teachers: state.school.teachers,\n    viewing_status: state.school.viewing_status,\n    isConnected: state.school.isConnected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    setConnectState: setConnectState,\n    fetchClassesSuccess: fetchClassesSuccess,\n    fetchTeachersSuccess: fetchTeachersSuccess,\n    fetchStudentsSuccess: fetchStudentsSuccess,\n    initializeStudentWellness: initializeStudentWellness,\n    addPickupRequest: addPickupRequest,\n    clearSchoolState: clearSchoolState,\n    updateViewingStatus: updateViewingStatus,\n    fetchStudentAttendanceSuccess: fetchStudentAttendanceSuccess\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SchoolHome);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/schoolhome.js"],"names":["React","Toast","Auth","connect","bindActionCreators","setConnectState","fetchClassesSuccess","fetchTeachersSuccess","fetchStudentsSuccess","initializeStudentWellness","clearSchoolState","addPickupRequest","updateViewingStatus","fetchStudentAttendanceSuccess","get","formatDate","NetInfo","LoginNumberPad","ENV","SchoolHome","props","state","classes","err_message","showLoginNumberPad","pageClicked","class_id","admin_id","handleSignOut","bind","window","addEventListener","e","school_id","route","params","fetchClassIdAndName","fetchTeacherData","fetchStudentData","fetch","method","headers","Accept","then","res","json","resJson","statusCode","message","data","alert","setState","forEach","class_data","id","name","teachers","students","admin_passcode","catch","err","response","success","admins","getAdminId","teacher_id_array","Object","keys","i","length","query","navigation","navigate","date","Date","attendance","present","absent","passcode","console","log","school_name","passcodeAdminId","passcodeTeacherId","teacher_id","undefined","class_name","isAdmin","includes","loadAuth","signOut","removeEventListener","flex","flexDirection","handleEnterPasscode","hideLoginPad","backgroundColor","margin","justifyContent","fontSize","textAlign","push","map","Component","mapStateToProps","pick_up_request","school","viewing_status","isConnected","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableHighlight, Alert } from 'react-native'\nimport { Toast } from 'native-base'\nimport Auth from '@aws-amplify/auth'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { \n    setConnectState, \n    fetchClassesSuccess, \n    fetchTeachersSuccess, \n    fetchStudentsSuccess,\n    initializeStudentWellness,\n    clearSchoolState,\n    addPickupRequest,\n    updateViewingStatus,\n    fetchStudentAttendanceSuccess } from '../../redux/school/actions/index'\nimport { get, formatDate } from '../util'\nimport NetInfo from '@react-native-community/netinfo'\nimport LoginNumberPad from './loginnumberpad'\n// import PickupAlert from './pickupalert'\nimport ENV from '../../variables'\n\nclass SchoolHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            classes: [],\n            err_message: '',\n            showLoginNumberPad: false,\n            pageClicked: '',\n            class_id: '',\n            admin_id: ''\n        }\n        this.handleSignOut = this.handleSignOut.bind(this)\n    }\n\n    async componentDidMount() {\n        // this.unsubscribe = NetInfo.addEventListener(state => {\n        //     const {isConnected} = state\n        //     this.props.setConnectState(isConnected)\n        // });\n        window.addEventListener('offline', (e) => {\n            this.props.setConnectState(false) \n        });\n        window.addEventListener('online', () => {\n            this.props.setConnectState(true)\n        });\n        const { school_id } = this.props.route.params\n        await this.fetchClassIdAndName()\n        this.fetchTeacherData(school_id)\n        this.fetchStudentData(school_id)\n        // this.timeoutId = this.timer(school_id)\n    }\n\n    // timer = (school_id) => setTimeout(() => {\n    //     this.poll(school_id)\n    // }, 10000)\n\n    // async poll(school_id) {\n    //     const { viewing_status } = this.props\n    //     if (viewing_status === '') {\n    //         const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/class/${school_id}/updates`\n    //         await fetch(query, {\n    //             method: 'GET',\n    //             headers: {\n    //                 Accept: 'application/json',\n    //                 'Content-Type': 'application/json'\n    //             }\n    //         })\n    //             .then(res => res.json())\n    //             .then(resJson => {\n    //                 console.log('schoolhome: ', resJson)\n    //                 const update_types = resJson.data\n    //                 update_types.forEach(type => {\n    //                     if (type === 'pickup_request') {\n    //                         this.fetchPickupRequest(school_id)\n    //                     } else if(type === 'attendance') {\n    //                         this.fetchStudentAttendance()\n    //                     } else {\n    //                         this.refs[type].fetchData()\n    //                     }\n    //                 })\n    //             })\n    //             .catch(err => {\n    //                 Toast.show({\n    //                     text: '系統出差錯，請重新開ＡＰＰ',\n    //                     buttonText: 'Okay',\n    //                     position: \"top\",\n    //                     type: \"warning\",\n    //                     duration: 3000\n    //                 })\n    //             })\n    //     }\n    //     this.timeoutId = this.timer(school_id)\n    // }\n\n    async fetchClassIdAndName() {\n        const { school_id } = this.props.route.params\n        await fetch(`https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/school/${school_id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                const { statusCode, message, data } = resJson\n                if (statusCode > 200 || message === 'Internal server error') {\n                    alert('Sorry 取得教室資料時電腦出狀況了！請截圖和與工程師聯繫 ' + message)\n                    return\n                }\n                this.setState({\n                    classes: data.classes\n                })\n                const classes = {}\n                data.classes.forEach(class_data => {\n                    const {id, name } = class_data\n                    classes[id] = {\n                        teachers: [],\n                        students: [],\n                        name\n                    }\n                })\n                this.props.fetchClassesSuccess(classes, data.admin_passcode)\n            }).catch(err => {\n                alert('Sorry 取得教室資料時電腦出狀況了！請截圖和與工程師聯繫')\n            })\n    }\n    async fetchTeacherData(school_id) {\n        const response = await get(`/school/${school_id}/teacher`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得教師資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n        const {admins, teachers, classes} = data\n        this.props.fetchTeachersSuccess(admins, teachers, classes)\n        this.getAdminId(teachers)\n    }\n\n    getAdminId(teachers) {\n        const teacher_id_array = Object.keys(teachers)\n        for(var i = 0; i < teacher_id_array.length; i++) {\n            if (teachers[teacher_id_array[i]].name === '管理員') {\n                this.setState({\n                    admin_id: teacher_id_array[i]\n                })\n                return\n            }\n        }\n    }\n\n    async fetchStudentData(school_id) {\n        const response = await get(`/school/${school_id}/student`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得學生資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n\n        const {students, classes} = data\n        this.props.fetchStudentsSuccess(students, classes)\n        this.props.initializeStudentWellness(Object.keys(students))\n    }\n\n    fetchPickupRequest(school_id) {\n        const query = `https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/dev/attendance/pickup-request?school_id=${school_id}`\n        fetch(query, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                if (resJson.data.length > 0) {\n                    this.props.addPickupRequest(resJson.data)\n                    this.props.navigation.navigate('PickupAlert', {\n                    })\n                }\n            })\n            .catch(err => {\n                alert('Sorry 取得接回告知時電腦出狀況了！請截圖和與工程師聯繫')\n            })\n    }\n\n    async fetchStudentAttendance() {\n        const { school_id } = this.props.route.params\n        const date = formatDate(new Date())\n        const response = await get(`/attendance?school_id=${school_id}&date=${date}`)\n        const { success, statusCode, message, data } = response\n        if (!success) {\n            alert('Sorry 取得學生出席資料時電腦出狀況了！請截圖和與工程師聯繫\\n\\n' + message)\n            return \n        }\n\n        const { attendance, students, present, absent } = data\n        this.props.fetchStudentAttendanceSuccess(attendance, students, present, absent)\n    }\n\n    handleEnterPasscode(passcode) {\n        console.log(passcode)\n        const { school_name, school_id } = this.props.route.params\n        const { passcodeAdminId, passcodeTeacherId, classes, teachers } = this.props\n        const { pageClicked, class_id } = this.state\n        const teacher_id = passcodeTeacherId[passcode]\n        const admin_id = passcodeAdminId[passcode]\n        console.log(admin_id)\n\n\n        if (teacher_id === undefined && admin_id === undefined) {\n            alert('密碼不正確！請截圖和與工程師聯繫')\n        } else if (admin_id !== undefined) {\n            this.setState({ showLoginNumberPad: false })\n            this.props.navigation.navigate(pageClicked, {\n                school_name, \n                school_id,\n                class_id,\n                class_name: '管理員：' + teachers[admin_id].name,\n                isAdmin: true,\n                admin_id\n            })\n        } else if (class_id !== '' && !classes[class_id].teachers.includes(teacher_id) || pageClicked === 'AdminHome') {\n            alert('Sorry 權限不合！請截圖和與工程師聯繫')\n        } else { //pageClicked === 'TeacherHome'\n            this.setState({ showLoginNumberPad: false })\n            this.props.updateViewingStatus('teacher')\n            this.props.navigation.navigate('TeacherHome', {\n                class_id,\n                class_name: classes[class_id].name,\n                isAdmin: false\n            })\n        }\n    }\n\n    hideLoginPad() {\n        this.setState({ showLoginNumberPad: false })\n    }\n\n    handleSignOut() {\n        const {loadAuth} = this.props.route.params\n        Auth.signOut()\n            .then(() => {\n                loadAuth()\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentWillUnmount() {\n        // clearTimeout(this.timeoutId)\n        window.removeEventListener('offline', (e) => {\n            this.props.setConnectState(false) \n        });\n        window.removeEventListener('online', (e) => {\n            this.props.setConnectState(false) \n        });\n        this.props.clearSchoolState()\n    }\n\n    render() {\n        const { classes, showLoginNumberPad } = this.state\n        const { school_id } = this.props.route.params\n        return (\n            <View style={{ flex: 1, flexDirection: 'column' }}>\n                {showLoginNumberPad ? \n                    <LoginNumberPad\n                        handleEnterPasscode={(passcode) => this.handleEnterPasscode(passcode)}\n                        hideLoginPad={() => this.hideLoginPad()}\n                    /> : null\n                }\n\n                <View style={{ flex: 1, flexDirection: 'row' }}>\n                    <TouchableHighlight\n                        key='admin'\n                        style={{ flex: 1, backgroundColor: '#74b987', margin: 10, justifyContent: 'center' }}\n                        onPress={() => this.setState({ showLoginNumberPad: true, pageClicked: 'AdminHome' })}\n                    >\n                        <Text style={{ fontSize: 50, textAlign: 'center' }}>行政管理</Text>\n                    </TouchableHighlight>\n                    {/* <TouchableHighlight\n                        key='child_dismissal'\n                        style={{ flex: 1, backgroundColor: '#74b987', margin: 10, justifyContent: 'center' }}\n                        onPress={() => {\n                            this.props.navigation.push('DismissChildQRScan', {})\n                        }}\n                    >\n                        <Text style={{ fontSize: 50, textAlign: 'center' }}>放學</Text>\n                    </TouchableHighlight> */}\n                </View>\n                <TouchableHighlight\n                    key='attendance_page'\n                    style={{ flex: 1, backgroundColor: '#74b987', margin: 10, justifyContent: 'center' }}\n                    onPress={() => {\n                        this.props.navigation.push('AttendancePage', {\n                            school_id\n                        })\n                    }}\n                >\n                    <Text style={{ fontSize: 80, textAlign: 'center' }}>出席/打卡</Text>\n                </TouchableHighlight>\n                <View style={{ flex: 3 }}>\n                    {classes.map((class_data) => {\n                        if (class_data.name === '管理員') return null\n                        return(\n                            <TouchableHighlight\n                                key={class_data.id}\n                                style={{ \n                                    flex: 1,\n                                    backgroundColor: '#74b987', \n                                    margin: 10,\n                                    justifyContent: 'center'\n                                }}\n                                onPress={() => this.setState({\n                                    showLoginNumberPad: true,\n                                    pageClicked: 'TeacherHome',\n                                    class_id: class_data.id\n                                })}\n                            >\n                                <Text style={{ fontSize: 80, textAlign: 'center' }}>{class_data.name}</Text>\n                            </TouchableHighlight>\n                        )\n                    })}\n                </View>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pick_up_request: state.school.pick_up_request,\n        passcodeAdminId: state.school.passcodeAdminId,\n        passcodeTeacherId: state.school.passcodeTeacherId,\n        classes: state.school.classes,\n        teachers: state.school.teachers,\n        viewing_status: state.school.viewing_status,\n        isConnected: state.school.isConnected\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({\n            setConnectState,\n            fetchClassesSuccess, \n            fetchTeachersSuccess, \n            fetchStudentsSuccess,\n            initializeStudentWellness,\n            addPickupRequest,\n            clearSchoolState,\n            updateViewingStatus,\n            fetchStudentAttendanceSuccess\n        }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SchoolHome)"]},"metadata":{},"sourceType":"module"}