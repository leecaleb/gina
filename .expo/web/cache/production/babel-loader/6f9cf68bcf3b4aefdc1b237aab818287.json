{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Alert from\"react-native-web/dist/exports/Alert\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import QRCode from'react-native-qrcode-svg';import Reloading from\"../reloading\";import{get}from\"../util\";import{connect}from'react-redux';var _Dimensions$get=Dimensions.get('window'),width=_Dimensions$get.width,height=_Dimensions$get.height;var QRPage=function(_React$Component){_inherits(QRPage,_React$Component);var _super=_createSuper(QRPage);function QRPage(props){var _this;_classCallCheck(this,QRPage);_this=_super.call(this,props);_this.state={isLoading:true,data:''};return _this;}_createClass(QRPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props,parent_id,isConnected,response,success,statusCode,message,data;return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=this.props,parent_id=_this$props.parent_id,isConnected=_this$props.isConnected;_context.next=3;return _regeneratorRuntime.awrap(get(\"/user/\"+parent_id+\"/qrcode\"));case 3:response=_context.sent;success=response.success,statusCode=response.statusCode,message=response.message,data=response.data;if(isConnected){_context.next=8;break;}alert('網路連不到! 請稍後再試試看');return _context.abrupt(\"return\");case 8:if(success){_context.next=11;break;}alert(\"Sorry \\u53D6\\u5F97\\u5BB6\\u9577QR Code\\u6642\\u96FB\\u8166\\u51FA\\u72C0\\u6CC1\\u4E86\\uFF01\\u8ACB\\u622A\\u5716\\u548C\\u8207\\u5DE5\\u7A0B\\u5E2B\\u806F\\u7E6B\\n\\n\"+message);return _context.abrupt(\"return\");case 11:this.setState({isLoading:false,data:data});case 12:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{style:{height:height,zIndex:2,width:'100%',position:'absolute',backgroundColor:'white',justifyContent:'space-evenly',alignItems:'center'}},React.createElement(View,{style:{flex:1}},React.createElement(View,{style:{flex:3,justifyContent:'center',alignItems:'center'}},this.state.isLoading?React.createElement(Reloading,null):React.createElement(QRCode,{value:this.state.data,size:300})),React.createElement(View,{style:{flex:1,alignItems:'center'}},React.createElement(TouchableHighlight,{style:{padding:15,backgroundColor:'#b5e9e9'},onPress:function onPress(){return _this2.props.hideQRCode();}},React.createElement(Text,{style:{fontSize:30}},\"\\u8FD4\\u56DE\")))));}}]);return QRPage;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{isConnected:state.parent.isConnected};};export default connect(mapStateToProps)(QRPage);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/qrpage.js"],"names":["React","QRCode","Reloading","get","connect","Dimensions","width","height","QRPage","props","state","isLoading","data","parent_id","isConnected","response","success","statusCode","message","alert","setState","zIndex","position","backgroundColor","justifyContent","alignItems","flex","padding","hideQRCode","fontSize","Component","mapStateToProps","parent"],"mappings":"uiCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,mTAEA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,SAAP,oBACA,OAASC,GAAT,eACA,OAASC,OAAT,KAAwB,aAAxB,C,oBAE0BC,UAAU,CAACF,GAAX,CAAe,QAAf,C,CAAlBG,K,iBAAAA,K,CAAOC,M,iBAAAA,M,IAETC,CAAAA,M,+FACF,gBAAYC,KAAZ,CAAmB,wCACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,SAAS,CAAE,IADF,CAETC,IAAI,CAAE,EAFG,CAAb,CAFe,aAMlB,C,uSAGsC,KAAKH,K,CAAhCI,S,aAAAA,S,CAAWC,W,aAAAA,W,kDACIX,GAAG,UAAUU,SAAV,W,SAApBE,Q,eACEC,O,CAAuCD,Q,CAAvCC,O,CAASC,U,CAA8BF,Q,CAA9BE,U,CAAYC,O,CAAkBH,Q,CAAlBG,O,CAASN,I,CAASG,Q,CAATH,I,IAEjCE,W,yBACDK,KAAK,CAAC,gBAAD,CAAL,C,2CAICH,O,0BACDG,KAAK,CAAC,wJAA4CD,OAA7C,CAAL,C,yCAIJ,KAAKE,QAAL,CAAc,CACVT,SAAS,CAAE,KADD,CAEVC,IAAI,CAAJA,IAFU,CAAd,E,6GAMK,iBACL,MACI,qBAAC,IAAD,EACI,KAAK,CAAE,CACHL,MAAM,CAANA,MADG,CAEHc,MAAM,CAAE,CAFL,CAGHf,KAAK,CAAE,MAHJ,CAKHgB,QAAQ,CAAE,UALP,CAMHC,eAAe,CAAE,OANd,CAOHC,cAAc,CAAE,cAPb,CAQHC,UAAU,CAAE,QART,CADX,EAYI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAb,EACI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEA,IAAI,CAAE,CAAR,CAAWF,cAAc,CAAE,QAA3B,CAAqCC,UAAU,CAAE,QAAjD,CAAb,EACK,KAAKf,KAAL,CAAWC,SAAX,CACG,oBAAC,SAAD,MADH,CAEM,oBAAC,MAAD,EACC,KAAK,CAAE,KAAKD,KAAL,CAAWE,IADnB,CAEC,IAAI,CAAE,GAFP,EAHX,CADJ,CAUI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEc,IAAI,CAAE,CAAR,CAAWD,UAAU,CAAE,QAAvB,CAAb,EACI,oBAAC,kBAAD,EACI,KAAK,CAAE,CAAEE,OAAO,CAAE,EAAX,CAAeJ,eAAe,CAAE,SAAhC,CADX,CAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACd,KAAL,CAAWmB,UAAX,EAAN,EAFb,EAII,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,QAAQ,CAAE,EAAZ,CAAb,iBAJJ,CADJ,CAVJ,CAZJ,CADJ,CAkCH,C,oBAjEgB7B,KAAK,CAAC8B,S,EAoE3B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACrB,KAAD,CAAW,CAC/B,MAAO,CACHI,WAAW,CAAEJ,KAAK,CAACsB,MAAN,CAAalB,WADvB,CAAP,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAAC2B,eAAD,CAAP,CAA0BvB,MAA1B,CAAf","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableHighlight, Alert, Dimensions } from 'react-native'\nimport QRCode from 'react-native-qrcode-svg'\nimport Reloading from '../reloading'\nimport { get } from '../util'\nimport { connect } from 'react-redux'\n\nconst { width, height } = Dimensions.get('window')\n\nclass QRPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            data: ''\n        }\n    }\n\n    async componentDidMount() {\n        const { parent_id, isConnected } = this.props\n        const response = await get(`/user/${parent_id}/qrcode`)\n        const { success, statusCode, message, data } = response\n\n        if (!isConnected) {\n            alert('網路連不到! 請稍後再試試看')\n            return\n        }\n\n        if (!success) {\n            alert(`Sorry 取得家長QR Code時電腦出狀況了！請截圖和與工程師聯繫\\n\\n` + message)\n            return \n        }\n\n        this.setState({\n            isLoading: false,\n            data\n        })\n    }\n    \n    render() {\n        return (\n            <View\n                style={{\n                    height,\n                    zIndex: 2,\n                    width: '100%',\n                    // height: '100%',\n                    position: 'absolute',\n                    backgroundColor: 'white',\n                    justifyContent: 'space-evenly',\n                    alignItems: 'center'\n                }}\n            >\n                <View style={{ flex: 1 }}>\n                    <View style={{ flex: 3, justifyContent: 'center', alignItems: 'center' }}>\n                        {this.state.isLoading ? \n                            <Reloading />\n                            :  <QRCode\n                                value={this.state.data}\n                                size={300}\n                                />\n                        }\n                    </View>\n                    <View style={{ flex: 1, alignItems: 'center' }}>\n                        <TouchableHighlight\n                            style={{ padding: 15, backgroundColor: '#b5e9e9' }}\n                            onPress={() => this.props.hideQRCode()}\n                        >\n                            <Text style={{ fontSize: 30 }}>返回</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isConnected: state.parent.isConnected\n    }\n}\n\nexport default connect(mapStateToProps) (QRPage)"]},"metadata":{},"sourceType":"module"}