{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/parent/medicationrequestpage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport MedicationRequestMain from \"./medicationrequestmain\";\nimport { formatDate, beautifyTime, beautifyDate, beautifyMonthDate, get } from \"../util\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getMedRequestSuccess } from \"../../redux/parent/actions/index\";\nimport ENV from \"../../variables\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar MedicationRequestPage = function (_React$Component) {\n  _inherits(MedicationRequestPage, _React$Component);\n\n  var _super = _createSuper(MedicationRequestPage);\n\n  function MedicationRequestPage(props) {\n    var _this;\n\n    _classCallCheck(this, MedicationRequestPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      today: new Date(),\n      tomorrow: new Date(),\n      SlideInRight: new Animated.Value(0),\n      SlideInLeft: new Animated.Value(0),\n      total_height: 1,\n      total_width: 1,\n      height: 0,\n      width: 0,\n      left: 0,\n      top: 0,\n      requests: [],\n      day_of_week: ['天', '一', '二', '三', '四', '五', '六'],\n      selected_request_index: -1\n    };\n    return _this;\n  }\n\n  _createClass(MedicationRequestPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var selected_request_index = this.props.route.params.selected_request_index;\n      var tomorrow = this.state.tomorrow;\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      this.setState({\n        tomorrow: tomorrow\n      });\n      this.fetchMedicationRequest();\n      this.initializePage();\n\n      if (selected_request_index !== undefined) {\n        this.selectRequest(selected_request_index);\n      }\n    }\n  }, {\n    key: \"isIOS\",\n    value: function isIOS() {\n      return Platform.OS === 'ios';\n    }\n  }, {\n    key: \"fetchMedicationRequest\",\n    value: function fetchMedicationRequest() {\n      var isConnected, _this$props$route$par, student_id, onGoBack, date, response, success, statusCode, message, data;\n\n      return _regeneratorRuntime.async(function fetchMedicationRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isConnected = this.props.isConnected;\n\n              if (isConnected) {\n                _context.next = 4;\n                break;\n              }\n\n              alert('網路連不到! 請稍後再試試看');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _this$props$route$par = this.props.route.params, student_id = _this$props$route$par.student_id, onGoBack = _this$props$route$par.onGoBack;\n              date = formatDate(new Date());\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(get(\"/medicationrequest/student/\" + student_id + \"?date=\" + date));\n\n            case 8:\n              response = _context.sent;\n              success = response.success, statusCode = response.statusCode, message = response.message, data = response.data;\n\n              if (success) {\n                _context.next = 13;\n                break;\n              }\n\n              alert('Sorry 取得托藥單時電腦出狀況了！請稍後再試試或請截圖和與工程師聯繫\\n\\n' + message);\n              return _context.abrupt(\"return\");\n\n            case 13:\n              this.denormalize(data);\n              this.setState({\n                requests: data\n              });\n              onGoBack();\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"denormalize\",\n    value: function denormalize(object_array) {\n      for (var i = 0; i < object_array.length; i++) {\n        object_array[i].title = new Date(object_array[i].title);\n\n        for (var j = 0; j < object_array[i].data.length; j++) {\n          object_array[i].data[j].timestamp = new Date(object_array[i].data[j].timestamp);\n        }\n      }\n    }\n  }, {\n    key: \"initializePage\",\n    value: function initializePage() {\n      Animated.sequence([Animated.timing(this.state.SlideInRight, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(this.state.SlideInLeft, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      })]).start();\n    }\n  }, {\n    key: \"viewRequest\",\n    value: function viewRequest() {\n      var _this2 = this;\n\n      this.setState({\n        SlideInLeft: new Animated.Value(0)\n      }, function () {\n        Animated.timing(_this2.state.SlideInLeft, {\n          toValue: 1,\n          duration: 1000,\n          useNativeDriver: true\n        }).start();\n      });\n    }\n  }, {\n    key: \"selectRequest\",\n    value: function selectRequest(index) {\n      var access_mode = this.refs['main'].fetchAccessMode();\n\n      if (access_mode === 'edit') {\n        alert('還在編輯中喔請完成再離開 多謝');\n        return;\n      }\n\n      this.setState({\n        selected_request_index: index\n      });\n    }\n  }, {\n    key: \"onCreateRequestSuccess\",\n    value: function onCreateRequestSuccess(request_id) {\n      var requests, new_request_index, i;\n      return _regeneratorRuntime.async(function onCreateRequestSuccess$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.fetchMedicationRequest());\n\n            case 2:\n              requests = this.state.requests;\n              this.get_todays_requests(requests);\n              new_request_index = -1;\n              i = 0;\n\n            case 6:\n              if (!(i < requests.length)) {\n                _context2.next = 13;\n                break;\n              }\n\n              if (!(requests[i].id === request_id)) {\n                _context2.next = 10;\n                break;\n              }\n\n              new_request_index = i;\n              return _context2.abrupt(\"break\", 13);\n\n            case 10:\n              i++;\n              _context2.next = 6;\n              break;\n\n            case 13:\n              this.setState({\n                selected_request_index: new_request_index\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"get_todays_requests\",\n    value: function get_todays_requests(object_array) {\n      var med_requests = [];\n\n      for (var i = 0; i < object_array.length; i++) {\n        var timestamp = new Date(object_array[i].timestamp);\n\n        if (timestamp.toDateString() === new Date().toDateString()) {\n          object_array[i].timestamp = timestamp;\n          med_requests.push(object_array[i]);\n        } else break;\n      }\n\n      this.props.getMedRequestSuccess(med_requests);\n    }\n  }, {\n    key: \"onDeleteRequestSuccess\",\n    value: function onDeleteRequestSuccess(deleted_request_id) {\n      var requests = this.state.requests;\n      var updated_requests = [];\n\n      for (var i = 0; i < requests.length; i++) {\n        if (requests[i].id !== deleted_request_id) {\n          updated_requests.push(requests[i]);\n        }\n      }\n\n      this.setState({\n        requests: updated_requests,\n        selected_request_index: 0\n      });\n      this.get_todays_requests(updated_requests);\n    }\n  }, {\n    key: \"deleteRequestConfirm\",\n    value: function deleteRequestConfirm(request_id) {\n      var confirmed = confirm('確定要刪除？');\n\n      if (confirmed) {\n        this.deleteRequest(request_id);\n      }\n    }\n  }, {\n    key: \"deleteRequest\",\n    value: function deleteRequest(request_id) {\n      var _this3 = this;\n\n      var isConnected = this.props.isConnected;\n\n      if (!isConnected) {\n        alert('網路連不到! 請稍後再試試看');\n        return;\n      }\n\n      var class_id = this.props.route.params.class_id;\n      fetch(\"https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/\" + ENV + \"/medicationrequest/\" + request_id, {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          class_id: class_id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        var statusCode = resJson.statusCode,\n            message = resJson.message,\n            data = resJson.data;\n\n        if (statusCode > 200 || message === 'Internal Server Error') {\n          alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫' + message);\n          return;\n        }\n\n        _this3.fetchMedicationRequest();\n      }).catch(function (err) {\n        alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when deleting medication request');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          SlideInRight = _this$state.SlideInRight,\n          SlideInLeft = _this$state.SlideInLeft,\n          total_width = _this$state.total_width,\n          requests = _this$state.requests,\n          today = _this$state.today,\n          tomorrow = _this$state.tomorrow,\n          day_of_week = _this$state.day_of_week,\n          selected_request_index = _this$state.selected_request_index;\n      var _this$props$route$par2 = this.props.route.params,\n          student_id = _this$props$route$par2.student_id,\n          class_id = _this$props$route$par2.class_id;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, requests.length === 0 && React.createElement(View, {\n        style: {\n          padding: 20,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, \"\\u7121\\u6258\\u85E5\\u55AE\")), React.createElement(SectionList, {\n        sections: requests,\n        keyExtractor: function keyExtractor(item, index) {\n          return item + index;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index,\n              section = _ref.section;\n          return React.createElement(View, {\n            style: {\n              width: '100%',\n              aspectRatio: 5,\n              flexDirection: 'row',\n              marginVertical: 7,\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: {\n              width: '65%',\n              height: '100%',\n              padding: 20,\n              backgroundColor: '#368cbf',\n              borderRadius: 40,\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            onClick: function onClick() {\n              return _this4.props.navigation.push('AddMedicationRequestPage', {\n                onGoBack: function onGoBack() {\n                  return _this4.fetchMedicationRequest();\n                },\n                student_id: student_id,\n                class_id: class_id,\n                index: index,\n                data: section.data\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 30\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }\n          }, beautifyTime(item.timestamp))), React.createElement(TouchableOpacity, {\n            style: {\n              width: '30%',\n              height: '100%',\n              padding: 20,\n              backgroundColor: '#fa625f',\n              justifyContent: 'center',\n              borderRadius: 40\n            },\n            onClick: function onClick() {\n              return _this4.deleteRequestConfirm(item.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: width * 0.07,\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }\n          }, \"\\u522A\\u9664\")));\n        },\n        renderSectionHeader: function renderSectionHeader(_ref2) {\n          var title = _ref2.section.title;\n          return React.createElement(View, {\n            style: {\n              width: '100%',\n              backgroundColor: 'rgba(0,0,0,0.5)',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              padding: _this4.isIOS() ? 20 : 12,\n              marginTop: 15,\n              marginBottom: 7,\n              borderRadius: 40\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }\n          }, \"\" + beautifyMonthDate(title)), React.createElement(Text, {\n            style: {\n              fontSize: 30,\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }\n          }, \"\\u661F\\u671F\" + day_of_week[title.getDay()]));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          width: '100%',\n          paddingVertical: 10,\n          justifyContent: 'center',\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: '#f4d41f',\n          padding: this.isIOS() ? 20 : 12,\n          justifyContent: 'center',\n          borderRadius: 40\n        },\n        onClick: function onClick() {\n          return _this4.props.navigation.push('AddMedicationRequestPage', {\n            onGoBack: function onGoBack() {\n              return _this4.fetchMedicationRequest();\n            },\n            student_id: student_id,\n            class_id: class_id,\n            index: -1,\n            data: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }\n      }, \"\\u65B0\\u589E\"))));\n    }\n  }]);\n\n  return MedicationRequestPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isConnected: state.parent.isConnected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators({\n    getMedRequestSuccess: getMedRequestSuccess\n  }, dispatch));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicationRequestPage);","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/parent/medicationrequestpage.js"],"names":["React","MedicationRequestMain","formatDate","beautifyTime","beautifyDate","beautifyMonthDate","get","bindActionCreators","connect","getMedRequestSuccess","ENV","Dimensions","width","MedicationRequestPage","props","state","today","Date","tomorrow","SlideInRight","Animated","Value","SlideInLeft","total_height","total_width","height","left","top","requests","day_of_week","selected_request_index","route","params","setDate","getDate","setState","fetchMedicationRequest","initializePage","undefined","selectRequest","Platform","OS","isConnected","alert","student_id","onGoBack","date","response","success","statusCode","message","data","denormalize","object_array","i","length","title","j","timestamp","sequence","timing","toValue","duration","useNativeDriver","start","index","access_mode","refs","fetchAccessMode","request_id","get_todays_requests","new_request_index","id","med_requests","toDateString","push","deleted_request_id","updated_requests","confirmed","confirm","deleteRequest","class_id","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","resJson","catch","err","flex","paddingHorizontal","padding","justifyContent","alignItems","fontSize","item","section","aspectRatio","flexDirection","marginVertical","backgroundColor","borderRadius","navigation","deleteRequestConfirm","textAlign","isIOS","marginTop","marginBottom","color","getDay","paddingVertical","alignSelf","Component","mapStateToProps","parent","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    View, TouchableOpacity, Text, Animated, ScrollView, Alert, SectionList, Dimensions, Platform\n} from 'react-native'\nimport MedicationRequestMain from './medicationrequestmain'\nimport { formatDate, beautifyTime, beautifyDate, beautifyMonthDate, get } from '../util'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getMedRequestSuccess } from '../../redux/parent/actions/index'\nimport ENV from '../../variables'\n\n\nconst { width } = Dimensions.get('window')\n\nclass MedicationRequestPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            today: new Date(),\n            tomorrow: new Date(),\n            SlideInRight: new Animated.Value(0),\n            SlideInLeft: new Animated.Value(0),\n            total_height: 1,\n            total_width: 1,\n            height: 0,\n            width: 0,\n            left: 0,\n            top: 0,\n            requests: [],\n            day_of_week: ['天', '一', '二', '三', '四', '五', '六'],\n            selected_request_index: -1\n        }\n    }\n\n    componentDidMount() {\n        const { selected_request_index } = this.props.route.params\n        const { tomorrow } = this.state\n        tomorrow.setDate(tomorrow.getDate() + 1)\n        this.setState({\n            tomorrow\n        })\n        this.fetchMedicationRequest()\n        this.initializePage()\n        if (selected_request_index !== undefined) {\n            // console.log(selected_request_index)\n            this.selectRequest(selected_request_index)\n        }\n    }\n\n    isIOS() {\n        return Platform.OS === 'ios'\n    }\n\n    async fetchMedicationRequest() {\n        const { isConnected } = this.props\n        if (!isConnected) {\n            alert('網路連不到! 請稍後再試試看')\n            return\n        }\n        const {student_id, onGoBack} = this.props.route.params\n        const date = formatDate(new Date())\n        const response = await get(`/medicationrequest/student/${student_id}?date=${date}`)\n        const { success, statusCode, message, data } = response\n        // console.log('fetchMedicationRequest: ', response)\n        if (!success) {\n            alert('Sorry 取得托藥單時電腦出狀況了！請稍後再試試或請截圖和與工程師聯繫\\n\\n' + message)\n            return\n        }\n        this.denormalize(data)\n        this.setState({ requests: data })\n        onGoBack()\n    }\n\n    denormalize(object_array) {\n        for (var i = 0; i < object_array.length; i++) {\n            object_array[i].title = new Date(object_array[i].title)\n            for (var j = 0; j < object_array[i].data.length; j++) {\n                object_array[i].data[j].timestamp = new Date(object_array[i].data[j].timestamp)\n            }\n        }\n    }\n\n    initializePage() {\n        Animated.sequence([\n            Animated.timing(\n                this.state.SlideInRight, \n                {\n                    toValue: 1,\n                    duration: 1000,\n                    useNativeDriver: true\n                }\n            ),\n            Animated.timing(\n                this.state.SlideInLeft,\n                {\n                    toValue: 1,\n                    duration: 1000,\n                    useNativeDriver: true\n                }\n            )\n        ]).start()\n        \n    }\n\n    viewRequest() {\n        this.setState({\n            SlideInLeft: new Animated.Value(0)\n        }, () => {\n            Animated.timing(\n                this.state.SlideInLeft,\n                {\n                    toValue: 1,\n                    duration: 1000,\n                    useNativeDriver: true\n                }\n            ).start()\n        })\n    }\n\n    selectRequest(index) {\n        const access_mode = this.refs['main'].fetchAccessMode()\n        if (access_mode === 'edit') {\n            alert('還在編輯中喔請完成再離開 多謝')\n            return\n        }\n        this.setState({ selected_request_index: index })\n    }\n\n    async onCreateRequestSuccess(request_id) {\n        await this.fetchMedicationRequest()\n        const { requests } = this.state\n        this.get_todays_requests(requests)\n        let new_request_index = -1\n        for (var i = 0; i < requests.length; i++) {\n            if (requests[i].id === request_id) {\n                new_request_index = i\n                break\n            }\n        }\n        this.setState({\n            selected_request_index: new_request_index\n        })\n    }\n\n    get_todays_requests(object_array) {\n        let med_requests = []\n        for (var i = 0; i < object_array.length; i++) {\n            const timestamp = new Date(object_array[i].timestamp)\n            if (timestamp.toDateString() === (new Date).toDateString()) {\n                object_array[i].timestamp = timestamp\n                med_requests.push(object_array[i])\n            } else break\n        }\n        this.props.getMedRequestSuccess(med_requests)\n    }\n\n    onDeleteRequestSuccess(deleted_request_id) {\n        const { requests } = this.state\n        const updated_requests = []\n        for (var i = 0; i < requests.length; i++) {\n            if (requests[i].id !== deleted_request_id) {\n                updated_requests.push(requests[i])\n            }\n        }\n        this.setState({\n            requests: updated_requests,\n            selected_request_index: 0\n        })\n        this.get_todays_requests(updated_requests)\n    }\n\n    deleteRequestConfirm(request_id) {\n        const confirmed = confirm('確定要刪除？')\n        if (confirmed) {\n            this.deleteRequest(request_id)\n        }\n    }\n\n    deleteRequest(request_id) {\n        const { isConnected } = this.props\n        if (!isConnected) {\n            alert('網路連不到! 請稍後再試試看')\n            return\n        }\n        const { class_id } = this.props.route.params\n        fetch(`https://iejnoswtqj.execute-api.us-east-1.amazonaws.com/${ENV}/medicationrequest/${request_id}`, {\n          method: 'DELETE',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            class_id\n          })\n        })\n          .then((res) => res.json())\n          .then((resJson) => {\n            const { statusCode, message, data } = resJson\n            if (statusCode > 200 || message === 'Internal Server Error') {\n              alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫' + message)\n              return\n            }\n            this.fetchMedicationRequest()\n          })\n          .catch(err => {\n            alert('Sorry 電腦出狀況了！請截圖和與工程師聯繫: error occurred when deleting medication request')\n          })\n      }\n\n    render () {\n        const { SlideInRight, SlideInLeft, total_width, requests, today, tomorrow, day_of_week, selected_request_index } = this.state\n        const { student_id, class_id } = this.props.route.params\n        // const selected_request = requests[selected_request_index]\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    paddingHorizontal: 20\n                }}\n            >\n                {requests.length === 0 && \n                    <View style={{ padding: 20, justifyContent: 'center', alignItems: 'center' }}>\n                        <Text style={{ fontSize: 50 }}>無托藥單</Text>\n                    </View>\n                }\n                <SectionList\n                    sections={requests}\n                    keyExtractor={(item, index) => item + index}\n                    renderItem={({ item, index, section }) => \n                        <View \n                            style={{ \n                                width: '100%', \n                                aspectRatio: 5, \n                                flexDirection: 'row', \n                                marginVertical: 7, \n                                justifyContent: 'space-between', \n                                alignItems: 'center'\n                            }}\n                        >\n                            <TouchableOpacity \n                                style={{ \n                                    width:'65%',\n                                    height: '100%',\n                                    padding: 20, \n                                    backgroundColor: '#368cbf',\n                                    borderRadius: 40,\n                                    justifyContent: 'center',\n                                    alignItems: 'center'\n                                }}\n                                onClick={() => this.props.navigation.push('AddMedicationRequestPage', {\n                                    onGoBack: () => this.fetchMedicationRequest(),\n                                    student_id,\n                                    class_id,\n                                    index,\n                                    data: section.data\n                                })}\n                            >\n                                <Text style={{ fontSize: 30 }}>{beautifyTime(item.timestamp)}</Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                                style={{ \n                                    width:'30%', \n                                    height: '100%',\n                                    padding: 20, \n                                    backgroundColor: '#fa625f', \n                                    justifyContent: 'center',\n                                    borderRadius: 40\n                                }}\n                                onClick={() => this.deleteRequestConfirm(item.id)}\n                            >\n                                <Text style={{ fontSize: width * 0.07, textAlign: 'center' }}>\n                                    刪除\n                                </Text>\n                            </TouchableOpacity>\n                        </View>\n                    }\n                    renderSectionHeader={({ section: { title } }) => (\n                        <View\n                            style={{ \n                                width: '100%', \n                                backgroundColor: 'rgba(0,0,0,0.5)', \n                                flexDirection: 'row', \n                                alignItems: 'center', \n                                justifyContent: 'space-between',\n                                padding: this.isIOS() ? 20 : 12,\n                                marginTop: 15,\n                                marginBottom: 7,\n                                borderRadius: 40\n                            }}\n                        >\n                            <Text style={{ fontSize: 30, color: 'white' }}>{`${beautifyMonthDate(title)}`}</Text>\n                            <Text style={{ fontSize: 30, color: 'white' }}>{`星期${day_of_week[title.getDay()]}`}</Text>\n                        </View>\n                    )}\n                />\n\n                <View style={{ width: '100%', paddingVertical: 10, justifyContent: 'center', backgroundColor: 'transparent' }}>\n                    <TouchableOpacity\n                        style={{ backgroundColor: '#f4d41f', padding: this.isIOS() ? 20 : 12, justifyContent: 'center', borderRadius: 40 }}\n                        onClick={() => this.props.navigation.push('AddMedicationRequestPage', {\n                            onGoBack: () => this.fetchMedicationRequest(),\n                            student_id, \n                            class_id,\n                            index: -1,\n                            data: null\n                        })}\n                    >\n                        <Text style={{ fontSize: 30, alignSelf: 'center' }}>\n                            新增\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n\n                \n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isConnected: state.parent.isConnected\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        ...bindActionCreators({getMedRequestSuccess}, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicationRequestPage)"]},"metadata":{},"sourceType":"module"}