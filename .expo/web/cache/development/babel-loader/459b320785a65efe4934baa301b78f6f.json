{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/caleb_lee/gina_web_app/components/teacher/admin/registernewstudents.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PickerComponent from \"../../picker\";\n\nvar RegisterNewStudents = function (_React$Component) {\n  _inherits(RegisterNewStudents, _React$Component);\n\n  var _super = _createSuper(RegisterNewStudents);\n\n  function RegisterNewStudents(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterNewStudents);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      studentDataArray: [{\n        name: '',\n        class_id: '',\n        class_name: '',\n        profile_picture: '',\n        blood_type: ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(RegisterNewStudents, [{\n    key: \"addStudent\",\n    value: function addStudent() {\n      var studentDataArray = this.state.studentDataArray;\n      studentDataArray.push({\n        name: '',\n        class_id: '',\n        class_name: '',\n        profile_picture: '',\n        blood_type: ''\n      });\n      this.setState({\n        studentDataArray: studentDataArray\n      });\n    }\n  }, {\n    key: \"fillStudent\",\n    value: function fillStudent() {\n      var studentDataArray = this.state.studentDataArray;\n      studentDataArray[0] = {\n        name: 'John Smith',\n        class_id: null,\n        profile_picture: '',\n        blood_type: 'AB'\n      };\n      this.setState({\n        studentDataArray: studentDataArray\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(name, index) {\n      var studentDataArray = this.state.studentDataArray;\n      studentDataArray[index].name = name;\n      this.setState({\n        studentDataArray: studentDataArray\n      });\n    }\n  }, {\n    key: \"setBloodType\",\n    value: function setBloodType(type, index) {\n      var studentDataArray = this.state.studentDataArray;\n      studentDataArray[index].blood_type = type;\n      this.setState({\n        studentDataArray: studentDataArray\n      });\n    }\n  }, {\n    key: \"removeStudent\",\n    value: function removeStudent(index) {\n      var studentDataArray = this.state.studentDataArray;\n      studentDataArray.splice(index, 1);\n      this.setState({\n        studentDataArray: studentDataArray\n      });\n    }\n  }, {\n    key: \"handleSelectClass\",\n    value: function handleSelectClass(class_name, index) {\n      var classes = this.props.classes;\n      var studentDataArray = this.state.studentDataArray;\n      var class_id = '';\n\n      for (var i = 0; i < Object.keys(classes).length; i++) {\n        var found_class_id = Object.keys(classes)[i];\n\n        if (classes[found_class_id].name === class_name) {\n          class_id = found_class_id;\n          break;\n        }\n      }\n\n      studentDataArray[index].class_id = class_id;\n      studentDataArray[index].class_name = class_name;\n      this.setState({\n        studentDataArray: studentDataArray\n      });\n    }\n  }, {\n    key: \"getStudentDataArray\",\n    value: function getStudentDataArray() {\n      return this.state.studentDataArray;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var studentDataArray = this.state.studentDataArray;\n      var classes = this.props.classes;\n      var options = Object.keys(classes).map(function (class_id) {\n        return classes[class_id].name;\n      });\n      return React.createElement(View, {\n        style: {\n          width: '100%',\n          padding: '5%',\n          backgroundColor: '#368cbf'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 5,\n          backgroundColor: 'rgba(255,255,255,0.4)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"\\u5B78\\u751F\\u8CC7\\u6599\"), React.createElement(TouchableHighlight, {\n        style: {\n          padding: 10,\n          backgroundColor: '#b5e9e9'\n        },\n        onPress: function onPress() {\n          return _this2.addStudent();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"\\u65B0\\u589E\\u5B78\\u751F\"))), studentDataArray.map(function (student, index) {\n        var name = student.name,\n            blood_type = student.blood_type;\n        return React.createElement(View, {\n          key: index,\n          style: {\n            width: '100%',\n            padding: '5%',\n            backgroundColor: '#f4d41f'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            padding: 10,\n            backgroundColor: 'white',\n            justifyContent: 'space-between'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '50%',\n            padding: 10,\n            backgroundColor: '#F5F5F5',\n            borderRadius: 2,\n            borderBottomWidth: 2,\n            borderBottomColor: '#b5e9e9',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }\n        }, React.createElement(TextInput, {\n          placeholder: \"\\u5168\\u540D\",\n          value: name,\n          style: {\n            fontSize: 30\n          },\n          onChangeText: function onChangeText(name) {\n            return _this2.setName(name, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        })), React.createElement(View, {\n          style: {\n            width: '20%',\n            padding: 10,\n            backgroundColor: '#F5F5F5',\n            borderRadius: 2,\n            borderBottomWidth: 2,\n            borderBottomColor: '#b5e9e9',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }, React.createElement(TextInput, {\n          placeholder: \"\\u8840\\u578B\",\n          value: blood_type,\n          style: {\n            fontSize: 30\n          },\n          onChangeText: function onChangeText(type) {\n            return _this2.setBloodType(type, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        })), React.createElement(TouchableHighlight, {\n          style: {\n            width: '20%',\n            padding: 10,\n            backgroundColor: '#fa625f',\n            borderRadius: 2,\n            justifyContent: 'center'\n          },\n          onPress: function onPress() {\n            return _this2.removeStudent(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            alignSelf: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }\n        }, \"\\u79FB\\u9664\"))), React.createElement(View, {\n          style: {\n            padding: 10,\n            backgroundColor: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }\n        }, React.createElement(PickerComponent, {\n          style: {\n            padding: 10,\n            backgroundColor: '#b5e9e9'\n          },\n          textStyle: {\n            fontSize: 30\n          },\n          selectedValue: studentDataArray[index].class_name || '選擇學生班級',\n          options: options,\n          handleOnClick: function handleOnClick() {},\n          handleSelectValue: function handleSelectValue(class_name) {\n            return _this2.handleSelectClass(class_name, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return RegisterNewStudents;\n}(React.Component);\n\nexport { RegisterNewStudents as default };","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/components/teacher/admin/registernewstudents.js"],"names":["React","PickerComponent","RegisterNewStudents","props","state","studentDataArray","name","class_id","class_name","profile_picture","blood_type","push","setState","index","type","splice","classes","i","Object","keys","length","found_class_id","options","map","width","padding","backgroundColor","flexDirection","justifyContent","alignItems","paddingVertical","fontSize","addStudent","student","borderRadius","borderBottomWidth","borderBottomColor","setName","setBloodType","removeStudent","alignSelf","handleSelectClass","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableHighlight, TextInput } from 'react-native'\nimport PickerComponent from '../../picker'\n\nexport default class RegisterNewStudents extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      studentDataArray: [{\n        name: '',\n        class_id: '',\n        class_name: '',\n        profile_picture: '',\n        blood_type: ''\n      }],\n    }\n  }\n\n  addStudent() {\n    const { studentDataArray } = this.state\n    studentDataArray.push({\n      name: '',\n      class_id: '',\n      class_name: '',\n      profile_picture: '',\n      blood_type: ''\n    })\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  fillStudent() {\n    const { studentDataArray } = this.state\n    studentDataArray[0] = {\n        name: 'John Smith',\n        class_id: null,\n        profile_picture: '',\n        blood_type: 'AB'\n    }\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  setName(name, index) {\n    const { studentDataArray } = this.state\n    studentDataArray[index].name = name\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  setBloodType(type, index) {\n    const {studentDataArray} = this.state\n    studentDataArray[index].blood_type = type\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  removeStudent(index) {\n    const { studentDataArray} = this.state\n    studentDataArray.splice(index, 1)\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  handleSelectClass(class_name, index) {\n    // console.log(class_name)\n    const {classes } = this.props\n    const { studentDataArray } = this.state\n    var class_id = ''\n    for (var i = 0; i < Object.keys(classes).length; i++) {\n      const found_class_id = Object.keys(classes)[i]\n      if (classes[found_class_id].name === class_name) {\n        class_id = found_class_id\n        break\n      }\n    }\n    \n    studentDataArray[index].class_id = class_id\n    studentDataArray[index].class_name = class_name\n    this.setState({\n      studentDataArray\n    })\n  }\n\n  getStudentDataArray() {\n    return this.state.studentDataArray\n  }\n\n  render() {\n    const { studentDataArray } = this.state\n    const { classes } = this.props\n    const options = Object.keys(classes).map(class_id => classes[class_id].name)\n    // console.log('studentDataArray: ', studentDataArray)\n    return (\n      <View style={{ width: '100%', padding: '5%', backgroundColor: '#368cbf' }}>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingVertical: 5, backgroundColor: 'rgba(255,255,255,0.4)' }}>\n            <Text style={{ fontSize: 60 }}>學生資料</Text>\n            <TouchableHighlight\n              style={{ padding: 10, backgroundColor: '#b5e9e9' }}\n              onPress={() => this.addStudent()}\n            >\n              <Text style={{ fontSize: 35 }}>新增學生</Text>\n            </TouchableHighlight>\n\n            {/* <TouchableHighlight\n              style={{ padding: 10, backgroundColor: '#b5e9e9' }}\n              onPress={() => this.fillStudent()}\n            >\n              <Text style={{ fontSize: 30 }}>Fill Student</Text>\n            </TouchableHighlight> */}\n          </View>\n          \n          {studentDataArray.map((student, index) => {\n            const { name, blood_type } = student\n            return (\n              <View key={index} style={{ width: '100%', padding: '5%', backgroundColor: '#f4d41f' }}>\n                <View\n                  style={{ flexDirection: 'row', padding: 10, backgroundColor: 'white', justifyContent: 'space-between' }}\n                >\n                  <View\n                    style={{\n                      width: '50%',\n                      padding: 10,\n                      backgroundColor: '#F5F5F5',\n                      borderRadius: 2,\n                      borderBottomWidth: 2,\n                      borderBottomColor: '#b5e9e9',\n                      justifyContent: 'center'\n                  }}>\n                    <TextInput\n                      placeholder=\"全名\"\n                      value={name}\n                      style={{ fontSize: 30 }}\n                      onChangeText={(name) => this.setName(name, index)}\n                    />\n                  </View>\n\n                  <View\n                    style={{\n                      width: '20%',\n                      padding: 10,\n                      backgroundColor: '#F5F5F5',\n                      borderRadius: 2,\n                      borderBottomWidth: 2,\n                      borderBottomColor: '#b5e9e9',\n                      justifyContent: 'center'\n                  }}>\n                    <TextInput\n                      placeholder=\"血型\"\n                      value={blood_type}\n                      style={{ fontSize: 30 }}\n                      onChangeText={(type) => this.setBloodType(type, index)}\n                    />\n                  </View>\n\n                  <TouchableHighlight\n                    style={{\n                      width: '20%',\n                      padding: 10,\n                      backgroundColor: '#fa625f',\n                      borderRadius: 2,\n                      // borderBottomWidth: 2,\n                      // borderBottomColor: '#b5e9e9',\n                      justifyContent: 'center'\n                    }}\n                    onPress={() => this.removeStudent(index)}\n                  >\n                    <Text style={{ alignSelf: 'center', fontSize: 30 }}>移除</Text>\n                  </TouchableHighlight>\n                </View>\n\n                <View style={{ padding: 10, backgroundColor: 'white' }}>\n                  <PickerComponent\n                    style={{\n                      padding: 10, \n                      backgroundColor: '#b5e9e9'\n                    }}\n                    textStyle={{ fontSize: 30 }}\n                    selectedValue={studentDataArray[index].class_name || '選擇學生班級'}\n                    options={options}\n                    handleOnClick={() => { }}\n                    handleSelectValue={(class_name) => this.handleSelectClass(class_name, index)}\n                  />\n                </View>\n              </View>\n            )\n          })}\n          \n        </View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}