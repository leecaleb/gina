{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function inbox() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    current_conversation_id: '',\n    conversations_by_id: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_MESSAGE_DATA':\n      var newState = _objectSpread({}, state);\n\n      var messages = action.messages,\n          most_recently_read_message_id = action.most_recently_read_message_id,\n          conversation_id = action.conversation_id;\n      newState.conversations_by_id[conversation_id] = {\n        messages: messages,\n        most_recently_read_message_id: most_recently_read_message_id\n      };\n      newState.current_conversation_id = conversation_id;\n      return newState;\n\n    case 'SET_CURRENT_CONVERSATION_ID':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current_conversation_id: action.conversation_id\n      });\n\n    case 'CLEAR_CURRENT_CONVERSATION_ID':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current_conversation_id: ''\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/caleb_lee/gina_web_app/redux/parent/reducers/inbox.js"],"names":["inbox","state","current_conversation_id","conversations_by_id","action","type","newState","messages","most_recently_read_message_id","conversation_id"],"mappings":";;;;;;AAAA,eAAe,SAASA,KAAT,GAgBJ;AAAA,MAhBmBC,KAgBnB,uEAhB2B;AACpCC,IAAAA,uBAAuB,EAAE,EADW;AAEpCC,IAAAA,mBAAmB,EAAE;AAFe,GAgB3B;AAAA,MAARC,MAAQ;;AACT,UAAQA,MAAM,CAACC,IAAf;AAOE,SAAK,kBAAL;AACE,UAAMC,QAAQ,qBAAQL,KAAR,CAAd;;AADF,UAEUM,QAFV,GAEuEH,MAFvE,CAEUG,QAFV;AAAA,UAEoBC,6BAFpB,GAEuEJ,MAFvE,CAEoBI,6BAFpB;AAAA,UAEmDC,eAFnD,GAEuEL,MAFvE,CAEmDK,eAFnD;AAGEH,MAAAA,QAAQ,CAACH,mBAAT,CAA6BM,eAA7B,IAAgD;AAC9CF,QAAAA,QAAQ,EAARA,QAD8C;AAE9CC,QAAAA,6BAA6B,EAA7BA;AAF8C,OAAhD;AAIAF,MAAAA,QAAQ,CAACJ,uBAAT,GAAmCO,eAAnC;AACA,aAAOH,QAAP;;AAEF,SAAK,6BAAL;AACE,6CACKL,KADL;AAEEC,QAAAA,uBAAuB,EAAEE,MAAM,CAACK;AAFlC;;AAKF,SAAK,+BAAL;AACE,6CACKR,KADL;AAEEC,QAAAA,uBAAuB,EAAE;AAF3B;;AAKF;AACE,aAAOD,KAAP;AA9BJ;AAgCD","sourcesContent":["export default function inbox(state = {\n  current_conversation_id: '',\n  conversations_by_id: {\n    // { conversation_id }: {\n    //   most_recently_read_message_id: 'MESSAGE_ID'\n    //   messages: [\n    //     {\n    //       message_id,\n    //       message_text,\n    //       created_at,\n    //       read_at,\n    //       sender_id\n    //     }, {...}\n    //   ]\n    // }\n  }\n}, action) {\n  switch (action.type) {\n    // case 'SET_READ_RECEIPT':\n    //   const {most_recently_read_message_id} = action\n    //   return {\n    //     ...state,\n    //     most_recently_read_message_id\n    //   }\n    case 'SET_MESSAGE_DATA':\n      const newState = { ...state }\n      const { messages, most_recently_read_message_id, conversation_id } = action\n      newState.conversations_by_id[conversation_id] = {\n        messages, \n        most_recently_read_message_id\n      }\n      newState.current_conversation_id = conversation_id\n      return newState\n\n    case 'SET_CURRENT_CONVERSATION_ID':\n      return {\n        ...state,\n        current_conversation_id: action.conversation_id\n      }\n\n    case 'CLEAR_CURRENT_CONVERSATION_ID':\n      return {\n        ...state,\n        current_conversation_id: ''\n      }\n\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}